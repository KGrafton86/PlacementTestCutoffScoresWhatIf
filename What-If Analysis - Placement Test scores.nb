(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1354928,      28979]
NotebookOptionsPosition[   1330787,      28549]
NotebookOutlinePosition[   1338150,      28710]
CellTagsIndexPosition[   1338068,      28705]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a"],

Cell[TextData[{
 StyleBox["What-If Analysis \nusing Wolfram Mathematica",
  FontColor->RGBColor[0., 0.12549019607843137`, 0.5607843137254902]],
 " "
}], "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.699269571766136*^9, 3.699269573578824*^9}, {
   3.7099080105038958`*^9, 3.7099080108133383`*^9}, {3.727189496068931*^9, 
   3.7271894962748613`*^9}, {3.748945894434095*^9, 3.748945904624071*^9}, {
   3.748946096295101*^9, 3.748946100001289*^9}, 3.749049822679961*^9},
 Background->None,ExpressionUUID->"92508663-47f1-4deb-9615-d2c271e8e453"],

Cell["\<\
Kari Grafton
Lincoln Land Community College\
\>", "Subtitle",
 CellMargins:>Dynamic[{{0, 0}, {0, 0}}],
 CellChangeTimes->{{3.699269582406044*^9, 3.699269584285553*^9}, {
   3.7489459066126423`*^9, 3.748945933977086*^9}, 3.748946015020093*^9},
 TextAlignment->Right,
 FontColor->RGBColor[
  0.4196078431372549, 0.6705882352941176, 0.8980392156862745],
 Background->RGBColor[
  0., 0.12549019607843137`, 
   0.5607843137254902],ExpressionUUID->"14f8f51b-58e9-4033-aea1-fd611ac95bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ee3ea2a1-973b-4e9a-a704-0d8a3c30d1be"],

Cell[CellGroupData[{

Cell["What is Wolfram Mathematica?", "Section",
 CellChangeTimes->{
  3.699269664116198*^9, 3.70454748091461*^9, {3.704547516075143*^9, 
   3.7045475190812902`*^9}, {3.706294276733098*^9, 3.706294304716371*^9}, {
   3.748946121579434*^9, 3.748946128567368*^9}, {3.7489652371444073`*^9, 
   3.748965238296833*^9}},ExpressionUUID->"7da6da63-6378-4f26-b58d-\
d42a7250afa4"],

Cell["\[Bullet] Computational Intelligence Language", "Text",
 CellChangeTimes->{{3.6992696952616243`*^9, 3.6992696957779827`*^9}, {
  3.704547416597644*^9, 3.704547418388081*^9}, {3.748965224502945*^9, 
  3.74896523500648*^9}, {3.749206285848229*^9, 
  3.749206286968958*^9}},ExpressionUUID->"3b730a40-c305-44bd-95b8-\
df5440115120"],

Cell["\<\
\[Bullet] based on the way the human mind works
\[Bullet] approach to solving real-world problems where traditional modeling \
is inadequate
\[Bullet] can do basic math/statistics, but the real power lies in the \
ability to build complex models and computations\
\>", "SideNote",
 CellChangeTimes->{{3.704490202338245*^9, 3.704490203683969*^9}, {
   3.705836897624391*^9, 3.705836899275159*^9}, {3.706294401395537*^9, 
   3.706294468491722*^9}, 3.7062945586246443`*^9, {3.706295827851947*^9, 
   3.706295829348609*^9}, 3.714504905107977*^9, {3.748965527847073*^9, 
   3.748965533049202*^9}, {3.7489701936362267`*^9, 3.748970229385189*^9}, {
   3.7489702797246027`*^9, 3.748970346257189*^9}, {3.748970402612775*^9, 
   3.748970412599555*^9}, {3.7489704675336027`*^9, 3.748970481509018*^9}, {
   3.748970622384986*^9, 
   3.7489706298725452`*^9}},ExpressionUUID->"540570d5-930d-47bc-967c-\
3723ccc06c59"],

Cell["\[Bullet] Access to instant real-world data", "Text",
 CellChangeTimes->{{3.74896550134413*^9, 3.748965514154355*^9}, {
  3.74920628954746*^9, 
  3.749206292024702*^9}},ExpressionUUID->"5521171a-dab8-4f79-9a35-\
6b9daf0c488c"],

Cell["demonstrate this - population of IL by county", "SideNote",
 CellChangeTimes->{{3.704490202338245*^9, 3.704490203683969*^9}, {
   3.705836897624391*^9, 3.705836899275159*^9}, {3.706294401395537*^9, 
   3.706294492353045*^9}, {3.7062945725743217`*^9, 3.706294575468699*^9}, 
   3.70629583382937*^9, {3.714504882958736*^9, 3.714504903997396*^9}, {
   3.748965616308629*^9, 3.74896562731433*^9}, {3.7489657026176157`*^9, 
   3.748965737641446*^9}, {3.7490416146175547`*^9, 
   3.749041617721499*^9}},ExpressionUUID->"ca7d069b-192c-4c8f-a5a2-\
4fd8b37beb15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{
    NamespaceBox["LinguisticAssistant",
     DynamicModuleBox[{Typeset`query$$ = "counties in Illinois", 
      Typeset`boxes$$ = TemplateBox[{"\"US counties in Illinois\"", 
        RowBox[{"EntityClass", "[", 
          
          RowBox[{"\"AdministrativeDivision\"", ",", 
            "\"USCountiesIllinois\""}], "]"}], 
        "\"EntityClass[\\\"AdministrativeDivision\\\", \\\"USCountiesIllinois\
\\\"]\"", "\"administrative divisions\""}, "EntityClass"], 
      Typeset`allassumptions$$ = {{
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
        "Values" -> {{
          "name" -> "USCountyClass", "word" -> "the input", "desc" -> 
           "a class of US counties", "input" -> "*MC.%7E-_*USCountyClass-"}, {
          "name" -> "USState", "word" -> "Illinois", "desc" -> "a US state", 
           "input" -> "*MC.%7E-_*USState-"}}}}, Typeset`assumptions$$ = {}, 
      Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       1.105213`6.494990978132647, "Messages" -> {}}}, 
      DynamicBox[ToBoxes[
        AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
         Dynamic[Typeset`query$$], 
         Dynamic[Typeset`boxes$$], 
         Dynamic[Typeset`allassumptions$$], 
         Dynamic[Typeset`assumptions$$], 
         Dynamic[Typeset`open$$], 
         Dynamic[Typeset`querystate$$]], StandardForm],
       ImageSizeCache->{401., {11., 24.}},
       TrackedSymbols:>{
        Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
         Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
      DynamicModuleValues:>{},
      UndoTrackedVariables:>{Typeset`open$$}],
     BaseStyle->{"Deploy"},
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Name\>\"", ",", " ", "\"\<Population\>\""}], "}"}]}], "]"}],
   "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.748970983615106*^9, 3.748970987236313*^9}, {
  3.749040937953384*^9, 3.749040944150741*^9}, {3.749041225376356*^9, 
  3.749041225399652*^9}, {3.749041294336027*^9, 3.7490413275325108`*^9}, {
  3.7490414207648153`*^9, 3.749041460361459*^9}, {3.749041527046685*^9, 
  3.7490415273233*^9}},
 NumberMarks->False,
 CellLabel->"In[1]:=",ExpressionUUID->"96283960-0a49-4d64-92e5-2494b4aa3424"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 102, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], 
            Atom[
             Quantity[1, "People"]]}], 102], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[412.80000000000007`], 
             TypeSystem`PackageScope`AtomShape[75]}]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[970962970], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], 
            Atom[
             Quantity[1, "People"]]}], 102], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[970962970]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation["Adams County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"67013", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Alexander County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6780", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Bond County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"16950", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Boone County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[4, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"53585", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[4, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Brown County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[5, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6829", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[5, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Bureau County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[6, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"33587", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[6, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Calhoun County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[7, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"4899", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[7, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Carroll County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[8, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"14616", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[8, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Cass County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[9, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"12847", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[9, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Champaign County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[10, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"208861", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[10, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Christian County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[11, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"33642", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[11, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Clark County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[12, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"15979", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[12, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Clay County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[13, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"13428", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[13, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Clinton County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[14, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"37786", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[14, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Coles County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[15, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"52521", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[15, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Cook County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[16, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"5238216", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[16, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Crawford County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[17, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"19414", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[17, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Cumberland County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[18, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"10898", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[18, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["DeKalb County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[19, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"104352", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[19, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["De Witt County, Illinois, United States", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[20, 1]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"16247", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
                 
                  GeneralUtilities`Slice[20, 2]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 616980832}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 616980832}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 616980832}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 616980832}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 616980832}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 616980832][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 616980832]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[616980832][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {525., {216., 225.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.750969603595274*^9, 3.750970996400773*^9, 
  3.750971064353426*^9, 3.751023726791893*^9, 3.7511329006760902`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"9e94f23a-032d-4a3a-9313-dba74a2ba799"]
}, Closed]],

Cell["\[Bullet] Do all the work and present the results in the same place", \
"Text",
 CellChangeTimes->{{3.748968934739337*^9, 3.748968947312765*^9}, {
  3.749206294938746*^9, 
  3.7492062963547688`*^9}},ExpressionUUID->"b49dcd9c-60b2-4f04-b07b-\
1cc6f3c017d7"],

Cell["\<\
Reproducibility gives credibility
Wolfram document is called a \[OpenCurlyDoubleQuote]notebook\
\[CloseCurlyDoubleQuote]\
\>", "SideNote",
 CellChangeTimes->{{3.748968961018146*^9, 3.748968981623412*^9}, {
  3.7491594647517138`*^9, 
  3.749159474750009*^9}},ExpressionUUID->"af13a6c9-4a87-407c-abd5-\
2abac1056064"],

Cell["\[Bullet] Can run either on desktop or in the cloud", "Text",
 CellChangeTimes->{{3.749161148110806*^9, 3.7491611617695627`*^9}, {
  3.749206299252573*^9, 
  3.7492063466127357`*^9}},ExpressionUUID->"2d4b8fba-842e-4274-aec6-\
0305e153a6fe"],

Cell["\[Bullet] Part language, part knowledge base, part museum", "Text",
 CellChangeTimes->{{3.749161148110806*^9, 3.7491611617695627`*^9}, {
   3.749206299252573*^9, 3.749206317380052*^9}, 
   3.749206351188579*^9},ExpressionUUID->"74e19b31-ea37-4f04-bf3c-\
37ac24c3be2b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"26fc9377-2f6b-49b6-ad55-06ba0f6e473f"],

Cell["\<\
Quote from a presenter at the 2018 Wolfram Tech Conference; Chris Wilson, \
Time Magazine\
\>", "SideNote",
 CellChangeTimes->{{3.74896877942734*^9, 3.748968816448719*^9}, {
  3.749041071478756*^9, 3.749041074355122*^9}, {3.7506816481371727`*^9, 
  3.75068165754561*^9}},ExpressionUUID->"4159cadf-38bd-4507-b581-\
c3f992374624"],

Cell["\<\
Mathematica lends itself to telling a story in the process of writing code.\
\>", "Epigraph",
 CellMargins:>
  Dynamic[{{
    0.008099999999999998 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
     0.008099999999999998 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0001967075097025979 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.35054733864574755` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.705190309895464*^9, 3.705226861867097*^9, {3.705226913249695*^9, 
   3.7052269330639877`*^9}, 3.705329758876289*^9, 3.707494196439993*^9, {
   3.715687685563108*^9, 3.715687685938055*^9}, {3.748965869516294*^9, 
   3.7489658804497833`*^9}, {3.7489687534038267`*^9, 3.748968756032474*^9}, {
   3.749040979541005*^9, 3.749040995054331*^9}, {3.7490410565119753`*^9, 
   3.7490410648861427`*^9}, 3.749041807452942*^9, {3.7506816606165543`*^9, 
   3.7506816659219313`*^9}},
 TextAlignment->Center,
 FontColor->RGBColor[
  0., 0.12549019607843137`, 
   0.5607843137254902],ExpressionUUID->"c41d6b79-dd2f-4d63-b997-d731d8964b12"],

Cell["\<\
Fits perfectly with what we do in IR - use data to tell a story\
\>", "SideNote",
 CellChangeTimes->{{3.748968826970962*^9, 
  3.748968845904504*^9}},ExpressionUUID->"a53e5866-8935-40a2-9f32-\
17a62330c5f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ab866131-6854-4e34-a1df-4a9cef6819a8"],

Cell[CellGroupData[{

Cell["Manipulate", "Section",
 CellChangeTimes->{
  3.699269664116198*^9, 3.704547485224924*^9, {3.704547522817326*^9, 
   3.704547523721407*^9}, {3.706294282212872*^9, 3.7062943114832697`*^9}, {
   3.7490418635781717`*^9, 
   3.749041867031095*^9}},ExpressionUUID->"175d68fa-899e-4476-8c3f-\
e267a008676f"],

Cell["\<\
Enter an object, such as an expression or graphic, and identify variables \
that the user can change and immediately see the results of.\
\>", "Text",
 CellChangeTimes->{{3.749041904705122*^9, 3.749041918192814*^9}, {
   3.749041954493907*^9, 3.749041959155629*^9}, {3.74904203180023*^9, 
   3.749042094755804*^9}, {3.7490421756044903`*^9, 3.749042175859177*^9}, {
   3.74904229833294*^9, 3.749042320422936*^9}, {3.7490423799014273`*^9, 
   3.749042402940093*^9}, 3.749042572517345*^9, {3.74904261834686*^9, 
   3.749042618786723*^9}},ExpressionUUID->"abd26a0a-1d08-429b-be6c-\
c74ae72f1e79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7491606282520103`*^9, 3.7491606741322517`*^9}, 
   3.750675246013771*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"e965b3ef-6ac7-45c2-b0f3-664bf8f30bb7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 20}}, Typeset`size$$ = {12., {0., 13.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$3654$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$3654$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`x$$, 
      "Specifications" :> {{$CellContext`x$$, 1, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{193., {56., 65.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7491606620139112`*^9, 3.749160696211934*^9}, 
   3.750426384069289*^9, 3.7506755789682693`*^9, 3.750681789009433*^9, 
   3.751023727260275*^9, 3.7511329014987373`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"36ebf37f-291a-4413-bf7e-5f554df509fb"]
}, Closed]],

Cell["\<\
Intuitive interface using buttons, sliders, check boxes, drop-down menus, etc.\
\>", "Text",
 CellChangeTimes->{{3.749041904705122*^9, 3.749041918192814*^9}, {
   3.749041954493907*^9, 3.749041959155629*^9}, {3.74904203180023*^9, 
   3.749042094755804*^9}, {3.7490421756044903`*^9, 3.749042175859177*^9}, {
   3.74904229833294*^9, 3.749042320422936*^9}, {3.7490423799014273`*^9, 
   3.749042402940093*^9}, 3.7490425773061323`*^9, {3.749042621270846*^9, 
   3.7490426309429607`*^9}},ExpressionUUID->"189af723-ecff-4d21-a464-\
2bd56b3442d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f1ea6945-699f-482b-8fd0-06e69f1653cb"],

Cell[CellGroupData[{

Cell["\<\
A Practical Example: What-if Analysis of Placement Test Cutoff Scores\
\>", "Section",
 CellChangeTimes->{
  3.6992696669461823`*^9, 3.704547487208755*^9, {3.704547526705332*^9, 
   3.704547527681479*^9}, 3.706294284132339*^9, {3.706294315644496*^9, 
   3.706294318355414*^9}, {3.749042666100483*^9, 3.7490426727878923`*^9}, {
   3.7490496241409283`*^9, 
   3.7490496356652327`*^9}},ExpressionUUID->"4d99dca9-28c2-45ee-ae65-\
bfa655d56d4c"],

Cell["\<\
RESEARCH QUESTION: What would the result be on student pass/fail rate if the \
placement test cutoff scores were changed?\
\>", "Text",
 CellChangeTimes->{{3.7492052738569727`*^9, 
  3.7492052961250887`*^9}},ExpressionUUID->"3df453db-7541-4120-af63-\
3a4ab93f6f2b"],

Cell["\<\
STEPS: 
\t1. Extract and clean data
\t2. Import data into Mathematica and format 
\t3. High-level view of data
\t4. Predictive analysis
\t5. Build and test model
\t6. Deploy model\
\>", "Text",
 CellChangeTimes->{{3.749131376847644*^9, 3.7491314032402897`*^9}, {
  3.749154127876474*^9, 3.74915412892773*^9}, {3.7491578907172527`*^9, 
  3.7491579728915033`*^9}, {3.749164210352613*^9, 3.749164222944435*^9}, {
  3.749205338098092*^9, 3.749205347743737*^9}, {3.749232798721712*^9, 
  3.749232859037403*^9}, {3.7492329016328897`*^9, 
  3.7492329041235123`*^9}},ExpressionUUID->"c827be6a-8e47-4780-976e-\
9e08256e4eee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d0653087-e6fc-4117-98fa-618b3d35e3ba"],

Cell[CellGroupData[{

Cell["Step 1: Extract and Clean Data", "Section",
 CellChangeTimes->{
  3.6992696669461823`*^9, 3.70454749050467*^9, {3.704547532369433*^9, 
   3.704547533321432*^9}, {3.706294323875647*^9, 3.706294324495994*^9}, 
   3.749156574663631*^9, {3.749157978469784*^9, 3.749157988811605*^9}, {
   3.749158107223872*^9, 
   3.749158108877894*^9}},ExpressionUUID->"a6bca3fb-c161-4f12-a2a7-\
035c628e3fe4"],

Cell["\<\
\[Bullet] Cohort: all students who took a placement test in reading, writing, \
or math from 2013-2017
\[Bullet] Pulled each student\[CloseCurlyQuote]s maximum test score for each \
test
\[Bullet] Determined the lowest-level course each student placed into in each \
area\
\>", "Text",
 CellChangeTimes->{{3.749205412253181*^9, 3.749205597885605*^9}, {
  3.749205701462673*^9, 3.749205706086893*^9}, {3.7492058854077578`*^9, 
  3.749205890199711*^9}, {3.749214177342004*^9, 3.749214178209497*^9}, {
  3.749232188376771*^9, 3.749232205083343*^9}, {3.7492326556758432`*^9, 
  3.7492326808278913`*^9}},ExpressionUUID->"ee6c65f3-5d2f-4986-8d2f-\
635f66260a00"],

Cell["\<\
\[EmptySmallCircle] For college-level math, where the student could start \
with multiple classes, selected the one the student actually started with\
\>", "Text",
 CellMargins:>
  Dynamic[{{
    0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.749205713123436*^9, 3.749205729435218*^9}, {
   3.749205867161458*^9, 3.749205867511257*^9}, {3.7492059916738987`*^9, 
   3.749205996534259*^9}, 3.7492141804171057`*^9, {3.7492330647736683`*^9, 
   3.749233067356072*^9}},ExpressionUUID->"66f7b742-98c1-47c5-ab98-\
5e187a4d1a34"],

Cell["\<\
\[Bullet] For each student who completed or withdrew from the first course in \
the series, found their grade and marked whether it was successful (A, B, C, \
P) or unsuccessful (D, F, W, RP, SP)\
\>", "Text",
 CellChangeTimes->{{3.749205747094597*^9, 3.749205749020039*^9}, {
  3.749205780487059*^9, 3.749205845531558*^9}, {3.749207256350425*^9, 
  3.749207273121935*^9}, {3.7492097947939453`*^9, 3.749209811928246*^9}, {
  3.7492107221741943`*^9, 3.749210731278776*^9}, {3.749903638570241*^9, 
  3.7499036447220793`*^9}},ExpressionUUID->"869f212e-acdf-4c5e-a34d-\
ad011ea4ee74"],

Cell["\<\
\[EmptySmallCircle] Students who dropped the course, are currently taking the \
course, or have not taken the course yet were removed from the cohort
\[EmptySmallCircle] Any other grade was flagged for me to manually check\
\>", "Text",
 CellMargins:>
  Dynamic[{{
    0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.749205852860423*^9, 3.749205862920209*^9}, {
  3.749205909939972*^9, 3.749205951111587*^9}, {3.749205998698406*^9, 
  3.7492060071346703`*^9}, {3.749210734299945*^9, 3.749210743124271*^9}, {
  3.749211833056897*^9, 3.7492118440788383`*^9}, {3.749214160616582*^9, 
  3.749214172700591*^9}, {3.749233092540489*^9, 
  3.7492331778123198`*^9}},ExpressionUUID->"e5954101-d5b3-446c-b67b-\
55fcea31b46b"],

Cell["\[Bullet] Assigned a dummyID to each student to de-identify the data", \
"Text",
 CellChangeTimes->{
  3.749232689157761*^9},ExpressionUUID->"5e5f7b24-9965-43c2-bf2f-\
07aa518f2b50"],

Cell["\[Bullet] Cleaned data ", "Text",
 CellChangeTimes->{{3.749206515244459*^9, 3.749206518434628*^9}, {
  3.749206576344552*^9, 
  3.749206607832864*^9}},ExpressionUUID->"50301eb3-c135-423d-b3ee-\
2d08f92ef443"],

Cell["\<\
\[EmptySmallCircle] Corrected or removed data where the it did not fall into \
the correct range
\[EmptySmallCircle] Grades of I, AP, TR, and CL were removed\
\>", "Text",
 CellMargins:>
  Dynamic[{{
    0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.7492066172163067`*^9, 3.749206631753027*^9}, {
  3.749206862974759*^9, 3.74920690310369*^9}, {3.7492141622622013`*^9, 
  3.749214166404014*^9}, {3.749233229171311*^9, 
  3.749233229275221*^9}},ExpressionUUID->"f68704ae-9e5f-4703-a8ed-\
0805b005c614"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b9b3882f-e4b1-47bf-b75d-ae3241466e3b"],

Cell[CellGroupData[{

Cell["Step 2: Import Data to Mathematica and Format", "Section",
 CellChangeTimes->{
  3.6992696669461823`*^9, 3.70454749050467*^9, {3.704547532369433*^9, 
   3.704547533321432*^9}, {3.7051902227930613`*^9, 3.705190225159531*^9}, {
   3.70629432793958*^9, 3.706294328347148*^9}, {3.749158023948235*^9, 
   3.749158034497052*^9}, {3.7491581109130373`*^9, 
   3.7491581169569902`*^9}},ExpressionUUID->"12a70bd9-5934-43e6-bf39-\
c62eaac3650c"],

Cell["\<\
walk through what this code does :
\[Bullet] Import the file, get the data, from which sheet, how many rows, how \
many columns
\[Bullet] separate out the first row to designate as the header
\[Bullet] separate out the remaining rows to designate as the data
\[Bullet] format the data as a dataset, associating each header value with \
the appropriate value in each row, and display it \
\>", "SideNote",
 CellChangeTimes->{{3.7493172342424707`*^9, 3.749317334305377*^9}, {
   3.749317388077207*^9, 3.749317422592043*^9}, {3.749317496708853*^9, 
   3.749317512853705*^9}, 3.7493176660677757`*^9, {3.749317700057781*^9, 
   3.749317720388851*^9}, {3.749320521403225*^9, 3.749320542004325*^9}, {
   3.7493208127999067`*^9, 3.749320813207416*^9}, {3.751025311373258*^9, 
   3.751025323359016*^9}},ExpressionUUID->"68fe51a1-07cf-4d0b-b54b-\
469731aae246"],

Cell[CellGroupData[{

Cell["Reading Data", "Subsection",
 CellChangeTimes->{{3.749317173750971*^9, 
  3.74931718335081*^9}},ExpressionUUID->"f27719f8-a779-4004-a0e2-\
03663c0f738d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawReading", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</home/kari/Documents/Work/What-if Analysis/WhatIf data.xlsx\>\"", 
     ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1", ",", 
       RowBox[{"Range", "[", "1875", "]"}], ",", 
       RowBox[{"2", ";;", "6"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"readingHeader", "=", 
   RowBox[{"rawReading", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"readingRawData", "=", 
   RowBox[{"rawReading", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"readingDataSet", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"readingHeader", "\[Rule]", "#"}], "]"}], "&"}], "/@", 
     "readingRawData"}], "//", 
    RowBox[{"Map", "[", "Association", "]"}]}], "//", "Dataset"}]}]}], "Input",\

 CellChangeTimes->{{3.749233408686565*^9, 3.749233456133299*^9}, {
  3.749233648927202*^9, 3.749233704414152*^9}, {3.749234001207218*^9, 
  3.749234057383831*^9}, {3.7492341190679617`*^9, 3.749234343416401*^9}, {
  3.749317430799399*^9, 3.749317485064478*^9}, {3.749317515200498*^9, 
  3.749317516623764*^9}, {3.749320503701902*^9, 3.7493205108890743`*^9}, {
  3.749320563921434*^9, 3.749320564265419*^9}, {3.749320617599249*^9, 
  3.749320620309689*^9}, {3.749903944317669*^9, 3.749903955106565*^9}, {
  3.750969633552006*^9, 3.750969661163781*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"27f7917a-2aaf-4e31-b50e-4b364dc4dcc3"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 1874, "InitialType" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Reading", "FirstReadingCourse", "level", "grade", "outcome"}, {
            Atom[Real], 
            Atom[
             TypeSystem`Enumeration["RDG-098", "RDG-099"]], 
            Atom[
             TypeSystem`Enumeration["1 level below", "2 levels below"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 1874], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Reading"} -> 1, {All, "FirstReadingCourse"} -> 
           1, {All, "level"} -> 1, {All, "grade"} -> 1, {All, "outcome"} -> 
           1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Reading" -> TypeSystem`PackageScope`AtomShape[60], 
              "FirstReadingCourse" -> TypeSystem`PackageScope`AtomShape[63.], 
              "level" -> TypeSystem`PackageScope`AtomShape[126.], "grade" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "outcome" -> TypeSystem`PackageScope`AtomShape[108.]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2089379081], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Reading", "FirstReadingCourse", "level", "grade", "outcome"}, {
            Atom[Real], 
            Atom[
             TypeSystem`Enumeration["RDG-098", "RDG-099"]], 
            Atom[
             TypeSystem`Enumeration["1 level below", "2 levels below"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 1874], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2089379081]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382][{
                    All, "Reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[All, "Reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstReadingCourse\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstReadingCourse\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382][{
                    All, "FirstReadingCourse"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[All, "FirstReadingCourse"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"level\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"level\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382][{
                    All, "level"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[All, "level"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"grade\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"grade\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382][{
                    All, "grade"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[All, "grade"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"outcome\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"outcome\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382][{
                    All, "outcome"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[All, "outcome"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[1, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[1, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[1, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[1, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[1, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[2, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[2, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[2, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[2, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[2, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[3, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[3, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[3, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["P", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[3, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[3, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[4, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[4, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[4, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[4, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[4, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[5, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[5, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[5, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["P", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[5, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[5, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[6, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[6, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[6, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["P", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[6, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[6, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[7, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[7, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[7, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[7, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[7, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[8, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[8, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[8, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["P", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[8, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[8, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[9, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[9, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[9, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[9, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[9, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[10, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[10, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[10, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[10, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[10, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[11, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[11, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[11, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[11, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[11, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[12, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[12, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[12, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[12, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[12, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[13, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[13, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[13, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[13, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[13, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[14, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[14, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[14, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[14, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[14, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[15, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[15, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[15, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[15, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[15, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[16, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[16, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[16, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[16, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[16, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[17, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[17, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[17, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[17, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[17, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[18, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[18, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[18, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[18, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[18, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[19, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[19, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[19, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[19, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[19, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["27.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[20, 
                   Key["Reading"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RDG-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[20, 
                   Key["FirstReadingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[20, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["P", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[20, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
                 
                  GeneralUtilities`Slice[20, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1874 (-20), {1, 1874 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1874 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1874, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1874 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1874 20, {1, 1874 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1874 (-20), {1, 1874 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1874 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1874, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1874 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1874 20, {1, 1874 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 464617382]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[464617382][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {470., {226., 235.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.749234310782415*^9, 3.749234346540503*^9, {3.749317434138462*^9, 
   3.749317486808956*^9}, 3.749317517999175*^9, {3.749320556589098*^9, 
   3.749320567906507*^9}, 3.749320625186021*^9, 3.7494063477836246`*^9, 
   3.749407481661757*^9, {3.749903923082225*^9, 3.749903957088847*^9}, {
   3.750426376341045*^9, 3.750426385055561*^9}, 3.750675579996263*^9, 
   3.750681790229835*^9, 3.7509696529728193`*^9, 3.750971097984125*^9, 
   3.751023728341405*^9, 3.751132902659321*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"00146c78-f73b-4524-86c1-26c74d2dec5a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Writing Data", "Subsection",
 CellChangeTimes->{{3.749317192433496*^9, 
  3.749317194216475*^9}},ExpressionUUID->"3a6c1d0a-37c7-4553-b886-\
e6734a0b5909"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawWriting", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</home/kari/Documents/Work/What-if Analysis/WhatIf data.xlsx\>\"", 
     ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", " ", "2", ",", " ", 
       RowBox[{"Range", "[", "5415", "]"}], ",", " ", 
       RowBox[{"2", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"writingHeader", " ", "=", " ", 
   RowBox[{"rawWriting", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"writingRawData", "=", 
   RowBox[{"rawWriting", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"writingDataSet", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"writingHeader", "\[Rule]", "#"}], "]"}], "&"}], "/@", 
     "writingRawData"}], "//", 
    RowBox[{"Map", "[", "Association", "]"}]}], "//", "Dataset"}]}]}], "Input",\

 CellChangeTimes->{{3.749233411502746*^9, 3.749233412784705*^9}, {
   3.749316788189042*^9, 3.749316934240736*^9}, {3.749317525189474*^9, 
   3.749317531738612*^9}, {3.749320546831702*^9, 3.749320574488688*^9}, {
   3.749320634321311*^9, 3.7493206362656603`*^9}, {3.749903969160213*^9, 
   3.749903971631258*^9}, 3.750969559769474*^9, {3.750969708601554*^9, 
   3.7509697137560263`*^9}, 3.750972351824613*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"c21ab1e8-b4ae-47cd-ac3b-f960345e1345"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 5414, "InitialType" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "SentenceSkills", "WritingSample", "FirstWritingCourse", "level", 
            "grade", "outcome"}, {
            Atom[Real], TypeSystem`AnyType, 
            Atom[
             TypeSystem`Enumeration["EGL-098", "EGL-099", "EGL-101"]], 
            Atom[
             TypeSystem`Enumeration[
             "1 level below", "2 levels below", "college level"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 5414], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "SentenceSkills"} -> 1, {All, "WritingSample"} -> 
           1, {All, "FirstWritingCourse"} -> 1, {All, "level"} -> 
           1, {All, "grade"} -> 1, {All, "outcome"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "SentenceSkills" -> TypeSystem`PackageScope`AtomShape[60], 
              "WritingSample" -> TypeSystem`PackageScope`UnknownShape, 
              "FirstWritingCourse" -> TypeSystem`PackageScope`AtomShape[63.], 
              "level" -> TypeSystem`PackageScope`AtomShape[126.], "grade" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "outcome" -> TypeSystem`PackageScope`AtomShape[108.]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1291053239], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "SentenceSkills", "WritingSample", "FirstWritingCourse", "level", 
            "grade", "outcome"}, {
            Atom[Real], TypeSystem`AnyType, 
            Atom[
             TypeSystem`Enumeration["EGL-098", "EGL-099", "EGL-101"]], 
            Atom[
             TypeSystem`Enumeration[
             "1 level below", "2 levels below", "college level"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 5414], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1291053239]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceSkills\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceSkills\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778][{
                    All, "SentenceSkills"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[All, "SentenceSkills"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WritingSample\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WritingSample\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778][{
                    All, "WritingSample"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[All, "WritingSample"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstWritingCourse\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstWritingCourse\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778][{
                    All, "FirstWritingCourse"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[All, "FirstWritingCourse"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"level\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"level\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778][{
                    All, "level"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[All, "level"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"grade\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"grade\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778][{
                    All, "grade"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[All, "grade"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"outcome\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"outcome\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778][{
                    All, "outcome"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[All, "outcome"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["78.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[1, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[1, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[1, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[1, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[1, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[1, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["62.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[2, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[2, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[2, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[2, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[2, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[2, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["113.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[3, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[3, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[3, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[3, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[3, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[3, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["113.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[4, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[4, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[4, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[4, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[4, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[4, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["58.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[5, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[5, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[5, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[5, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[5, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[5, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["89.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[6, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[6, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[6, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[6, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[6, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[6, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["73.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[7, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[7, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[7, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[7, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[7, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[7, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["91.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[8, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[8, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[8, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[8, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[8, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[8, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["91.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[9, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[9, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[9, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[9, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[9, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[9, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[10, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[10, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[10, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[10, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[10, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[10, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["101.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[11, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[11, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[11, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[11, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[11, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[11, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[12, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[12, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[12, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[12, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[12, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[12, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["83.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[13, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[13, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[13, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[13, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[13, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[13, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[14, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[14, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[14, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[14, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[14, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[14, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["85.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[15, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[15, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[15, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[15, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[15, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[15, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["108.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[16, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[16, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[16, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[16, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[16, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[16, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["120.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[17, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[17, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[17, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[17, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[17, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[17, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["63.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[18, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[18, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[18, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[18, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["SP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[18, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[18, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["63.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[19, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[19, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[19, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[19, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[19, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[19, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["97.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[20, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[20, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[20, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[20, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[20, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
                 
                  GeneralUtilities`Slice[20, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5414 (-20), {1, 5414 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 5414 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    5414, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 5414 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5414 20, {1, 5414 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5414 (-20), {1, 5414 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 5414 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    5414, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 5414 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5414 20, {1, 5414 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 568871778]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[568871778][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {541., {226., 235.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.750972353332213*^9, 3.751023729942137*^9, 
  3.7511329043140707`*^9, 3.751144117821343*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"86b0fd4a-1b27-4763-aca1-b6f811da9faa"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Math Data", "Subsection",
 CellChangeTimes->{{3.749317203536601*^9, 
  3.749317205036462*^9}},ExpressionUUID->"3ed3a338-24e0-4a6a-b584-\
915b3db711ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawMath", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</home/kari/Documents/Work/What-if Analysis/WhatIf data.xlsx\>\"", 
     ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "3", ",", 
       RowBox[{"Range", "[", "4627", "]"}], ",", 
       RowBox[{"2", ";;", "8"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mathHeader", "=", 
   RowBox[{"rawMath", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mathRawData", "=", 
   RowBox[{"rawMath", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mathDataSet", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"mathHeader", "\[Rule]", "#"}], "]"}], "&"}], "/@", 
     "mathRawData"}], "//", 
    RowBox[{"Map", "[", "Association", "]"}]}], "//", "Dataset"}]}]}], "Input",\

 CellChangeTimes->{{3.749316956785103*^9, 3.7493171227566*^9}, 
   3.749317158122368*^9, {3.74931754795744*^9, 3.74931755790368*^9}, {
   3.749320587972097*^9, 3.7493205973076267`*^9}, {3.749320645434869*^9, 
   3.749320647175201*^9}, {3.7499039839012823`*^9, 3.7499039862672358`*^9}, 
   3.7509695675606947`*^9, {3.750969723139483*^9, 3.750969728870236*^9}, 
   3.751024462234989*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"859db0b7-f660-4a1c-8034-0ec291ab715c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 4626, "InitialType" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Arithmetic", "ElementaryAlgebra", "CollegeMath", 
            "FirstMathCourse", "level", "grade", "outcome"}, {
            Atom[Real], TypeSystem`AnyType, TypeSystem`AnyType, 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration[
             "1 level below", "2 levels below", "3 levels below", 
              "college level 1", "college level 2", "college level 3"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 4626], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Arithmetic"} -> 1, {All, "ElementaryAlgebra"} -> 
           1, {All, "CollegeMath"} -> 1, {All, "FirstMathCourse"} -> 
           1, {All, "level"} -> 1, {All, "grade"} -> 1, {All, "outcome"} -> 
           1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Arithmetic" -> TypeSystem`PackageScope`AtomShape[60], 
              "ElementaryAlgebra" -> TypeSystem`PackageScope`UnknownShape, 
              "CollegeMath" -> TypeSystem`PackageScope`UnknownShape, 
              "FirstMathCourse" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], "level" -> 
              TypeSystem`PackageScope`AtomShape[135.], "grade" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "outcome" -> TypeSystem`PackageScope`AtomShape[108.]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1307397240], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Arithmetic", "ElementaryAlgebra", "CollegeMath", 
            "FirstMathCourse", "level", "grade", "outcome"}, {
            Atom[Real], TypeSystem`AnyType, TypeSystem`AnyType, 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration[
             "1 level below", "2 levels below", "3 levels below", 
              "college level 1", "college level 2", "college level 3"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 4626], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1307397240]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Arithmetic\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Arithmetic\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][{
                    All, "Arithmetic"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[All, "Arithmetic"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ElementaryAlgebra\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ElementaryAlgebra\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][{
                    All, "ElementaryAlgebra"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[All, "ElementaryAlgebra"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CollegeMath\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CollegeMath\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][{
                    All, "CollegeMath"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[All, "CollegeMath"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstMathCourse\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstMathCourse\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][{
                    All, "FirstMathCourse"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[All, "FirstMathCourse"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"level\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"level\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][{
                    All, "level"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[All, "level"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"grade\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"grade\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][{
                    All, "grade"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[All, "grade"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"outcome\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"outcome\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][{
                    All, "outcome"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[All, "outcome"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["74.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[1, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[1, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[1, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-088", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[1, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[1, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[1, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[1, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["57.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[2, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["44.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[2, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[2, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[2, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[2, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[2, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[2, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["24.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[3, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[3, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[3, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[3, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[3, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[3, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[3, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["35.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[4, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[4, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[4, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[4, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[4, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[4, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[4, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["60.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[5, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["33.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[5, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[5, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-088", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[5, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[5, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[5, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[5, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["53.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[6, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["24.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[6, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[6, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[6, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[6, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[6, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[6, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["69.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[7, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["47.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[7, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[7, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-088", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[7, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[7, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[7, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[7, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["51.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[8, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["29.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[8, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[8, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[8, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[8, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[8, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[8, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["44.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[9, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[9, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[9, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[9, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[9, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[9, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[9, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["44.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[10, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[10, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[10, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[10, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[10, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[10, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[10, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["23.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[11, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[11, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[11, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[11, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[11, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[11, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[11, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["37.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[12, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["39.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[12, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[12, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[12, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[12, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[12, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[12, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["107.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[13, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["66.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[13, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[13, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-094", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[13, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[13, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[13, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[13, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["41.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[14, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[14, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[14, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[14, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[14, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[14, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[14, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["24.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[15, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[15, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[15, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-081", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[15, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[15, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[15, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[15, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["74.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[16, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["45.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[16, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[16, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-088", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[16, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[16, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[16, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[16, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["96.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[17, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["112.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[17, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[17, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-141", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[17, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level 1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[17, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[17, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[17, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["69.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[18, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["35.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[18, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[18, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-088", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[18, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[18, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[18, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[18, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["111.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[19, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["57.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[19, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[19, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-088", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[19, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[19, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[19, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[19, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["92.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[20, 
                   Key["Arithmetic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["48.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[20, 
                   Key["ElementaryAlgebra"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[20, 
                   Key["CollegeMath"]]], "Mouse"], 
                ImageSize -> {{0., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["MAT-088", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[20, 
                   Key["FirstMathCourse"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[20, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[20, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
                 
                  GeneralUtilities`Slice[20, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    4626 (-20), {1, 4626 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 4626 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    4626, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 4626 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    4626 20, {1, 4626 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    4626 (-20), {1, 4626 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 4626 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    4626, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 4626 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    4626 20, {1, 4626 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 809598963]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[809598963][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {623., {226., 235.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.751024463779364*^9, 3.7511329060431137`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"f544a8ab-0e3c-4036-8945-ce08e81d2416"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"129b786d-e99e-4a94-a505-976ae229c748"],

Cell[CellGroupData[{

Cell["Step 3: High-level View of Data", "Section",
 CellChangeTimes->{{3.749232873584919*^9, 
  3.749232896699704*^9}},ExpressionUUID->"3c7c5cdb-0595-4d90-9904-\
9789a581ada1"],

Cell["start with some descriptive statistics", "SideNote",
 CellChangeTimes->{{3.749320661908497*^9, 
  3.749320666126626*^9}},ExpressionUUID->"82836631-e355-4131-83ea-\
e807214d5671"],

Cell[CellGroupData[{

Cell["Distribution of Placement Test Scores", "Subsection",
 CellChangeTimes->{{3.74932067290639*^9, 
  3.749320695785412*^9}},ExpressionUUID->"8ce3bf23-deca-4e74-bcff-\
3da6838be375"],

Cell["\<\
walk through what this code does:
\[Bullet] GraphicsGrid puts all the charts into a single grid
\[Bullet] BoxWhiskerChart tells what type of chart to use
\[Bullet] indicate what data to use, all rows, which column
\[Bullet] DO show outliers
\[Bullet] add a label to the chart
\[Bullet] indicate the range of values to be shown\
\>", "SideNote",
 CellChangeTimes->{{3.749320818404641*^9, 3.749320824524014*^9}, {
  3.7494055804075317`*^9, 
  3.749405669886239*^9}},ExpressionUUID->"29f6d3bb-0ab1-4fe5-a707-\
b95f6abe1a16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "reading", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"readingDataSet", "[", 
         RowBox[{"All", ",", "\"\<Reading\>\""}], "]"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Reading\>\"", ",", "Bold", ",", "20"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "120"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", "writing", " ", "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"writingDataSet", "[", 
         RowBox[{"All", ",", "\"\<SentenceSkills\>\""}], "]"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Sentence Skills\>\"", ",", "Bold", ",", "20"}], 
          "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "120"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"writingDataSet", "[", 
         RowBox[{"All", ",", "\"\<WritingSample\>\""}], "]"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Writing Sample\>\"", ",", "Bold", ",", "20"}], "]"}]}],
         ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "8"}], "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "Red", "]"}]}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "math", " ", "*)"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"mathDataSet", "[", 
         RowBox[{"All", ",", "\"\<Arithmetic\>\""}], "]"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Arithmetic\>\"", ",", "Bold", ",", "20"}], "]"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "120"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"mathDataSet", "[", 
         RowBox[{"All", ",", "\"\<ElementaryAlgebra\>\""}], "]"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Elementary Algebra\>\"", ",", "Bold", ",", "20"}], 
          "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "120"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"mathDataSet", "[", 
         RowBox[{"All", ",", "\"\<CollegeMath\>\""}], "]"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<College Math\>\"", ",", "Bold", ",", "20"}], "]"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "120"}], "}"}]}]}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.749320707936042*^9, 3.749320732133109*^9}, {
  3.7493207726359243`*^9, 3.749320791763115*^9}, {3.749320828158849*^9, 
  3.749320847076318*^9}, {3.7494036851302967`*^9, 3.74940375131614*^9}, {
  3.749403830901698*^9, 3.749404164966357*^9}, {3.74940432911629*^9, 
  3.7494044720086803`*^9}, {3.749404536452927*^9, 3.749404569703643*^9}, {
  3.74940460260583*^9, 3.74940460296832*^9}, {3.749404788725544*^9, 
  3.7494050075006723`*^9}, {3.7494050390703087`*^9, 3.749405042736589*^9}, {
  3.749405135260427*^9, 3.749405137128314*^9}, {3.7494051882248287`*^9, 
  3.749405189965736*^9}, {3.749405234733308*^9, 3.7494052601247387`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"c7e6b262-4e2b-4983-88f2-7d21c9526bcd"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{-0.19605693430634064`, 24.6}, {2.1960569343063403`, 
          77.4}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.8039430656936596, 68.}, {1.1960569343063403`, 
                  68.}, {1.1960569343063403`, 45.}, {0.8039430656936596, 
                  45.}}], {}, {{}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.1960569343063403`, 60.}, {0.8039430656936597, 
                   60.}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  LineBox[{{{1., 45.}, {1., 27.}}, {{1., 68.}, {1., 75.}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.0980284671531702`, 27.}, {0.9019715328468298, 
                   27.}}, {{1.0980284671531702`, 75.}, {0.9019715328468298, 
                   75.}}}]}, {}}]},
              
              ImageSizeCache->{{91.58578643762691, 
               119.4142135623731}, {-49.41421356237309, \
-21.585786437626904`}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], "75.`"}, {
                 
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], "68.`"}, {
                 
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "60.`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], "45.`"}, {
                 
                  StyleBox["\"min\"", Bold, StripOnInput -> False], "27.`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 75.}, {
                 Style["75%", Bold], 68.}, {
                 Style["median", Bold], 60.}, {
                 Style["25%", Bold], 45.}, {
                 Style["min", Bold], 27.}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
       AspectRatio->Full,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7843373722630256, 24.6},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{21., 1.5000000000000568`}, {4.000000000000028, 
        31.00000000000003}},
       ImageSize->{360., 222.49223594996212`},
       PlotLabel->FormBox[
         StyleBox["\"Reading\"", Bold, 20, StripOnInput -> False], 
         TraditionalForm],
       PlotRange->{{-0.3156626277369747, 2.3156626277369745`}, {-6., 126.}},
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}], {193.5, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{-0.19605693430634064`, -4.95}, {2.1960569343063403`, 
          125.95}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.8039430656936596, 96.}, {1.1960569343063403`, 
                  96.}, {1.1960569343063403`, 69.}, {0.8039430656936596, 
                  69.}}], {}, {{
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 26.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 24.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 10.}]}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.1960569343063403`, 83.}, {0.8039430656936597, 
                   83.}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1., 69.}, {1., 29.}}, {{1., 96.}, {1., 
                   120.}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.0980284671531702`, 29.}, {0.9019715328468298, 
                   29.}}, {{1.0980284671531702`, 120.}, {0.9019715328468298, 
                   120.}}}]}, {}}]},
              
              ImageSizeCache->{{91.58578643762691, 
               119.4142135623731}, {-72.41421356237309, \
-5.2219661546413505`}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], "120.`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], "96.`"}, {
                 
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "83.`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], "69.`"}, {
                 
                  StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 120.}, {
                 Style["75%", Bold], 96.}, {
                 Style["median", Bold], 83.}, {
                 Style["25%", Bold], 69.}, {
                 Style["min", Bold], 1.}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
       AspectRatio->Full,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7843373722630256, -4.95},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{21., 1.5000000000000568`}, {4.000000000000028, 
        31.00000000000003}},
       ImageSize->{360., 222.49223594996212`},
       PlotLabel->FormBox[
         StyleBox["\"Sentence Skills\"", Bold, 20, StripOnInput -> False], 
         TraditionalForm],
       PlotRange->{{-0.3156626277369747, 
        2.3156626277369745`}, {-11.197500000000002`, 126.2475}},
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}], {580.5, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{-0.19605693430634064`, -0.4}, {2.1960569343063403`, 
          8.4}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.8039430656936596, 5.}, {1.1960569343063403`, 
                  5.}, {1.1960569343063403`, 4.}, {0.8039430656936596, 
                  4.}}], {}, {{
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 2.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 7.}]}, {
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 1.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 8.}]}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.1960569343063403`, 4.}, {0.8039430656936597, 
                   4.}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  LineBox[{{{1., 4.}, {1., 3.}}, {{1., 5.}, {1., 6.}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.0980284671531702`, 3.}, {0.9019715328468298, 
                   3.}}, {{1.0980284671531702`, 6.}, {0.9019715328468298, 
                   6.}}}]}, {}}]},
              
              ImageSizeCache->{{91.58578643762691, 
               119.4142135623731}, {-77.86747158147405, \
-5.2219661546413505`}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], "8.`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], "5.`"}, {
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "4.`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], "4.`"}, {
                  StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 8.}, {
                 Style["75%", Bold], 5.}, {
                 Style["median", Bold], 4.}, {
                 Style["25%", Bold], 4.}, {
                 Style["min", Bold], 0.}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
       AspectRatio->Full,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7843373722630256, -0.4},
       AxesStyle->Directive[
         RGBColor[1, 0, 0]],
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{21., 1.5000000000000568`}, {4.000000000000028, 
        31.00000000000003}},
       ImageSize->{360., 222.49223594996212`},
       PlotLabel->FormBox[
         StyleBox["\"Writing Sample\"", Bold, 20, StripOnInput -> False], 
         TraditionalForm],
       PlotRange->{{-0.3156626277369747, 
        2.3156626277369745`}, {-0.8200000000000001, 8.42}},
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}], {967.5, -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{-0.19605693430634064`, -2.8500000000000005`}, {
          2.1960569343063403`, 125.85}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.8039430656936596, 83.}, {1.1960569343063403`, 
                  83.}, {1.1960569343063403`, 35.}, {0.8039430656936596, 
                  35.}}], {}, {{}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.1960569343063403`, 62.}, {0.8039430656936597, 
                   62.}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  LineBox[{{{1., 35.}, {1., 3.}}, {{1., 83.}, {1., 120.}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.0980284671531702`, 3.}, {0.9019715328468298, 
                   3.}}, {{1.0980284671531702`, 120.}, {0.9019715328468298, 
                   120.}}}]}, {}}]},
              
              ImageSizeCache->{{91.58578643762691, 
               119.4142135623731}, {-71.41421356237309, \
-10.585786437626904`}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], "120.`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], "83.`"}, {
                 
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "62.`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], "35.`"}, {
                 
                  StyleBox["\"min\"", Bold, StripOnInput -> False], "3.`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 120.}, {
                 Style["75%", Bold], 83.}, {
                 Style["median", Bold], 62.}, {
                 Style["25%", Bold], 35.}, {
                 Style["min", Bold], 3.}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
       AspectRatio->Full,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7843373722630256, -2.8500000000000005`},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{21., 1.5000000000000568`}, {4.000000000000028, 
        31.00000000000003}},
       ImageSize->{360., 222.49223594996212`},
       PlotLabel->FormBox[
         StyleBox["\"Arithmetic\"", Bold, 20, StripOnInput -> False], 
         TraditionalForm],
       PlotRange->{{-0.3156626277369747, 2.3156626277369745`}, {-8.9925, 
        126.1425}},
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}], {193.5, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{-0.19605693430634064`, 16.05}, {2.1960569343063403`, 
          124.95}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.8039430656936596, 84.}, {1.1960569343063403`, 
                  84.}, {1.1960569343063403`, 46.25}, {0.8039430656936596, 
                  46.25}}], {}, {{}, {}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.1960569343063403`, 66.}, {0.8039430656936597, 
                   66.}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1., 46.25}, {1., 21.}}, {{1., 84.}, {1., 
                   120.}}}]}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.0980284671531702`, 21.}, {0.9019715328468298, 
                   21.}}, {{1.0980284671531702`, 120.}, {0.9019715328468298, 
                   120.}}}]}, {}}]},
              
              ImageSizeCache->{{91.58578643762691, 
               119.4142135623731}, {-72.41421356237309, \
-18.585786437626904`}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], "120.`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], "84.`"}, {
                 
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "66.`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                  "46.25`"}, {
                  StyleBox["\"min\"", Bold, StripOnInput -> False], "21.`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 120.}, {
                 Style["75%", Bold], 84.}, {
                 Style["median", Bold], 66.}, {
                 Style["25%", Bold], 46.25}, {
                 Style["min", Bold], 21.}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
       AspectRatio->Full,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7843373722630256, 16.05},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{21., 1.5000000000000568`}, {4.000000000000028, 
        31.00000000000003}},
       ImageSize->{360., 222.49223594996212`},
       PlotLabel->FormBox[
         StyleBox["\"Elementary Algebra\"", Bold, 20, StripOnInput -> False], 
         TraditionalForm],
       PlotRange->{{-0.3156626277369747, 2.3156626277369745`}, {-6., 126.}},
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}], {580.5, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{-0.19605693430634064`, -5.4}, {2.1960569343063403`, 
          113.4}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GraphicsGroupBox[{Antialiasing -> False, 
                 
                 PolygonBox[{{0.8039430656936596, 43.}, {1.1960569343063403`, 
                  43.}, {1.1960569343063403`, 26.}, {0.8039430656936596, 
                  26.}}], {}, {{
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 0.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 71.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 71.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 78.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 78.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 75.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 84.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 75.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 81.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 72.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 71.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 69.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 76.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 80.}]}, {
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 108.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 100.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 108.}], 
                   InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {1., 108.}]}}, {}, {
                  GrayLevel[0], 
                  GrayLevel[1], 
                  
                  LineBox[{{1.1960569343063403`, 33.}, {0.8039430656936597, 
                   33.}}]}, {}, {
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  LineBox[{{{1., 26.}, {1., 4.}}, {{1., 43.}, {1., 68.}}}]}, {
                 
                  GrayLevel[0], 
                  GrayLevel[0.5], 
                  
                  LineBox[{{{1.0980284671531702`, 4.}, {0.9019715328468298, 
                   4.}}, {{1.0980284671531702`, 68.}, {0.9019715328468298, 
                   68.}}}]}, {}}]},
              
              ImageSizeCache->{{91.58578643762691, 
               119.4142135623731}, {-72.05810007743666, -4.945329416353857}}],
             
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], "108.`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], "43.`"}, {
                 
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "33.`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], "26.`"}, {
                 
                  StyleBox["\"min\"", Bold, StripOnInput -> False], "0.`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 108.}, {
                 Style["75%", Bold], 43.}, {
                 Style["median", Bold], 33.}, {
                 Style["25%", Bold], 26.}, {
                 Style["min", Bold], 0.}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
       AspectRatio->Full,
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7843373722630256, -5.4},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.8039430656936596, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           1.1960569343063403`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{21., 1.5000000000000568`}, {4.000000000000028, 
        31.00000000000003}},
       ImageSize->{360., 222.49223594996212`},
       PlotLabel->FormBox[
         StyleBox["\"College Math\"", Bold, 20, StripOnInput -> False], 
         TraditionalForm],
       PlotRange->{{-0.3156626277369747, 
        2.3156626277369745`}, {-11.670000000000002`, 126.27}},
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.8039430656936596, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          1.1960569343063403`, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}], {967.5, -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}}, {}},
  ContentSelectable->True,
  ImageSize->{826.6666666666667, 336.},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.749404125910985*^9, 3.749404171245764*^9, {3.749404446560483*^9, 
   3.749404476196216*^9}, {3.749404562974703*^9, 3.749404574182267*^9}, 
   3.7494046074028387`*^9, {3.749404802044023*^9, 3.7494048295787897`*^9}, {
   3.749404895162182*^9, 3.74940492157904*^9}, 3.749404962956531*^9, 
   3.749404997454118*^9, 3.7494050468341503`*^9, 3.749405141265835*^9, {
   3.7494052504574013`*^9, 3.749405264355011*^9}, 3.750426394866599*^9, 
   3.750675589471187*^9, 3.750681798634444*^9, 3.75097113096233*^9, 
   3.751023736909593*^9, 3.7511329125604153`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"cd112fa7-b819-4668-8e48-e61466217808"]
}, Closed]],

Cell["\<\
\[Bullet] Reading scores appear skewed because if student scored 76 or above, \
they do not need any class in this category, so they are not included in this \
data set
\[Bullet] Note that the scale on the writing sample test is different from \
all the others \
\>", "SideNote",
 CellChangeTimes->{{3.7493207329684362`*^9, 3.7493207696241827`*^9}, {
  3.749485113561143*^9, 
  3.749485178867691*^9}},ExpressionUUID->"25891f4a-a7d5-40fb-9486-\
5975f66e6160"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bar Chart of Course Placement", "Subsection",
 CellChangeTimes->{{3.749406207227407*^9, 
  3.7494062179825687`*^9}},ExpressionUUID->"d5cdaf2c-9319-492e-80d2-\
92eeee163aca"],

Cell["\<\
walk through what this code does:
\[Bullet] levelOrder sets the order the bars should be in
\[Bullet] BarChart says to make a bar chart
\[Bullet] KeyTake uses the levelOrder to order the bars
\[Bullet] Counts pulls the count for each level, using all rows and only the \
level column
\[Bullet] ChartLabels adds the label names to the bars\
\>", "SideNote",
 CellChangeTimes->{{3.7494880869761753`*^9, 3.7494880921824636`*^9}, {
  3.749488210078092*^9, 
  3.749488291855475*^9}},ExpressionUUID->"659a8e45-54d6-4cd8-99be-\
d125567ee3b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "orders", " ", "the", " ", "bars", " ", "in", " ", "the", " ", "chart", 
    " ", "correctly"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"levelOrder", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<3 levels below\>\"", ",", "\"\<2 levels below\>\"", ",", 
       "\"\<1 level below\>\"", ",", "\"\<college level\>\"", ",", 
       "\"\<college level 1\>\"", ",", "\"\<college level 2\>\"", ",", 
       "\"\<college level 3\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "reading", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"KeyTake", "[", 
      RowBox[{
       RowBox[{"Counts", "[", 
        RowBox[{"readingDataSet", "[", 
         RowBox[{"All", ",", "\"\<level\>\""}], "]"}], "]"}], ",", 
       "levelOrder"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Reading Placement\>\"", ",", "Bold", ",", "20"}], "]"}]}],
      ",", 
     RowBox[{"ChartLabels", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "writing", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"KeyTake", "[", 
      RowBox[{
       RowBox[{"Counts", "[", 
        RowBox[{"writingDataSet", "[", 
         RowBox[{"All", ",", "\"\<level\>\""}], "]"}], "]"}], ",", 
       "levelOrder"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Writing Placement\>\"", ",", "Bold", ",", "20"}], "]"}]}],
      ",", 
     RowBox[{"ChartLabels", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "math", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"KeyTake", "[", 
      RowBox[{
       RowBox[{"Counts", "[", 
        RowBox[{"mathDataSet", "[", 
         RowBox[{"All", ",", "\"\<level\>\""}], "]"}], "]"}], ",", 
       "levelOrder"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Math Placement\>\"", ",", "Bold", ",", "20"}], "]"}]}], 
     ",", 
     RowBox[{"ChartLabels", "\[Rule]", "Automatic"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.749406312029334*^9, 3.749406357127939*^9}, {
  3.749406507352943*^9, 3.74940659251297*^9}, {3.74940678783645*^9, 
  3.749406791834655*^9}, {3.749406854500551*^9, 3.74940685948171*^9}, {
  3.749406918713431*^9, 3.749407103845723*^9}, {3.749407153592684*^9, 
  3.74940715491672*^9}, {3.749407238667148*^9, 3.749407326215959*^9}, {
  3.7494073611168337`*^9, 3.749407371498699*^9}, {3.7494074655275917`*^9, 
  3.7494074716397467`*^9}, {3.7494075181756563`*^9, 3.7494075204181023`*^9}, {
  3.749486946169688*^9, 3.7494869705328074`*^9}, {3.7494880365470533`*^9, 
  3.7494880684286613`*^9}, {3.749488103542726*^9, 3.7494881315688562`*^9}, {
  3.749488202038268*^9, 3.749488204181411*^9}, {3.74948829818425*^9, 
  3.7494883166961737`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"2d0b251d-f877-4815-92c2-9e241c3dcf6f"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 893.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.68514689954782`, 
           300.4017943809109}, {-131.75437765002718`, 179.89176629090704`}}],
         StatusArea[#, 893]& ,
         TagBoxNote->"893"],
        StyleBox["893", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[893, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
            981.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{311.85228329334245`, 
           421.56893077470556`}, {-162.42835376066793`, 179.89176629090704`}}],
         StatusArea[#, 981]& ,
         TagBoxNote->"981"],
        StyleBox["981", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[981, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"2 levels below\"\>", Offset[{0, -2}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"1 level below\"\>", Offset[{0, -2}, {2., 0.}], {0, 1},
            Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{808.3666666666659, Automatic},
  PlotLabel->FormBox[
    StyleBox["\"Reading Placement\"", Bold, 20, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.7494073283978167`*^9, 3.749407497704221*^9, 
  3.74948813748975*^9, 3.7494883236209373`*^9, 3.750426396524139*^9, 
  3.750675591051457*^9, 3.750681800428986*^9, 3.7509711736404047`*^9, 
  3.751023738513154*^9, 3.751132914221984*^9, 3.751144166509409*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"17297a5c-1e53-420c-aa59-3a0933900a8d"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.4116533139111435, 0.}, {4.35360524399126, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 684.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{135.33820404985437`, 242.142715931078}, {
           116.18330782481519`, 179.89176629090707`}}],
         StatusArea[#, 684]& ,
         TagBoxNote->"684"],
        StyleBox["684", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[684, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
            3693.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{253.27825232501175`, 
           360.0827642062353}, {-162.42835376066802`, 179.89176629090707`}}],
         StatusArea[#, 3693]& ,
         TagBoxNote->"3693"],
        StyleBox["3693", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3693, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
            1037.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{371.21830060016913`, 478.0228124813927}, {
           83.49805806088179, 179.89176629090707`}}],
         StatusArea[#, 1037]& ,
         TagBoxNote->"1037"],
        StyleBox["1037", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1037, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.4116533139111435, 0.}, {4.430862345229425, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{3.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.4512017479970867`, 
            0.}]}], {{}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"2 levels below\"\>", Offset[{0, -2}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"1 level below\"\>", Offset[{0, -2}, {2., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"college level\"\>", Offset[{0, -2}, {3., 0.}], {0, 1},
            Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4116533139111435, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{808.3666666666659, Automatic},
  PlotLabel->FormBox[
    StyleBox["\"Writing Placement\"", Bold, 20, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.7494073283978167`*^9, 3.749407497704221*^9, 
  3.74948813748975*^9, 3.7494883236209373`*^9, 3.750426396524139*^9, 
  3.750675591051457*^9, 3.750681800428986*^9, 3.7509711736404047`*^9, 
  3.751023738513154*^9, 3.751132914221984*^9, 3.751144166710106*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"06f79174-0ced-4538-bfda-c2ea8ad755d5"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6579999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
            2136.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.041479827225004`, 
           117.34389842255923`}, {-162.428353760668, 179.89176629090704`}}],
         StatusArea[#, 2136]& ,
         TagBoxNote->"2136"],
        StyleBox["2136", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2136, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
            888.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{126.04579438040811`, 210.34821297574234`}, {
           37.359806269465736`, 179.89176629090704`}}],
         StatusArea[#, 888]& ,
         TagBoxNote->"888"],
        StyleBox["888", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[888, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
            929.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{219.05010893359122`, 303.35252752892546`}, {
           30.796252935142434`, 179.89176629090704`}}],
         StatusArea[#, 929]& ,
         TagBoxNote->"929"],
        StyleBox["929", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[929, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 644.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{312.0544234867744, 396.3568420821086}, {
           76.42095294202393, 179.89176629090704`}}],
         StatusArea[#, 644]& ,
         TagBoxNote->"644"],
        StyleBox["644", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[644, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 25.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{405.0587380399575, 489.3611566352917}, {
           175.51459962363674`, 179.89176629090704`}}],
         StatusArea[#, 25]& ,
         TagBoxNote->"25"],
        StyleBox["25", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[25, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{498.0630525931406, 582.3654711884749}, {
           178.8764196241438, 179.89176629090704`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{6.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], 
           LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"3 levels below\"\>", Offset[{0, -2}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"2 levels below\"\>", Offset[{0, -2}, {2., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"1 level below\"\>", Offset[{0, -2}, {3., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"college level 1\"\>", Offset[{0, -2}, {4., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"college level 2\"\>", Offset[{0, -2}, {5., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"college level 3\"\>", Offset[{0, -2}, {6., 0.}], {0, 1},
            Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.43075018208302984`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{808.3666666666659, Automatic},
  PlotLabel->FormBox[
    StyleBox["\"Math Placement\"", Bold, 20, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.7494073283978167`*^9, 3.749407497704221*^9, 
  3.74948813748975*^9, 3.7494883236209373`*^9, 3.750426396524139*^9, 
  3.750675591051457*^9, 3.750681800428986*^9, 3.7509711736404047`*^9, 
  3.751023738513154*^9, 3.751132914221984*^9, 3.751144166870089*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"5aa2d2c1-6256-43ec-b652-e31031a54682"]
}, Closed]],

Cell["\<\
From this we see that math college level 2 and college level 3 do not have \
enough data to perform an analysis\
\>", "SideNote",
 CellChangeTimes->{{3.749490293224667*^9, 
  3.749490316175596*^9}},ExpressionUUID->"2ea15581-744c-45aa-868e-\
9201135d20cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0ce15a32-3d8e-49a9-a099-352b7a9d8779"],

Cell[CellGroupData[{

Cell["Step 4: Predictive Analysis", "Section",
 CellChangeTimes->{{3.749164238523102*^9, 3.749164243948317*^9}, {
  3.749232907411808*^9, 
  3.749232907917573*^9}},ExpressionUUID->"85067ebb-ae6e-4e56-b434-\
e826b884284d"],

Cell["\<\
Build a model to predict what the result on outcomes is when we increase or \
decrease the placement score cutoffs
Independent variable - test score(s); Dependent variable - success in first \
course of sequence\
\>", "SideNote",
 CellChangeTimes->{{3.749164253345316*^9, 3.749164277747321*^9}, {
  3.749490337708435*^9, 3.749490404668954*^9}, {3.7494914387812223`*^9, 
  3.74949146471441*^9}, {3.751025351530881*^9, 
  3.751025352466667*^9}},ExpressionUUID->"0c0a4ce2-2901-4ba1-8e13-\
0dbf9d7d31cb"],

Cell[CellGroupData[{

Cell["Reading", "Subsection",
 CellChangeTimes->{{3.750970686423873*^9, 
  3.750970687260214*^9}},ExpressionUUID->"bdd6ca15-f445-4895-a8e3-\
532d75b035b2"],

Cell["\<\
\[Bullet] Tried classifying based on grades instead of outcome - accuracy \
dropped to around 20-25%
\[Bullet] Tried classifying the different first courses separately - accuracy \
dropped to around 60-65%\
\>", "SideNote",
 CellChangeTimes->{{3.749638380311907*^9, 3.749638400892254*^9}, {
  3.749638560075136*^9, 3.74963859695929*^9}, {3.7509698617255793`*^9, 
  3.7509699125230083`*^9}, {3.750970377481472*^9, 
  3.7509703791046877`*^9}},ExpressionUUID->"92bb81df-3655-4a89-a109-\
1353ad1cf221"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "format", " ", "dataset", " ", "as", " ", "list", " ", "of", " ", 
    "rules"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"reading", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Riffle", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"readingDataSet", "[", 
              RowBox[{"All", ",", "\"\<Reading\>\""}], "]"}], "//", 
             "Normal"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"readingDataSet", "[", 
              RowBox[{"All", ",", "\"\<FirstReadingCourse\>\""}], "]"}], "//",
              "Normal"}]}], "\[IndentingNewLine]", "}"}], "~", "Flatten", "~", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], "~", "Partition", "~", "2"}], "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a_", ",", "b_"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"readingDataSet", "[", 
          RowBox[{"All", ",", "\"\<outcome\>\""}], "]"}], "//", "Normal"}]}], 
       "\[IndentingNewLine]", "]"}], "~", "Partition", "~", "2"}], "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"a", "\[Rule]", "b"}], "}"}]}]}], "//", 
    "Flatten"}]}]}]], "Input",
 CellChangeTimes->{{3.749502909405373*^9, 3.749503099948264*^9}, {
   3.749503174423764*^9, 3.74950325558495*^9}, {3.7495035576799307`*^9, 
   3.7495035592658052`*^9}, {3.750675528292178*^9, 3.750675552319631*^9}, {
   3.750675915225037*^9, 3.750675933958935*^9}, {3.750973371210869*^9, 
   3.7509733892668657`*^9}, 3.7509799454648647`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"13511069-bd5d-4976-a26c-a81f395c780a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"27.`", ",", "\<\"RDG-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"27.`", ",", "\<\"RDG-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"27.`", ",", "\<\"RDG-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"27.`", ",", "\<\"RDG-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"27.`", ",", "\<\"RDG-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"27.`", ",", "\<\"RDG-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"27.`", ",", "\<\"RDG-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           TemplateBox[{"1860"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75.`", ",", "\<\"RDG-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75.`", ",", "\<\"RDG-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75.`", ",", "\<\"RDG-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75.`", ",", "\<\"RDG-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75.`", ",", "\<\"RDG-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75.`", ",", "\<\"RDG-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75.`", ",", "\<\"RDG-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{45., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 20, 33463310250297414014, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{51., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 20, 33463310250297414014, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{38., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 20, 33463310250297414014, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{68., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33463310250297414014 === $SessionID, 
   Out[20], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.750675554257284*^9, 3.750675591608171*^9, 
  3.750681801181789*^9, 3.7509712245268784`*^9, 3.750973389892572*^9, 
  3.751023738938211*^9, 3.75113291467311*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"fc281500-cf75-4f5a-963c-6eb6665040ab"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "the", " ", "accuracy", " ", "of", " ", "each", " ", 
    "classifier", " ", "method"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"ClassifierInformation", "[", 
        RowBox[{
         RowBox[{"Classify", "[", 
          RowBox[{"reading", ",", 
           RowBox[{"\"\<Method\>\"", "\[Rule]", "#"}]}], "]"}], ",", 
         "\"\<Accuracy\>\""}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<DecisionTree\>\"", ",", "\"\<GradientBoostedTrees\>\"", ",", 
      "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
      "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
      "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
      "\"\<SupportVectorMachine\>\""}], "}"}]}], "//", "Dataset"}]}]], "Input",\

 CellChangeTimes->{{3.749504523334203*^9, 3.749504529329852*^9}, {
  3.7496372021929197`*^9, 3.7496373630263166`*^9}, {3.7496374184816923`*^9, 
  3.749637467967256*^9}, {3.749903380014001*^9, 3.7499034076566687`*^9}, {
  3.75096992535985*^9, 3.750969929878743*^9}, {3.750970093139823*^9, 
  3.750970094371682*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"eb26f32c-1309-4b1f-ae84-1f411d9939c8"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 9, "Length" -> 9, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], TypeSystem`AnyType}], 9], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
             TypeSystem`PackageScope`UnknownShape}]], 9, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[847730324], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], TypeSystem`AnyType}], 9], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[847730324]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation["DecisionTree", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7290073028053518`", "\[PlusMinus]", 
                    "0.04471032763962357`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["GradientBoostedTrees", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7055956675735608`", "\[PlusMinus]", 
                    "0.037403051044388305`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LogisticRegression", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7040330113926908`", "\[PlusMinus]", 
                    "0.021566135785401924`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Markov", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[4, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6788131807590824`", "\[PlusMinus]", 
                    "0.028844111135950787`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[4, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NaiveBayes", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[5, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6753807110464277`", "\[PlusMinus]", 
                    "0.03022415309886744`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[5, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NearestNeighbors", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[6, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6912333177213161`", "\[PlusMinus]", 
                    "0.03229345315657933`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[6, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NeuralNetwork", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[7, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.697940411931675`", "\[PlusMinus]", 
                    "0.016413390425345186`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[7, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["RandomForest", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[8, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7083400402995675`", "\[PlusMinus]", 
                    "0.06465841224709089`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[8, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["SupportVectorMachine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[9, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7000079473676185`", "\[PlusMinus]", 
                    "0.015030836032494367`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
                  GeneralUtilities`Slice[9, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1847079299][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1847079299]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1847079299][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {334., {100.5, 109.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7496376091742487`*^9, 3.750426448976088*^9, 
  3.75067574359156*^9, 3.750681934238035*^9, 3.750970245189213*^9, 
  3.750970480238392*^9, 3.7509713968627167`*^9, 3.750971585266604*^9, 
  3.7510238668129263`*^9, 3.751133049282724*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"32e14e71-1659-4dc4-89eb-363f705362a7"]
}, Open  ]],

Cell["\<\
Decision tree says it has the best accuracy, but when I run some tests using \
the model built using a decision tree, the outputs don\[CloseCurlyQuote]t \
make sense (e.g., it said a student with a score of 120 on the placement test \
had about a 66% chance of passing RDG-098)\
\>", "SideNote",
 CellChangeTimes->{{3.750970896121089*^9, 3.750970919987949*^9}, {
  3.750970964310519*^9, 3.750970977966474*^9}, {3.7509716197766447`*^9, 
  3.750971641669249*^9}, {3.750974241959223*^9, 
  3.750974252918071*^9}},ExpressionUUID->"c863a68c-2c59-4b43-a5ec-\
bdd0fd935510"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "build", " ", "model", " ", "with", " ", "classifier", " ", "that", " ", 
    "gives", " ", "the", " ", "best", " ", "results"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClassifierInformation", "[", 
   RowBox[{"classifyReading", "=", 
    RowBox[{"Classify", "[", 
     RowBox[{"reading", ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.750423042653324*^9, 3.750423065113562*^9}, {
  3.750423191236031*^9, 3.750423196053418*^9}, {3.750607023831954*^9, 
  3.7506070255083857`*^9}, {3.750607060584731*^9, 3.750607063751381*^9}, {
  3.7506758252498693`*^9, 3.75067583142166*^9}, {3.750970058168234*^9, 
  3.7509700880133657`*^9}, {3.750970489363139*^9, 3.750970490930704*^9}, {
  3.750970522165021*^9, 3.7509705379608603`*^9}, {3.750970715268507*^9, 
  3.750970718420223*^9}, {3.7509716485455303`*^9, 3.750971651583808*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"32ffd27d-691d-4cb4-98e3-93fbcafbb089"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              RowBox[{"{", 
               RowBox[{"\<\"Numerical\"\>", ",", "\<\"Nominal\"\>"}], "}"}]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Classes\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",","\",\"","\"successful\"","\"unsuccessful\""},
               "RowWithSeparators"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{
                   "70.4033011392690752928`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod],
                  StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "2.1566135785401923108`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  
                  TemplateBox[{
                   "66.0900739821886844538`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                  "\", \"", 
                  
                  TemplateBox[{
                   "74.7165282963494661317`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                  "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                Row[{"95% confidence interval: [", 
                  Quantity[66.0900739821886844538`3., "Percent"], ", ", 
                  Quantity[74.7165282963494661317`3., "Percent"], "]"}], 
                "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"LogisticRegression\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], 
                    Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"L1Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "L2Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "OptimizationMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1],
                     "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1389548057], "Type" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], 
                    Atom[String]}], "HandleQ" -> True, "RowTarget" -> 20, 
                    "Data" -> TypeSystem`PackageScope`CacheHandle[
                    1389548057]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 164747303][{
                    
                    Key["L1Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 164747303][{
                    
                    Key["L2Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.01"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 164747303][{
                    
                    Key["OptimizationMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["LBFGS", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 164747303][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    164747303]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    164747303][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                  "OptimizationMethod" -> "LBFGS"], 
                 
                 TypeSystem`Struct[{
                  "L1Regularization", "L2Regularization", 
                   "OptimizationMethod"}, {
                   Atom[Integer], 
                   Atom[Real], 
                   Atom[String]}], 
                 Association["ID" -> 117596358152734]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Single evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "4.`",RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Batch evaluation speed\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
               "52.9`",
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}],"examples per millisecond",
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.6164573129361592407`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0201579334871859264`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.5761414459617874018`3.",
                   "\", \"", "0.6567731799105310797`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.5761414459617874018`3., 
                  ", ", 0.6567731799105310797`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"267.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1874","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3.76`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4485387708358706}, {
                    3.912023005428146, -0.4642465718772299}, {
                    5.703782474656201, -0.48376619975447127`}, {
                    7.312553498102598, -0.4604948084198423}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    2.302585092994046, -0.4485387708358706}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    3.912023005428146, -0.4642465718772299}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    5.703782474656201, -0.48376619975447127`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    7.312553498102598, -0.4604948084198423}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[
                    1.6]]}, {}}}, {{}, {{}, {}}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.4677092581458978}, {
                    2.302585092994046, -0.4297288889634182}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, -0.5046746211006952}, {
                    3.912023005428146, -0.4253896383330468}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.703782474656201, -0.5170124235227894}, {
                    5.703782474656201, -0.4515898146513077}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.312553498102598, -0.5039468541441817}, {
                    7.312553498102598, -0.4188524799149491}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.485723279138838, -0.4485387708358706}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.195784167079672, -0.485723279138838}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.485723279138838, -0.4485387708358706}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{{2.302585092994046, 0.6931156443248117}, {
                    3.912023005428146, 0.7073042969522852}, {
                    5.703782474656201, 0.7040330113926908}, {
                    7.312553498102598, 0.686703935258754}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {2.302585092994046, 
                    0.6931156443248117}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {3.912023005428146, 
                    0.7073042969522852}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {5.703782474656201, 
                    0.7040330113926908}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {7.312553498102598, 
                    0.686703935258754}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {0.6702146686934252, 1}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.195784167079672, 0.6702146686934252}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {0.6702146686934252, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3701101694350343}, {
                    3.912023005428146, -0.3701151654218683}, {
                    5.703782474656201, -0.37014831694362277`}, {
                    7.312553498102598, -0.37046070384976754`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4438433276726656}, {
                    3.912023005428146, -0.4642465718772299}, {
                    5.703782474656201, -0.4732124168318287}, {
                    7.312553498102598, -0.45700816287559076`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3749848106089919}, {
                    3.912023005428146, -0.4100511055663048}, {
                    5.703782474656201, -0.4623051662110051}, {
                    7.312553498102598, -0.4604948084198423}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4021544844963282}, {
                    3.912023005428146, -0.4245408896711461}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37016128312194957`}, {
                    3.912023005428146, -0.37064928262104013`}, {
                    5.703782474656201, -0.37347054263423357`}, {
                    7.312553498102598, -0.3833613329103843}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4378395990978272}, {
                    3.912023005428146, -0.4516859074774784}, {
                    5.703782474656201, -0.4801482125701662}, {
                    7.312553498102598, -0.4569374765498977}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4393947571876499}, {
                    3.912023005428146, -0.45998307381873255`}, {
                    5.703782474656201, -0.48376619975447127`}, {
                    7.312553498102598, -0.4569250032895412}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.30453260026052853`}, {
                    3.912023005428146, -0.42259534067308946`}, {
                    5.703782474656201, -0.4649170773320676}, {
                    7.312553498102598, -0.4565703939069443}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4485387708358706}, {
                    3.912023005428146, -0.4528704469937313}, {
                    5.703782474656201, -0.4678101649879064}, {
                    7.312553498102598, -0.4566296844132747}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3701149670660825}, {
                    3.912023005428146, -0.3701682850796523}, {
                    5.703782474656201, -0.3704535874201922}, {
                    7.312553498102598, -0.37055891342866093`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3701101694350343}}, {{
                    3.912023005428146, -0.3701151654218683}}, {{
                    5.703782474656201, -0.37014831694362277`}}, {{
                    7.312553498102598, -0.37046070384976754`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4438433276726656}}, {{
                    3.912023005428146, -0.4642465718772299}}, {{
                    5.703782474656201, -0.4732124168318287}}, {{
                    7.312553498102598, -0.45700816287559076`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3749848106089919}}, {{
                    3.912023005428146, -0.4100511055663048}}, {{
                    5.703782474656201, -0.4623051662110051}}, {{
                    7.312553498102598, -0.4604948084198423}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4021544844963282}}, {{
                    3.912023005428146, -0.4245408896711461}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37016128312194957`}}, {{
                    3.912023005428146, -0.37064928262104013`}}, {{
                    5.703782474656201, -0.37347054263423357`}}, {{
                    7.312553498102598, -0.3833613329103843}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4378395990978272}}, {{
                    3.912023005428146, -0.4516859074774784}}, {{
                    5.703782474656201, -0.4801482125701662}}, {{
                    7.312553498102598, -0.4569374765498977}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4393947571876499}}, {{
                    3.912023005428146, -0.45998307381873255`}}, {{
                    5.703782474656201, -0.48376619975447127`}}, {{
                    7.312553498102598, -0.4569250032895412}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.30453260026052853`}}, {{
                    3.912023005428146, -0.42259534067308946`}}, {{
                    5.703782474656201, -0.4649170773320676}}, {{
                    7.312553498102598, -0.4565703939069443}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4485387708358706}}, {{
                    3.912023005428146, -0.4528704469937313}}, {{
                    5.703782474656201, -0.4678101649879064}}, {{
                    7.312553498102598, -0.4566296844132747}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3701149670660825}}, {{
                    3.912023005428146, -0.3701682850796523}}, {{
                    5.703782474656201, -0.3704535874201922}}, {{
                    7.312553498102598, -0.37055891342866093`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.4937236219485792, -0.30453260026052853`}},
                     DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.195784167079672, -0.4937236219485792}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.4937236219485792, -0.30453260026052853`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{{2.302585092994046, -0.4485387708358706}, {
                    3.912023005428146, -0.4642465718772299}, {
                    5.703782474656201, -0.48376619975447127`}, {
                    7.312553498102598, -0.4604948084198423}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    2.302585092994046, -0.4485387708358706}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    3.912023005428146, -0.4642465718772299}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    5.703782474656201, -0.48376619975447127`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    7.312553498102598, -0.4604948084198423}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[
                    1.6]]}, {}}}, {{}, {{}, {}}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.4677092581458978}, {
                    2.302585092994046, -0.4297288889634182}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, -0.5046746211006952}, {
                    3.912023005428146, -0.4253896383330468}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.703782474656201, -0.5170124235227894}, {
                    5.703782474656201, -0.4515898146513077}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.312553498102598, -0.5039468541441817}, {
                    7.312553498102598, -0.4188524799149491}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.485723279138838, -0.4485387708358706}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.195784167079672, -0.485723279138838}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.485723279138838, -0.4485387708358706}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.6931156443248117}, {
                    3.912023005428146, 0.7073042969522852}, {
                    5.703782474656201, 0.7040330113926908}, {
                    7.312553498102598, 0.686703935258754}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {2.302585092994046, 
                    0.6931156443248117}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {3.912023005428146, 
                    0.7073042969522852}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {5.703782474656201, 
                    0.7040330113926908}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {7.312553498102598, 
                    0.686703935258754}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {0.6702146686934252, 1}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.195784167079672, 0.6702146686934252}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {0.6702146686934252, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3701101694350343}, {
                    3.912023005428146, -0.3701151654218683}, {
                    5.703782474656201, -0.37014831694362277`}, {
                    7.312553498102598, -0.37046070384976754`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4438433276726656}, {
                    3.912023005428146, -0.4642465718772299}, {
                    5.703782474656201, -0.4732124168318287}, {
                    7.312553498102598, -0.45700816287559076`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3749848106089919}, {
                    3.912023005428146, -0.4100511055663048}, {
                    5.703782474656201, -0.4623051662110051}, {
                    7.312553498102598, -0.4604948084198423}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4021544844963282}, {
                    3.912023005428146, -0.4245408896711461}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37016128312194957`}, {
                    3.912023005428146, -0.37064928262104013`}, {
                    5.703782474656201, -0.37347054263423357`}, {
                    7.312553498102598, -0.3833613329103843}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4378395990978272}, {
                    3.912023005428146, -0.4516859074774784}, {
                    5.703782474656201, -0.4801482125701662}, {
                    7.312553498102598, -0.4569374765498977}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4393947571876499}, {
                    3.912023005428146, -0.45998307381873255`}, {
                    5.703782474656201, -0.48376619975447127`}, {
                    7.312553498102598, -0.4569250032895412}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.30453260026052853`}, {
                    3.912023005428146, -0.42259534067308946`}, {
                    5.703782474656201, -0.4649170773320676}, {
                    7.312553498102598, -0.4565703939069443}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.4485387708358706}, {
                    3.912023005428146, -0.4528704469937313}, {
                    5.703782474656201, -0.4678101649879064}, {
                    7.312553498102598, -0.4566296844132747}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3701149670660825}, {
                    3.912023005428146, -0.3701682850796523}, {
                    5.703782474656201, -0.3704535874201922}, {
                    7.312553498102598, -0.37055891342866093`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3701101694350343}}, {{
                    3.912023005428146, -0.3701151654218683}}, {{
                    5.703782474656201, -0.37014831694362277`}}, {{
                    7.312553498102598, -0.37046070384976754`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4438433276726656}}, {{
                    3.912023005428146, -0.4642465718772299}}, {{
                    5.703782474656201, -0.4732124168318287}}, {{
                    7.312553498102598, -0.45700816287559076`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3749848106089919}}, {{
                    3.912023005428146, -0.4100511055663048}}, {{
                    5.703782474656201, -0.4623051662110051}}, {{
                    7.312553498102598, -0.4604948084198423}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4021544844963282}}, {{
                    3.912023005428146, -0.4245408896711461}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37016128312194957`}}, {{
                    3.912023005428146, -0.37064928262104013`}}, {{
                    5.703782474656201, -0.37347054263423357`}}, {{
                    7.312553498102598, -0.3833613329103843}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4378395990978272}}, {{
                    3.912023005428146, -0.4516859074774784}}, {{
                    5.703782474656201, -0.4801482125701662}}, {{
                    7.312553498102598, -0.4569374765498977}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4393947571876499}}, {{
                    3.912023005428146, -0.45998307381873255`}}, {{
                    5.703782474656201, -0.48376619975447127`}}, {{
                    7.312553498102598, -0.4569250032895412}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.30453260026052853`}}, {{
                    3.912023005428146, -0.42259534067308946`}}, {{
                    5.703782474656201, -0.4649170773320676}}, {{
                    7.312553498102598, -0.4565703939069443}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.4485387708358706}}, {{
                    3.912023005428146, -0.4528704469937313}}, {{
                    5.703782474656201, -0.4678101649879064}}, {{
                    7.312553498102598, -0.4566296844132747}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3701149670660825}}, {{
                    3.912023005428146, -0.3701682850796523}}, {{
                    5.703782474656201, -0.3704535874201922}}, {{
                    7.312553498102598, -0.37055891342866093`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association["L1Regularization" -> 0, "L2Regularization" -> 
                    100., "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association["L1Regularization" -> 0, "L2Regularization" -> 
                    0.00001, "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, 
                    
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117600653120030]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117604948087326]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117609243054622]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117613538021918]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117617832989214]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117622127956510]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117626422923806]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117630717891102]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117635012858398]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 117639307825694]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.4937236219485792, -0.30453260026052853`}},
                     DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.195784167079672, -0.4937236219485792}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.195784167079672, 
                    Log[1874]}, {-0.4937236219485792, -0.30453260026052853`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}]], 
                    Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{248., {89., 93.}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.750423070558627*^9, 3.7504232011898947`*^9, 3.750426626527542*^9, 
   3.750607033364442*^9, 3.750607069815363*^9, 3.750675750196515*^9, 
   3.7506758373263597`*^9, 3.7506819406680803`*^9, 3.7509704925031776`*^9, {
   3.750970531555707*^9, 3.7509705394593163`*^9}, 3.7509707246619987`*^9, {
   3.750971660972021*^9, 3.750971671376899*^9}, 3.7510238723567142`*^9, 
   3.7511330551748667`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"3a0205fb-0990-4ff9-b298-f0fd637da1ed"]
}, Open  ]],

Cell["\<\
Since the highest accuracy I got was 71.4% +- 4.5%, if I was using this for \
decision-making, I\[CloseCurlyQuote]d try with a larger set of data to see if \
I could get better accuracy
Other steps can also be tried to specify how the classifier methods work that \
could increase accuracy\
\>", "SideNote",
 CellChangeTimes->{
  3.750970390430197*^9, {3.75097056946518*^9, 3.7509705971041107`*^9}, {
   3.750970733243531*^9, 3.750970734667067*^9}, {3.750976847938262*^9, 
   3.7509768652829323`*^9}},ExpressionUUID->"e5b13b0a-7f15-4a2a-be57-\
55ea43f8ce01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "check", " ", "to", " ", "make", " ", "sure", " ", "output", " ", "from", 
    " ", "model", " ", "makes", " ", "sense"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"classifyReading", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "\"\<RDG-098\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyReading", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "\"\<RDG-099\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyReading", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", "\"\<RDG-098\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyReading", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", "\"\<RDG-099\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7504232794997597`*^9, 3.75042330252052*^9}, {
  3.750424969253553*^9, 3.750424983091341*^9}, {3.750425199249477*^9, 
  3.750425246187085*^9}, {3.750607041336369*^9, 3.7506070538927927`*^9}, {
  3.750607084150887*^9, 3.75060709874116*^9}, {3.750971703702793*^9, 
  3.7509717202087517`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"6e0d8d64-33cb-44a0-ba0b-c49a4fff9ba9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8608317034299341`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.139168296570066`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.750423302987911*^9, 3.7504249837769537`*^9, 
  3.75042521535327*^9, 3.7504252467034063`*^9, 3.7504266286420794`*^9, 
  3.750607100602789*^9, 3.750675753229629*^9, 3.750681942148253*^9, 
  3.750970700362936*^9, 3.7509707408429413`*^9, 3.750971681979321*^9, 
  3.75097172071658*^9, 3.751023873771695*^9, 3.7511330565934362`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"8af9e899-2b54-4781-9361-26dfcc9be179"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.877744382332812`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.12225561766718801`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.750423302987911*^9, 3.7504249837769537`*^9, 
  3.75042521535327*^9, 3.7504252467034063`*^9, 3.7504266286420794`*^9, 
  3.750607100602789*^9, 3.750675753229629*^9, 3.750681942148253*^9, 
  3.750970700362936*^9, 3.7509707408429413`*^9, 3.750971681979321*^9, 
  3.75097172071658*^9, 3.751023873771695*^9, 3.7511330566081133`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"2c99dd54-8f36-422d-881b-5989d2cd2974"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.6858993782629225`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.3141006217370776`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.750423302987911*^9, 3.7504249837769537`*^9, 
  3.75042521535327*^9, 3.7504252467034063`*^9, 3.7504266286420794`*^9, 
  3.750607100602789*^9, 3.750675753229629*^9, 3.750681942148253*^9, 
  3.750970700362936*^9, 3.7509707408429413`*^9, 3.750971681979321*^9, 
  3.75097172071658*^9, 3.751023873771695*^9, 3.751133056619595*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"bee771a5-5ef0-423c-becc-26da3eeb25c4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.7170841787745175`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.2829158212254825`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.750423302987911*^9, 3.7504249837769537`*^9, 
  3.75042521535327*^9, 3.7504252467034063`*^9, 3.7504266286420794`*^9, 
  3.750607100602789*^9, 3.750675753229629*^9, 3.750681942148253*^9, 
  3.750970700362936*^9, 3.7509707408429413`*^9, 3.750971681979321*^9, 
  3.75097172071658*^9, 3.751023873771695*^9, 3.751133056628339*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f78fa3f9-b35c-4251-adf5-5f577d7ad17b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"classifyReading", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "\"\<RDG-098\>\""}], "}"}], ",", 
        RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<successful\>\""}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "120"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"classifyReading", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"y", ",", "\"\<RDG-098\>\""}], "}"}], ",", 
        RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<unsuccessful\>\""}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "120"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]], "SideCode",
 CellChangeTimes->{{3.750424024481724*^9, 3.750424066596661*^9}, {
  3.750607119736856*^9, 3.750607122756034*^9}, {3.750971824951035*^9, 
  3.750971839305863*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b2a65772-5525-4acd-93f8-e0ec16bdff17"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0HdQ0wcUwHGMrRotFBkyxEEZh8oQRZbge2yDhj1K4CcjwXFlFBUQekw5
iIJaxYHRWsGUqgypRUTKSANYHJUDkaRomGEkPzSEFYL1bPrHu3efP973j2cc
lxwUT1FTU6Or5v+9OPisw7S4Y5/C//eSrFYR9N3Sz3ATVsC/Suo7OU8EqNsd
py98CAa+VrsOt4sgLeC+YKWQD+nJzbN+XSJY/0HvklLQCy941h1be0Uw1OyX
PC8YhcJVs+Wd4yLwNpWK5IJZ8GeE6+qoD4JS4HBlRkDBO4deuvIjB6Hd41du
T4U2NuoV53JWDYHR0JOJOMtN2EJrSwmuHAKdhOj7qz1MkIfcpizjYbhk6/2H
X6gFzsuPNiemDcM/ZTt5ck0rBA2/0zc6h6GYm9NNMbDFuyy6CWwcAb3LY2dK
f9qNxs+PuOsmj0BRCG1f7+Ie1JvQplBaRuCEU3n0s3xHVLvmjibrR8FTtpyZ
NOaMBTuqU7yiRyHPJTDW0NEVU/mN15KqRsG59np9dhugzMm4r+DTKCQsyXO7
1N1Q1lfqUkwbA+UOzUGrUHfkffJp9roxBi5V1bevXvVAtUGHGr50DORavjFh
fE+kW2poWNmJQVwSE3Z8tTfaWKgzl/LFQJOl08btfVAn+4ZW3QsxTDPXnKjP
2Y+rskfD2Abjqn/qUYr4NGyycRyeY42D1t/m5+tkvmhWPVcTfX8cjNgPAuzt
D2Jlt8Z06fw4lO1w0tQ+QkdF/OTka8cJeG7otmfuoh8+Hslub8mcAGcj/o82
/f4YfOq9t+GfE6CxsuJkbH4Ayi6HDNxbMQmb87a4RJgH4rn1rwyPeU8C1Syq
IeivQCz+Yp3kDnsSrF0NHqQTQRizIVXk2TkJxwe12n3VgnFD/hE278spkM2V
hNLKgtGBN1TWilPgY/OUQ7MKQUq8mPV9xhS0zu39qHgVgt73pIyaR1OQZLlr
oCc+FJm5cSuqp6fA9QOrL4Iahr/Ul/ysMJeAl6k+Xb0iDN0LJGyLKAlY5J49
xXcIR4EwWdP0ggS2xzu1mQ2Eo395Q7ZJpwTiW48W1Kd8iwlBZ3sCFiXQdruP
JdeNwJTS6Ib926Uwf/ezwuZxBPLEXSeVkVJgmlVROXQGjm3Y3WJ2Rgry7aX2
D2cYuE2g8BxolEIj9+PIAjsS1efavrITS4HhaYJ7N0eh+fGU2evqJGxMLHpi
zYtCBp8aedCJBN21Cb/RwwmsP0R9JY8hgeuRlTkTQaBtbV3s7VgSdmWd9yiN
ItDp4/SQXxwJfjN1b4SxBCbObLtZxSShsH9ByUwg0GztW23WYRKWKnLcM/MI
PKBJW9HzHQkDe0tfV1ap7sXvRJw0Eo6mcm/SaglsDel86p1OwmLto/jpOgLn
jyVxZlXW+kaosG0g0HrdGopvBgkH1mwyauERuLyQ06v4gYTmvkrW6zcE2nU9
yfDPI8FXo9EqTUjgqHHw18sqC32eLeq/JTCF1X6Bm0/CfBPJPjRMoDNYBypP
k2BVvrNGIiUQykL6ywtVvQG3tJL3BPaffsk/UKTq6QSDzQyBt66YcxZUPlyU
2nNygcC27kIq7Yyqxyvk6C0R2PH8QvmsyvnL15hNywSGXcw1vXmWBE27e5bE
JwKzzjEueRWTcCuxaeHzZwILtm0hP6j8H2m2XGo=
        "]]},
      Annotation[#, "Charting`Private`Tag$118174#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0Hk41AkcBvBZtKV9tCIMDbm3wziSKef3K2Ipco4jvy2h9OTYhKIDbRlb
HtpI1tMhiUpJ1gq55kdlFDmG+RnnhJ7IMnKTtfaP93n/+zzv82ocDXcLkqDR
aE6r+b9n+3j12tfqraS880y56iLg36XHWFM5ICG5tJGzRQSo8OEonSqGKd+R
TwfURBDt8kQgSZFg23A/kdosgo3jSjcWBG2Qde/znQlFEfRXOodPCz5C1bfv
DVRlRGCnPdo7KfgKXW4eM1ELA7Ag2H1TLJDAwhZlkVrbANTZ5Oe25sijVmRF
TfH5AWD0l386qqeKmofU7Tv1BmBTyOEna220MP7iy6tSVf1ww8julbPnVqQz
9Dna8v3QlWlYOynLxMuDAQsNkX1wLTfug4SyEb5gBZUn8HpBKX3w97Q7xlh1
0vBch0YvcDwcrNpmTbDVmFpautIDp03vH+Zd2oO0tti48t5usJ1YjA0bNMP5
R/mMKOtuSLBw9VfZY4mK51JaNB8Lwazwz5KLNYBayVVes1JCCJmfjG+QsUZ1
NpU4EtIFCztk+5ieezFe6ldOJI8Ci4Kn2RkZNkizvf4wdjsFk3KOR9ikLZ7I
Hxx8eEsAQ8lH2BFr7TD7+bDpj4ud4DBxxmGYZY+UJE94L7gTxgLWnS6J+xmn
Jc3dJt53rP6pJMEhHTA5OxXorA6Qa9JNKZpwxLJ8ei4W8IGR9NyFxTqAJUc+
/kQp8iFzh6ms/HEnlN9lZOid0g6NKtYmU3844w0LiZjL69vBjEFeN+g8iId+
1Il4d6ENNkjmRPpfckH1Tvb+p99aQS1hi4WPrisO9wQ0Mk+3grSOX6nbW1cc
nR1hlo23gL6l8vMzhBtatyvsi45qgYg+uTpHmjs+nPPvW/78ASamkj0dMt1R
ayX+9prlZrA3eJPlwPTA+ZNhIVYqzVA9Zb401+yBn3090x23NUGY3k5ha5An
nvo3avGg03uwHA/k+0izMZzZlKAR+A72adOdZHLYODfu00OkNsLW+Ktnyd1e
+OA2VofX8WB7kGmNjtALyVidNRFfGiCoOvhyySlvdCntLK/UbYCabH7gpIIP
WhUn6Pay38L0o5U5g5c+SAvt0VO5/gYCdAqks5x8MSrX+IcT3a9hcnsaq1js
i34P1McyGK+hLHdJNJN0CJuNaU0G4fXga6uF5mp+eHy3GSuTVwebQznl+rV+
mD5LpTWr1IHC+pAXTl4E7rwifLvnPAm5NhdixT4Egr1lzMUYEnZeSLFJ8yNQ
Vf5AfH00Cc7iog7Kn0B7K+9U11MkJHbOLASEEBgsSCsKP0bCfE7c3tgEAvnV
3YuvXEgQmqe15xUQqBGenJSuQ0JwVO5th0ICpZ+NDg1pkjBb+HfQWBGB+t52
GSbqJMhpUnNGpat+e/+cQIWE/etUGVW1BCpupZWqy5JQyc8LbO9Y3dtPVyYX
ueC4oYwZTRF45uxfpNI8Fyh73iy9m0DTsK+1oTNcmK74kvTLAIF0SftXKmIu
MO8bPhsZJfC7e8/yzg5zoVJoHZ38D4EF4qbplo+r3iZ3MBATyHkcdGvbABeO
caJaI2cIlOIOdXULV73axCyleQLH+LUxJhQXLi3eCqhYJDC/Yjk0tYMLsrse
6xHLBMo03iwdaePC3dCKmZUVAsU+v7nbtnDhP2FLWIM=
        "]]},
      Annotation[#, "Charting`Private`Tag$120914#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "SideCodeOutput",
 CellChangeTimes->{3.751023874628509*^9, 3.751133057480195*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"69e2d21b-58ea-4aca-abbb-9e09510774a4"]
}, Open  ]],

Cell["Repeat the steps above for the Writing and Math datasets", "SideNote",
 CellChangeTimes->{{3.7509723095080433`*^9, 
  3.7509723170723953`*^9}},ExpressionUUID->"702194ba-32e5-4726-b8bf-\
a6a74675eec3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Writing", "Subsection",
 CellChangeTimes->{{3.750972060130918*^9, 
  3.750972060941155*^9}},ExpressionUUID->"eb1582e2-8ac4-4c27-b14e-\
c1b0b9090acd"],

Cell["\<\
Accuracy with missing values in WritingSample column 60% and lower (removing \
values only increased accuracy to 63.8% +- 2.3% for best model)
Removed rows with missing writing sample score (45 rows, <1% of data) so \
classifier would recognize WritingSample column as numeric\
\>", "SideNote",
 CellChangeTimes->{{3.750974935721464*^9, 3.750974951918182*^9}, {
  3.750974989137405*^9, 3.750975050039322*^9}, {3.750975091531144*^9, 
  3.75097509443336*^9}, {3.750976962387652*^9, 3.7509769675347357`*^9}, {
  3.7509771404559402`*^9, 3.750977141636078*^9}, {3.750977173486608*^9, 
  3.750977272579874*^9}},ExpressionUUID->"23e8f2ba-a01f-4641-abd3-\
52359842712c"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "remove", " ", "rows", " ", "where", " ", "WritingSample", " ", "score", 
   " ", "is", " ", "missing"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.750975123732304*^9, 3.750975147831184*^9}, {
  3.750977226968731*^9, 3.750977250179935*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3865b2be-823b-4dcb-be43-a43ac3360bc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredWritingDataSet", "=", 
  RowBox[{"writingDataSet", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#WritingSample", "\[GreaterEqual]", "0"}], "&"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.750975169656089*^9, 3.750975205964677*^9}, {
  3.75097549256989*^9, 3.7509755161795607`*^9}, {3.7509755488147917`*^9, 
  3.750975553635598*^9}, {3.7509756067301607`*^9, 3.7509756149948263`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ad8bce8d-619a-476d-8fbb-ea28677e9af7"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 5369, "InitialType" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "SentenceSkills", "WritingSample", "FirstWritingCourse", "level", 
            "grade", "outcome"}, {
            Atom[Real], TypeSystem`AnyType, 
            Atom[
             TypeSystem`Enumeration["EGL-098", "EGL-099", "EGL-101"]], 
            Atom[
             TypeSystem`Enumeration[
             "1 level below", "2 levels below", "college level"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 5369], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "SentenceSkills"} -> 1, {All, "WritingSample"} -> 
           1, {All, "FirstWritingCourse"} -> 1, {All, "level"} -> 
           1, {All, "grade"} -> 1, {All, "outcome"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "SentenceSkills" -> TypeSystem`PackageScope`AtomShape[60], 
              "WritingSample" -> TypeSystem`PackageScope`UnknownShape, 
              "FirstWritingCourse" -> TypeSystem`PackageScope`AtomShape[63.], 
              "level" -> TypeSystem`PackageScope`AtomShape[126.], "grade" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "outcome" -> TypeSystem`PackageScope`AtomShape[108.]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1712113680], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "SentenceSkills", "WritingSample", "FirstWritingCourse", "level", 
            "grade", "outcome"}, {
            Atom[Real], TypeSystem`AnyType, 
            Atom[
             TypeSystem`Enumeration["EGL-098", "EGL-099", "EGL-101"]], 
            Atom[
             TypeSystem`Enumeration[
             "1 level below", "2 levels below", "college level"]], 
            Atom[String], 
            Atom[
             TypeSystem`Enumeration["successful", "unsuccessful"]]}], 5369], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1712113680]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceSkills\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SentenceSkills\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825][{
                    All, "SentenceSkills"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[All, "SentenceSkills"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WritingSample\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"WritingSample\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825][{
                    All, "WritingSample"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[All, "WritingSample"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstWritingCourse\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FirstWritingCourse\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825][{
                    All, "FirstWritingCourse"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[All, "FirstWritingCourse"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"level\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"level\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825][{
                    All, "level"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[All, "level"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"grade\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"grade\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825][{
                    All, "grade"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[All, "grade"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"outcome\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"outcome\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825][{
                    All, "outcome"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[All, "outcome"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["78.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[1, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[1, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[1, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[1, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[1, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[1, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["62.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[2, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[2, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[2, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[2, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[2, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[2, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["113.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[3, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[3, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[3, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[3, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[3, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[3, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["113.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[4, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[4, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[4, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[4, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["RP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[4, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[4, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["58.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[5, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[5, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-098", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[5, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2 levels below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[5, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[5, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[5, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["89.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[6, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[6, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[6, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[6, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[6, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[6, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["73.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[7, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[7, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[7, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[7, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[7, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[7, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["91.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[8, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[8, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[8, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[8, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[8, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[8, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["91.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[9, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[9, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[9, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[9, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[9, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[9, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[10, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[10, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[10, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[10, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[10, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[10, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["101.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[11, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[11, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[11, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[11, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[11, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[11, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[12, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[12, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[12, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[12, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[12, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[12, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["83.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[13, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[13, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[13, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[13, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[13, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[13, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[14, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[14, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[14, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[14, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[14, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[14, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["85.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[15, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[15, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[15, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[15, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[15, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[15, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["108.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[16, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[16, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[16, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[16, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[16, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[16, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["120.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[17, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[17, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[17, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[17, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[17, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[17, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["63.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[18, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[18, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[18, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[18, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["SP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[18, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[18, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["63.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[19, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[19, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[19, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1 level below", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[19, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["W", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[19, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["unsuccessful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[19, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["97.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[20, 
                   Key["SentenceSkills"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[20, 
                   Key["WritingSample"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EGL-101", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[20, 
                   Key["FirstWritingCourse"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["college level", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[20, 
                   Key["level"]]], "Mouse"], 
                ImageSize -> {{126., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[20, 
                   Key["grade"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["successful", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
                 
                  GeneralUtilities`Slice[20, 
                   Key["outcome"]]], "Mouse"], 
                ImageSize -> {{108., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5369 (-20), {1, 5369 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 5369 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    5369, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 5369 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5369 20, {1, 5369 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5369 (-20), {1, 5369 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 5369 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    5369, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 5369 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    5369 20, {1, 5369 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 274831825]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[274831825][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {541., {226., 235.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.750975207246369*^9, 3.750975554326819*^9, 
  3.750975615801416*^9, 3.75102387487181*^9, 3.7511330576998367`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"17fabbf6-25b3-4f9f-ac6e-c93f2c70f25d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "format", " ", "dataset", " ", "as", " ", "list", " ", "of", " ", 
    "rules"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"writing", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Riffle", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"filteredWritingDataSet", "[", 
             RowBox[{"All", ",", "\"\<SentenceSkills\>\""}], "]"}], "//", 
            "Normal"}], ",", 
           RowBox[{
            RowBox[{"filteredWritingDataSet", "[", 
             RowBox[{"All", ",", "\"\<WritingSample\>\""}], "]"}], "//", 
            "Normal"}], ",", 
           RowBox[{
            RowBox[{"filteredWritingDataSet", "[", 
             RowBox[{"All", ",", "\"\<FirstWritingCourse\>\""}], "]"}], "//", 
            "Normal"}]}], "}"}], "~", "Flatten", "~", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], "~", "Partition", "~", "3"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"filteredWritingDataSet", "[", 
          RowBox[{"All", ",", "\"\<outcome\>\""}], "]"}], "//", "Normal"}]}], 
       "\[IndentingNewLine]", "]"}], "~", "Partition", "~", "2"}], "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"a", "\[Rule]", "b"}], "}"}]}]}], "//", 
    "Flatten"}]}]}]], "Input",
 CellChangeTimes->{{3.7509723360923862`*^9, 3.750972343959197*^9}, {
  3.750972375066286*^9, 3.750972410505925*^9}, {3.750972441192091*^9, 
  3.750972443484962*^9}, {3.7509724994761667`*^9, 3.7509725844803333`*^9}, {
  3.750972644357154*^9, 3.7509726457015753`*^9}, {3.750972757674114*^9, 
  3.750972859192391*^9}, {3.750973327689897*^9, 3.750973355085486*^9}, {
  3.750975622776332*^9, 3.7509756493546143`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"0df5bb68-b236-46a8-9b28-7b5dec84b6e3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"78.`", ",", "3.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"62.`", ",", "4.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"113.`", ",", "5.`", ",", "\<\"EGL-101\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"113.`", ",", "5.`", ",", "\<\"EGL-101\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"58.`", ",", "3.`", ",", "\<\"EGL-098\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"89.`", ",", "5.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           TemplateBox[{"5357"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"86.`", ",", "5.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"69.`", ",", "3.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"83.`", ",", "4.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"78.`", ",", "4.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"94.`", ",", "7.`", ",", "\<\"EGL-101\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"94.`", ",", "5.`", ",", "\<\"EGL-099\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{45., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 33463310250297414014, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{51., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 33463310250297414014, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{38., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 33463310250297414014, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{68., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33463310250297414014 === $SessionID, 
   Out[30], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.750973355931672*^9, {3.750975635339107*^9, 3.750975649909419*^9}, 
   3.751023874997069*^9, 3.751133057817092*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"b81beba4-989b-41cb-accd-becdd1799e18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "the", " ", "accuracy", " ", "of", " ", "each", " ", 
    "classifier", " ", "method"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"ClassifierInformation", "[", 
        RowBox[{
         RowBox[{"Classify", "[", 
          RowBox[{"writing", ",", 
           RowBox[{"\"\<Method\>\"", "\[Rule]", "#"}], ",", 
           RowBox[{"FeatureTypes", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Numerical\>\"", ",", "\"\<Numerical\>\"", ",", 
              "\"\<Nominal\>\""}], "}"}]}]}], "]"}], ",", 
         "\"\<Accuracy\>\""}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<DecisionTree\>\"", ",", "\"\<GradientBoostedTrees\>\"", ",", 
      "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
      "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
      "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
      "\"\<SupportVectorMachine\>\""}], "}"}]}], "//", "Dataset"}]}]], "Input",\

 CellChangeTimes->{{3.749504523334203*^9, 3.749504529329852*^9}, {
   3.7496372021929197`*^9, 3.7496373630263166`*^9}, {3.7496374184816923`*^9, 
   3.749637467967256*^9}, {3.749903380014001*^9, 3.7499034076566687`*^9}, {
   3.75096992535985*^9, 3.750969929878743*^9}, {3.750970093139823*^9, 
   3.750970094371682*^9}, {3.750973433492021*^9, 3.750973434086994*^9}, {
   3.750976509544282*^9, 3.750976511132238*^9}, 3.750976545477685*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"62ffd7b8-83a3-45da-b1b0-99f58fd336a9"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 9, "Length" -> 9, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], TypeSystem`AnyType}], 9], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
             TypeSystem`PackageScope`UnknownShape}]], 9, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1037558961], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], TypeSystem`AnyType}], 9], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1037558961]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation["DecisionTree", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6091133283769858`", "\[PlusMinus]", 
                    "0.048901674277456404`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["GradientBoostedTrees", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6229130369376897`", "\[PlusMinus]", 
                    "0.0342631202713064`"}], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LogisticRegression", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6363129147896633`", "\[PlusMinus]", 
                    "0.023905605008669964`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Markov", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[4, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6258294359869239`", "\[PlusMinus]", 
                    "0.030576364907422108`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[4, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NaiveBayes", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[5, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.5862609431423501`", "\[PlusMinus]", 
                    "0.03780232902085604`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[5, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NearestNeighbors", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[6, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6294835198174018`", "\[PlusMinus]", 
                    "0.02269515669870504`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[6, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NeuralNetwork", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[7, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6246461658294535`", "\[PlusMinus]", 
                    "0.020905768420695105`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[7, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["RandomForest", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[8, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.5930354661592732`", "\[PlusMinus]", 
                    "0.017310159463599796`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[8, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["SupportVectorMachine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[9, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6212826463404719`", "\[PlusMinus]", 
                    "0.022862784942042077`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
                  GeneralUtilities`Slice[9, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1075193206][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1075193206]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1075193206][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {334., {100.5, 109.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.750973523627619*^9, 3.750975753201571*^9, 
  3.750976583448605*^9, 3.7509766596415052`*^9, 3.75102398890385*^9, 
  3.751133144652594*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"79addebc-70ac-4f3a-b3b6-a3c310d7eb8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "build", " ", "model", " ", "with", " ", "classifier", " ", "that", " ", 
    "gives", " ", "the", " ", "best", " ", "results"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClassifierInformation", "[", 
   RowBox[{"classifyWriting", "=", 
    RowBox[{"Classify", "[", 
     RowBox[{"writing", ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
      RowBox[{"FeatureTypes", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Numerical\>\"", ",", "\"\<Numerical\>\"", ",", 
         "\"\<Nominal\>\""}], "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.750973705017099*^9, 3.750973710978463*^9}, {
  3.750974005709817*^9, 3.750974009140222*^9}, {3.7509742224055758`*^9, 
  3.750974223763132*^9}, {3.7509745276087437`*^9, 3.750974528736107*^9}, {
  3.750974728026218*^9, 3.750974777661078*^9}, {3.750976435053707*^9, 
  3.750976476806521*^9}, {3.750976696480501*^9, 3.750976698318845*^9}, {
  3.750976820659149*^9, 3.750976821591206*^9}, {3.750976901894991*^9, 
  3.750976928473055*^9}, {3.750976987932549*^9, 3.750976988687991*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"8b3eab3c-9a93-4acc-a8f1-99fc8b18a849"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              RowBox[{"{", 
               
               RowBox[{"\<\"Numerical\"\>", ",", "\<\"Numerical\"\>", 
                ",", "\<\"Nominal\"\>"}], "}"}]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Classes\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",","\",\"","\"successful\"","\"unsuccessful\""},
               "RowWithSeparators"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{
                   "63.200151566674819037`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod],
                  StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "2.2615715542594121423`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  
                  TemplateBox[{
                   "58.6770084581559956405`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                  "\", \"", 
                  
                  TemplateBox[{
                   "67.7232946751936424334`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                  "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                Row[{"95% confidence interval: [", 
                  Quantity[58.6770084581559956405`3., "Percent"], ", ", 
                  Quantity[67.7232946751936424334`3., "Percent"], "]"}], 
                "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"LogisticRegression\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], 
                    Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"L1Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "L2Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "OptimizationMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1],
                     "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[772563219], "Type" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], 
                    Atom[String]}], "HandleQ" -> True, "RowTarget" -> 20, 
                    "Data" -> TypeSystem`PackageScope`CacheHandle[772563219]],
                     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145405873][{
                    
                    Key["L1Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145405873][{
                    
                    Key["L2Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.01"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145405873][{
                    
                    Key["OptimizationMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["LBFGS", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145405873][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    145405873]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    145405873][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                  "OptimizationMethod" -> "LBFGS"], 
                 
                 TypeSystem`Struct[{
                  "L1Regularization", "L2Regularization", 
                   "OptimizationMethod"}, {
                   Atom[Integer], 
                   Atom[Real], 
                   Atom[String]}], 
                 Association["ID" -> 201674637939327]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Single evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "3.99`",
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Batch evaluation speed\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
               "51.5`",
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}],"examples per millisecond",
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.6668183743273888853`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0118300658478480009`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.6431582426316928558`3.",
                   "\", \"", "0.6904785060230849147`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.6431582426316928558`3., 
                  ", ", 0.6904785060230849147`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"303.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"5369","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"5.83`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37223965042522095`}, {
                    3.6888794541139363`, -0.3910475313985865}, {
                    5.298317366548036, -0.4052375725052698}, {
                    6.907755278982137, -0.3956298182290643}, {
                    8.365206834418355, -0.39836081694459446`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    2.302585092994046, -0.37223965042522095`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    3.6888794541139363`, -0.3910475313985865}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    5.298317366548036, -0.4052375725052698}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    6.907755278982137, -0.3956298182290643}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    8.365206834418355, -0.39836081694459446`}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[
                    1.6]]}, {}}}, {{}, {{}, {}}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.37796592069747215`}, {
                    2.302585092994046, -0.36654598371596936`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, -0.4147667951380966}, {
                    3.6888794541139363`, -0.3678778603662183}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, -0.42313789315574785`}, {
                    5.298317366548036, -0.38765204666379577`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.907755278982137, -0.40469703222723213`}, {
                    6.907755278982137, -0.3866440803919877}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.365206834418355, -0.410886844618852}, {
                    8.365206834418355, -0.38598975157854054`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1743032183526476`, 
                    Log[
                    5369]}, {-0.40707079039860583`, -0.37223965042522095`}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.1743032183526476`, -0.40707079039860583`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1743032183526476`, 
                    Log[
                    5369]}, {-0.40707079039860583`, -0.37223965042522095`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.5946234897874162}, {
                    3.6888794541139363`, 0.6054516455268579}, {
                    5.298317366548036, 0.6320015156667482}, {
                    6.907755278982137, 0.6114617765996364}, {
                    8.365206834418355, 0.6126755710375772}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {2.302585092994046, 
                    0.5946234897874162}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {3.6888794541139363`, 
                    0.6054516455268579}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {5.298317366548036, 
                    0.6320015156667482}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {6.907755278982137, 
                    0.6114617765996364}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {8.365206834418355, 
                    0.6126755710375772}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {0.5732878839867539, 1}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1743032183526476`, 0.5732878839867539}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {0.5732878839867539, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37126893240044023`}, {
                    3.6888794541139363`, -0.3817486671423041}, {
                    5.298317366548036, -0.39380125303658275`}, {
                    6.907755278982137, -0.3956298182290643}, {
                    8.365206834418355, -0.39733748732057034`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.367553927086857}, {
                    3.6888794541139363`, -0.3675555366859059}, {
                    5.298317366548036, -0.3675587584873671}, {
                    6.907755278982137, -0.3676079731032716}, {
                    8.365206834418355, -0.3672648676966148}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.609445927896972, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3521017526746959}, {
                    5.298317366548036, -0.4052375725052698}, {
                    6.907755278982137, -0.391235729725857}, {
                    8.365206834418355, -0.39546015590133055`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.2949421220265924}, {
                    3.6888794541139363`, -0.36277454336897735`}, {
                    5.298317366548036, -0.3901011094138049}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.669244304858067, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3263898461395255}, {
                    5.298317366548036, -0.38462326456308865`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3680149924576013}, {
                    3.6888794541139363`, -0.36987088122516926`}, {
                    5.298317366548036, -0.3740192345356487}, {
                    6.907755278982137, -0.38779796365172636`}, {
                    8.365206834418355, -0.39836081694459446`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.649719172197141, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3519486936507693}, {
                    5.298317366548036, -0.38894083025926424`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6688210552430833`, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3263806185458201}, {
                    5.298317366548036, -0.3956042312530434}, {
                    6.907755278982137, -0.3916013902467991}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.36760051923444037`}, {
                    3.6888794541139363`, -0.36777744102074655`}, {
                    5.298317366548036, -0.3681600300046311}, {
                    6.907755278982137, -0.3711521858350185}, {
                    8.365206834418355, -0.37989388086660214`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37223965042522095`}, {
                    3.6888794541139363`, -0.3910475313985865}, {
                    5.298317366548036, -0.40234765665941985`}, {
                    6.907755278982137, -0.39311859268699245`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Hue[0.030679774997896203`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Line[{{3.6888794541139363`, -0.3670695011793568}, {
                    5.298317366548036, -0.3676196130550535}, {
                    6.907755278982137, -0.3681584170098125}, {
                    8.365206834418355, -0.36858964950590173`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Hue[0.266747752497686, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, -0.32646118577414107`}, {
                    5.298317366548036, -0.3962212212240258}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37126893240044023`}}, {{
                    3.6888794541139363`, -0.3817486671423041}}, {{
                    5.298317366548036, -0.39380125303658275`}}, {{
                    6.907755278982137, -0.3956298182290643}}, {{
                    8.365206834418355, -0.39733748732057034`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.367553927086857}}, {{
                    3.6888794541139363`, -0.3675555366859059}}, {{
                    5.298317366548036, -0.3675587584873671}}, {{
                    6.907755278982137, -0.3676079731032716}}, {{
                    8.365206834418355, -0.3672648676966148}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.7462019438775397}}, {{
                    3.6888794541139363`, -0.3521017526746959}}, {{
                    5.298317366548036, -0.4052375725052698}}, {{
                    6.907755278982137, -0.391235729725857}}, {{
                    8.365206834418355, -0.39546015590133055`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.2949421220265924}}, {{
                    3.6888794541139363`, -0.36277454336897735`}}, {{
                    5.298317366548036, -0.3901011094138049}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 2.301441689976728}}, {{
                    3.6888794541139363`, -0.3263898461395255}}, {{
                    5.298317366548036, -0.38462326456308865`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3680149924576013}}, {{
                    3.6888794541139363`, -0.36987088122516926`}}, {{
                    5.298317366548036, -0.3740192345356487}}, {{
                    6.907755278982137, -0.38779796365172636`}}, {{
                    8.365206834418355, -0.39836081694459446`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.8704548834582515`}}, {{
                    3.6888794541139363`, -0.3519486936507693}}, {{
                    5.298317366548036, -0.38894083025926424`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 2.245363646883069}}, {{
                    3.6888794541139363`, -0.3263806185458201}}, {{
                    5.298317366548036, -0.3956042312530434}}, {{
                    6.907755278982137, -0.3916013902467991}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.36760051923444037`}}, {{
                    3.6888794541139363`, -0.36777744102074655`}}, {{
                    5.298317366548036, -0.3681600300046311}}, {{
                    6.907755278982137, -0.3711521858350185}}, {{
                    8.365206834418355, -0.37989388086660214`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37223965042522095`}}, {{
                    3.6888794541139363`, -0.3910475313985865}}, {{
                    5.298317366548036, -0.40234765665941985`}}, {{
                    6.907755278982137, -0.39311859268699245`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, -0.3670695011793568}}, {{
                    5.298317366548036, -0.3676196130550535}}, {{
                    6.907755278982137, -0.3681584170098125}}, {{
                    8.365206834418355, -0.36858964950590173`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, -0.32646118577414107`}}, {{
                    5.298317366548036, -0.3962212212240258}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {-0.5556086426431586, 2.301441689976728}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1743032183526476`, -0.5556086426431586}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {-0.5556086426431586, -0.28916985457204913`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37223965042522095`}, {
                    3.6888794541139363`, -0.3910475313985865}, {
                    5.298317366548036, -0.4052375725052698}, {
                    6.907755278982137, -0.3956298182290643}, {
                    8.365206834418355, -0.39836081694459446`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    2.302585092994046, -0.37223965042522095`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    3.6888794541139363`, -0.3910475313985865}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    5.298317366548036, -0.4052375725052698}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    6.907755278982137, -0.3956298182290643}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    8.365206834418355, -0.39836081694459446`}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[
                    1.6]]}, {}}}, {{}, {{}, {}}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.37796592069747215`}, {
                    2.302585092994046, -0.36654598371596936`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, -0.4147667951380966}, {
                    3.6888794541139363`, -0.3678778603662183}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, -0.42313789315574785`}, {
                    5.298317366548036, -0.38765204666379577`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.907755278982137, -0.40469703222723213`}, {
                    6.907755278982137, -0.3866440803919877}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.365206834418355, -0.410886844618852}, {
                    8.365206834418355, -0.38598975157854054`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1743032183526476`, 
                    Log[
                    5369]}, {-0.40707079039860583`, -0.37223965042522095`}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.1743032183526476`, -0.40707079039860583`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1743032183526476`, 
                    Log[
                    5369]}, {-0.40707079039860583`, -0.37223965042522095`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.5946234897874162}, {
                    3.6888794541139363`, 0.6054516455268579}, {
                    5.298317366548036, 0.6320015156667482}, {
                    6.907755278982137, 0.6114617765996364}, {
                    8.365206834418355, 0.6126755710375772}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {2.302585092994046, 
                    0.5946234897874162}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {3.6888794541139363`, 
                    0.6054516455268579}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {5.298317366548036, 
                    0.6320015156667482}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {6.907755278982137, 
                    0.6114617765996364}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], GraphicsBoxOptions -> {
                    DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {8.365206834418355, 
                    0.6126755710375772}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {0.5732878839867539, 1}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1743032183526476`, 0.5732878839867539}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {0.5732878839867539, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37126893240044023`}, {
                    3.6888794541139363`, -0.3817486671423041}, {
                    5.298317366548036, -0.39380125303658275`}, {
                    6.907755278982137, -0.3956298182290643}, {
                    8.365206834418355, -0.39733748732057034`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.367553927086857}, {
                    3.6888794541139363`, -0.3675555366859059}, {
                    5.298317366548036, -0.3675587584873671}, {
                    6.907755278982137, -0.3676079731032716}, {
                    8.365206834418355, -0.3672648676966148}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.609445927896972, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3521017526746959}, {
                    5.298317366548036, -0.4052375725052698}, {
                    6.907755278982137, -0.391235729725857}, {
                    8.365206834418355, -0.39546015590133055`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.2949421220265924}, {
                    3.6888794541139363`, -0.36277454336897735`}, {
                    5.298317366548036, -0.3901011094138049}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.669244304858067, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3263898461395255}, {
                    5.298317366548036, -0.38462326456308865`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3680149924576013}, {
                    3.6888794541139363`, -0.36987088122516926`}, {
                    5.298317366548036, -0.3740192345356487}, {
                    6.907755278982137, -0.38779796365172636`}, {
                    8.365206834418355, -0.39836081694459446`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.649719172197141, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3519486936507693}, {
                    5.298317366548036, -0.38894083025926424`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6688210552430833`, -0.28916985457204913`}, {
                    3.6888794541139363`, -0.3263806185458201}, {
                    5.298317366548036, -0.3956042312530434}, {
                    6.907755278982137, -0.3916013902467991}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.36760051923444037`}, {
                    3.6888794541139363`, -0.36777744102074655`}, {
                    5.298317366548036, -0.3681600300046311}, {
                    6.907755278982137, -0.3711521858350185}, {
                    8.365206834418355, -0.37989388086660214`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37223965042522095`}, {
                    3.6888794541139363`, -0.3910475313985865}, {
                    5.298317366548036, -0.40234765665941985`}, {
                    6.907755278982137, -0.39311859268699245`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Hue[0.030679774997896203`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, -0.3670695011793568}, {
                    5.298317366548036, -0.3676196130550535}, {
                    6.907755278982137, -0.3681584170098125}, {
                    8.365206834418355, -0.36858964950590173`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Hue[0.266747752497686, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.6888794541139363`, -0.32646118577414107`}, {
                    5.298317366548036, -0.3962212212240258}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37126893240044023`}}, {{
                    3.6888794541139363`, -0.3817486671423041}}, {{
                    5.298317366548036, -0.39380125303658275`}}, {{
                    6.907755278982137, -0.3956298182290643}}, {{
                    8.365206834418355, -0.39733748732057034`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.367553927086857}}, {{
                    3.6888794541139363`, -0.3675555366859059}}, {{
                    5.298317366548036, -0.3675587584873671}}, {{
                    6.907755278982137, -0.3676079731032716}}, {{
                    8.365206834418355, -0.3672648676966148}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.7462019438775397}}, {{
                    3.6888794541139363`, -0.3521017526746959}}, {{
                    5.298317366548036, -0.4052375725052698}}, {{
                    6.907755278982137, -0.391235729725857}}, {{
                    8.365206834418355, -0.39546015590133055`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.2949421220265924}}, {{
                    3.6888794541139363`, -0.36277454336897735`}}, {{
                    5.298317366548036, -0.3901011094138049}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 2.301441689976728}}, {{
                    3.6888794541139363`, -0.3263898461395255}}, {{
                    5.298317366548036, -0.38462326456308865`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3680149924576013}}, {{
                    3.6888794541139363`, -0.36987088122516926`}}, {{
                    5.298317366548036, -0.3740192345356487}}, {{
                    6.907755278982137, -0.38779796365172636`}}, {{
                    8.365206834418355, -0.39836081694459446`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.8704548834582515`}}, {{
                    3.6888794541139363`, -0.3519486936507693}}, {{
                    5.298317366548036, -0.38894083025926424`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 2.245363646883069}}, {{
                    3.6888794541139363`, -0.3263806185458201}}, {{
                    5.298317366548036, -0.3956042312530434}}, {{
                    6.907755278982137, -0.3916013902467991}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.36760051923444037`}}, {{
                    3.6888794541139363`, -0.36777744102074655`}}, {{
                    5.298317366548036, -0.3681600300046311}}, {{
                    6.907755278982137, -0.3711521858350185}}, {{
                    8.365206834418355, -0.37989388086660214`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37223965042522095`}}, {{
                    3.6888794541139363`, -0.3910475313985865}}, {{
                    5.298317366548036, -0.40234765665941985`}}, {{
                    6.907755278982137, -0.39311859268699245`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, -0.3670695011793568}}, {{
                    5.298317366548036, -0.3676196130550535}}, {{
                    6.907755278982137, -0.3681584170098125}}, {{
                    8.365206834418355, -0.36858964950590173`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, -0.32646118577414107`}}, {{
                    5.298317366548036, -0.3962212212240258}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201678932906623]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201683227873919]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201687522841215]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201691817808511]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201696112775807]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201700407743103]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201704702710399]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201708997677695]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201713292644991]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201717587612287]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201721882579583]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.0001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 201726177546879]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {-0.5556086426431586, 2.301441689976728}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1743032183526476`, -0.5556086426431586}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1743032183526476`, 
                    Log[5369]}, {-0.5556086426431586, -0.28916985457204913`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}]], 
                    Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{248., {89., 93.}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.750973826618414*^9, 3.7509740913811293`*^9, 
  3.750974314264991*^9, 3.750974538227522*^9, 3.750974757245867*^9, 
  3.75097478988284*^9, 3.7509764899829473`*^9, 3.75097676634901*^9, 
  3.750976855623117*^9, 3.750976910432962*^9, 3.750976946563479*^9, 
  3.750976998555291*^9, 3.751023997676878*^9, 3.751133151156488*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"26aee77f-073b-4ee9-9e1e-3de7ed0a3c09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "check", " ", "to", " ", "make", " ", "sure", " ", "output", " ", "from", 
    " ", "model", " ", "makes", " ", "sense"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"classifyWriting", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "8", ",", "\"\<EGL-098\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyWriting", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "8", ",", "\"\<EGL-099\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyWriting", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "8", ",", "\"\<EGL-101\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyWriting", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\"\<EGL-098\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyWriting", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\"\<EGL-099\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyWriting", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\"\<EGL-101\>\""}], "}"}], ",", 
     "\"\<Probabilities\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.750973935626389*^9, 3.7509739716600513`*^9}, {
  3.750974103252255*^9, 3.750974194730729*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"802652b8-ac5f-411f-a63f-8217db564320"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8884030925556438`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.11159690744435632`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.75097397235914*^9, 3.750974195514859*^9, 3.7509768004205923`*^9, {
   3.7509768876122923`*^9, 3.7509769162282476`*^9}, 3.750976952642025*^9, 
   3.750977013416174*^9, 3.7510239977792883`*^9, 3.751133151253475*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"368eb119-749e-4259-892b-179fbef4545c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8138493885910967`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.18615061140890332`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.75097397235914*^9, 3.750974195514859*^9, 3.7509768004205923`*^9, {
   3.7509768876122923`*^9, 3.7509769162282476`*^9}, 3.750976952642025*^9, 
   3.750977013416174*^9, 3.7510239977792883`*^9, 3.751133151262042*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c44fbdb8-3f6f-4021-aead-14994754ff67"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8515024193792916`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.14849758062070842`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.75097397235914*^9, 3.750974195514859*^9, 3.7509768004205923`*^9, {
   3.7509768876122923`*^9, 3.7509769162282476`*^9}, 3.750976952642025*^9, 
   3.750977013416174*^9, 3.7510239977792883`*^9, 3.7511331512715807`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"808a41f7-ce4a-4c48-94f5-ce9f9f9a1004"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.7176395513119912`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.28236044868800897`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.75097397235914*^9, 3.750974195514859*^9, 3.7509768004205923`*^9, {
   3.7509768876122923`*^9, 3.7509769162282476`*^9}, 3.750976952642025*^9, 
   3.750977013416174*^9, 3.7510239977792883`*^9, 3.751133151280282*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"54bde388-358f-47a2-9806-9aaca7943315"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.5826034378077688`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.41739656219223126`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.75097397235914*^9, 3.750974195514859*^9, 3.7509768004205923`*^9, {
   3.7509768876122923`*^9, 3.7509769162282476`*^9}, 3.750976952642025*^9, 
   3.750977013416174*^9, 3.7510239977792883`*^9, 3.7511331512884893`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"794aba52-0eb0-4c91-b66f-ae6c1c6d225c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.6467272960359125`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.3532727039640876`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.75097397235914*^9, 3.750974195514859*^9, 3.7509768004205923`*^9, {
   3.7509768876122923`*^9, 3.7509769162282476`*^9}, 3.750976952642025*^9, 
   3.750977013416174*^9, 3.7510239977792883`*^9, 3.7511331512967787`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"34713bcb-55b8-473a-a214-f720c277ea91"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Math", "Subsection",
 CellChangeTimes->{{3.7509720661284*^9, 
  3.750972069797715*^9}},ExpressionUUID->"58634a43-eb9a-442c-96c7-\
b80bb2a70984"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "format", " ", "dataset", " ", "as", " ", "list", " ", "of", " ", 
    "rules"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"math", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Riffle", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"mathDataSet", "[", 
             RowBox[{"All", ",", "\"\<Arithmetic\>\""}], "]"}], "//", 
            "Normal"}], ",", 
           RowBox[{
            RowBox[{"mathDataSet", "[", 
             RowBox[{"All", ",", "\"\<ElementaryAlgebra\>\""}], "]"}], "//", 
            "Normal"}], ",", 
           RowBox[{
            RowBox[{"mathDataSet", "[", 
             RowBox[{"All", ",", "\"\<CollegeMath\>\""}], "]"}], "//", 
            "Normal"}], ",", 
           RowBox[{
            RowBox[{"mathDataSet", "[", 
             RowBox[{"All", ",", "\"\<level\>\""}], "]"}], "//", "Normal"}]}],
           "}"}], "~", "Flatten", "~", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], "~", "Partition", "~", "4"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mathDataSet", "[", 
          RowBox[{"All", ",", "\"\<outcome\>\""}], "]"}], "//", "Normal"}]}], 
       "\[IndentingNewLine]", "]"}], "~", "Partition", "~", "2"}], "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"a", "\[Rule]", "b"}], "}"}]}]}], "//", 
    "Flatten"}]}]}]], "Input",
 CellChangeTimes->{{3.750973548320366*^9, 3.75097361744703*^9}, {
  3.7509774319741*^9, 3.750977432546145*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"68ef61d8-839f-4c4a-8251-ac3bf2690d0b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "74.`", ",", "47.`", ",", "\<\"\"\>", 
              ",", "\<\"2 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "57.`", ",", "44.`", ",", "\<\"\"\>", 
              ",", "\<\"3 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "24.`", ",", "\<\"\"\>", ",", "\<\"\"\>", 
              ",", "\<\"3 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "35.`", ",", "\<\"\"\>", ",", "\<\"\"\>", 
              ",", "\<\"3 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "60.`", ",", "33.`", ",", "\<\"\"\>", 
              ",", "\<\"2 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"successful\"\>"}], ",", 
           TemplateBox[{"4617"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "104.`", ",", "42.`", ",", "\<\"\"\>", 
              ",", "\<\"2 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "35.`", ",", "\<\"\"\>", ",", "\<\"\"\>", 
              ",", "\<\"3 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "85.`", ",", "50.`", ",", "\<\"\"\>", 
              ",", "\<\"2 levels below\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "107.`", ",", "67.`", ",", "\<\"\"\>", 
              ",", "\<\"1 level below\"\>"}], "}"}], 
            "\[Rule]", "\<\"unsuccessful\"\>"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{45., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 39, 33463310250297414014, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{51., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 39, 33463310250297414014, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{38., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 39, 33463310250297414014, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{68., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33463310250297414014 === $SessionID, 
   Out[39], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.75097361798715*^9, 3.750977433100627*^9, 
  3.751023998009079*^9, 3.7511331514274397`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"df24d040-4da6-4311-a0d3-c38b65a1ed0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Find", " ", "the", " ", "accuracy", " ", "of", " ", "each", " ", 
    "classifier", " ", "method"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"ClassifierInformation", "[", 
        RowBox[{
         RowBox[{"Classify", "[", 
          RowBox[{"math", ",", 
           RowBox[{"\"\<Method\>\"", "\[Rule]", "#"}]}], "]"}], ",", 
         "\"\<Accuracy\>\""}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<DecisionTree\>\"", ",", "\"\<GradientBoostedTrees\>\"", ",", 
      "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
      "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
      "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
      "\"\<SupportVectorMachine\>\""}], "}"}]}], "//", "Dataset"}]}]], "Input",\

 CellChangeTimes->{{3.750973654150599*^9, 3.750973654426359*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"24805322-c18f-4e12-8af8-10f76632f686"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 9, "Length" -> 9, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], TypeSystem`AnyType}], 9], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
             TypeSystem`PackageScope`UnknownShape}]], 9, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[215705351], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            Atom[String], TypeSystem`AnyType}], 9], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[215705351]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation["DecisionTree", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.5598693230185903`", "\[PlusMinus]", 
                    "0.07028669319477293`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["GradientBoostedTrees", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7167002160257858`", "\[PlusMinus]", 
                    "0.02096111727830827`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LogisticRegression", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7075074628652547`", "\[PlusMinus]", 
                    "0.021205672886135268`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Markov", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[4, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7140606217642228`", "\[PlusMinus]", 
                    "0.017155273182460334`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[4, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NaiveBayes", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[5, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7008117611380604`", "\[PlusMinus]", 
                    "0.020591022682678796`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[5, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NearestNeighbors", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[6, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7274311514287404`", "\[PlusMinus]", 
                    "0.016821062174289768`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[6, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["NeuralNetwork", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[7, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.6927103538467111`", "\[PlusMinus]", 
                    "0.021491944434889856`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[7, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["RandomForest", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[8, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7479881348997788`", "\[PlusMinus]", 
                    "0.06188937030477549`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[8, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["SupportVectorMachine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[9, 1]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   RowBox[{
                    "0.7213152487266231`", "\[PlusMinus]", 
                    "0.02595949528919132`"}], FontFamily -> "Source Code Pro",
                    FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
                  GeneralUtilities`Slice[9, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1460183193][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1460183193]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1460183193][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {334., {100.5, 109.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.750973764984335*^9, 3.750977790184601*^9, 
  3.7510243201087837`*^9, 3.751133507768827*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"07e4b75e-b1ce-455c-866f-1347fc1c818f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "build", " ", "model", " ", "with", " ", "classifier", " ", "that", " ", 
    "gives", " ", "the", " ", "best", " ", "results"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClassifierInformation", "[", 
   RowBox[{"classifyMath", "=", 
    RowBox[{"Classify", "[", 
     RowBox[{"math", ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.750973723809987*^9, 3.750973729691554*^9}, {
  3.750977821555554*^9, 3.75097782281735*^9}, {3.750978061675309*^9, 
  3.750978062719597*^9}, {3.750978093797176*^9, 3.750978134324325*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"c52d4bdd-6ebc-4a0a-adad-6b72941b1bd3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"\"Mixed\"",StyleBox[
                   
                   TemplateBox[{"\" (number: \"", "4", "\")\""}, 
                    "RowDefault"], 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowDefault"],
                TagBox[
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]],
               Annotation[#, 
                Short[{"Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Classes\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",","\",\"","\"successful\"","\"unsuccessful\""},
               "RowWithSeparators"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{
                   "71.5152770890371840551`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod],
                  StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "2.134558464663729449`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  
                  TemplateBox[{
                   "67.2461601597097313743`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                  "\", \"", 
                  
                  TemplateBox[{
                   "75.7843940183646367359`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                  "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                Row[{"95% confidence interval: [", 
                  Quantity[67.2461601597097313743`3., "Percent"], ", ", 
                  Quantity[75.7843940183646367359`3., "Percent"], "]"}], 
                "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"LogisticRegression\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], 
                    Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    Association[{"L1Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "L2Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "OptimizationMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[48.00000000000001]], 1],
                     "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[407040869], "Type" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], 
                    Atom[String]}], "HandleQ" -> True, "RowTarget" -> 20, 
                    "Data" -> TypeSystem`PackageScope`CacheHandle[407040869]],
                     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2013327098][{
                    Key["L1Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2013327098][{
                    Key["L2Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["100.0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2013327098][{
                    Key["OptimizationMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["LBFGS", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2013327098][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2013327098]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2013327098][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "L1Regularization" -> 0, "L2Regularization" -> 100., 
                  "OptimizationMethod" -> "LBFGS"], 
                 
                 TypeSystem`Struct[{
                  "L1Regularization", "L2Regularization", 
                   "OptimizationMethod"}, {
                   Atom[Integer], 
                   Atom[Real], 
                   Atom[String]}], 
                 Association["ID" -> 14899395138537]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Single evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
               "4.21`",
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Batch evaluation speed\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "46.`",RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}],"examples per millisecond",
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.6172412261521496024`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0145281318817232982`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.5881849623887029921`3.",
                   "\", \"", "0.6462974899155962127`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.5881849623887029921`3., 
                  ", ", 0.6462974899155962127`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"312.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"4626","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"5.36`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.370472265626639}, {
                    3.6888794541139363`, -0.41402098359445993`}, {
                    5.298317366548036, -0.426558081621201}, {
                    6.684611727667927, -0.48249536527318443`}, {
                    8.216358332386156, -0.48306353961584875`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    2.302585092994046, -0.370472265626639}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    3.6888794541139363`, -0.41402098359445993`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    5.298317366548036, -0.426558081621201}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    6.684611727667927, -0.48249536527318443`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    8.216358332386156, -0.48306353961584875`}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[
                    1.6]]}, {}}}, {{}, {{}, {}}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.3726125038284971}, {
                    2.302585092994046, -0.3683365982633992}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, -0.44245796426786127`}, {
                    3.6888794541139363`, -0.38637035484025845`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, -0.4414556625012377}, {
                    5.298317366548036, -0.41187918477920715`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{6.684611727667927, -0.5063139927121777}, {
                    6.684611727667927, -0.45923089126184247`}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.216358332386156, -0.5131450187491691}, {
                    8.216358332386156, -0.45386059263350376`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.4893186103930271, -0.370472265626639}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1773429960594064`, -0.4893186103930271}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.4893186103930271, -0.370472265626639}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4916143146140974}, {
                    3.6888794541139363`, 0.6334112714759439}, {
                    5.298317366548036, 0.6758857912209187}, {
                    6.684611727667927, 0.7151527708903719}, {
                    8.216358332386156, 0.7088704219502842}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {2.302585092994046, 
                    0.4916143146140974}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {3.6888794541139363`, 
                    0.6334112714759439}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {5.298317366548036, 
                    0.6758857912209187}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {6.684611727667927, 
                    0.7151527708903719}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {8.216358332386156, 
                    0.7088704219502842}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {0.46485717327799725`, 1}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1773429960594064`, 0.46485717327799725`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {0.46485717327799725`, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.27472179851387124`}, {
                    3.6888794541139363`, -0.41402098359445993`}, {
                    5.298317366548036, -0.4154363795634519}, {
                    6.684611727667927, -0.473716291877968}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37047263423771104`}, {
                    3.6888794541139363`, -0.37047449588156156`}, {
                    5.298317366548036, -0.37048868215967723`}, {
                    6.684611727667927, -0.37056209000270146`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3704877241878988}, {
                    3.6888794541139363`, -0.37061187835234005`}, {
                    5.298317366548036, -0.3720571347267789}, {
                    6.684611727667927, -0.3782120186539522}, {
                    8.216358332386156, -0.39918622722987085`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{5.101219803287852, 0.031457449118558356`}, {
                    5.298317366548036, -0.2697389260785477}, {
                    6.684611727667927, -0.4705365095432851}, {
                    8.216358332386156, -0.47940026562336663`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.4551965662054496`, 0.031457449118558356`}, {
                    3.6888794541139363`, -0.26460118426503865`}, {
                    5.298317366548036, -0.3613385042800976}, {
                    6.684611727667927, -0.47218689957293186`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.370472265626639}, {
                    3.6888794541139363`, -0.3704868618967727}, {
                    5.298317366548036, -0.3706555015281014}, {
                    6.684611727667927, -0.37128090754419074`}, {
                    8.216358332386156, -0.37252083418228255`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3622601814765134}, {
                    3.6888794541139363`, -0.37887586194240574`}, {
                    5.298317366548036, -0.426558081621201}, {
                    6.684611727667927, -0.48249536527318443`}, {
                    8.216358332386156, -0.48306353961584875`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3704858649730516}, {
                    3.6888794541139363`, -0.36945875570902525`}, {
                    5.298317366548036, -0.38434235267775196`}, {
                    6.684611727667927, -0.42122371759930827`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.037913799099859, 0.031457449118558356`}, {
                    6.684611727667927, -0.47333148314958123`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.169041871501283, 0.031457449118558356`}, {
                    5.298317366548036, -0.34295057985780425`}, {
                    6.684611727667927, -0.47222931352037395`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.27472179851387124`}}, {{
                    3.6888794541139363`, -0.41402098359445993`}}, {{
                    5.298317366548036, -0.4154363795634519}}, {{
                    6.684611727667927, -0.473716291877968}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37047263423771104`}}, {{
                    3.6888794541139363`, -0.37047449588156156`}}, {{
                    5.298317366548036, -0.37048868215967723`}}, {{
                    6.684611727667927, -0.37056209000270146`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3704877241878988}}, {{
                    3.6888794541139363`, -0.37061187835234005`}}, {{
                    5.298317366548036, -0.3720571347267789}}, {{
                    6.684611727667927, -0.3782120186539522}}, {{
                    8.216358332386156, -0.39918622722987085`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.5689256460917147`}}, {{
                    3.6888794541139363`, 2.1897377783088645`}}, {{
                    5.298317366548036, -0.2697389260785477}}, {{
                    6.684611727667927, -0.4705365095432851}}, {{
                    8.216358332386156, -0.47940026562336663`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.06808107796229176}}, {{
                    3.6888794541139363`, -0.26460118426503865`}}, {{
                    5.298317366548036, -0.3613385042800976}}, {{
                    6.684611727667927, -0.47218689957293186`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.370472265626639}}, {{
                    3.6888794541139363`, -0.3704868618967727}}, {{
                    5.298317366548036, -0.3706555015281014}}, {{
                    6.684611727667927, -0.37128090754419074`}}, {{
                    8.216358332386156, -0.37252083418228255`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3622601814765134}}, {{
                    3.6888794541139363`, -0.37887586194240574`}}, {{
                    5.298317366548036, -0.426558081621201}}, {{
                    6.684611727667927, -0.48249536527318443`}}, {{
                    8.216358332386156, -0.48306353961584875`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3704858649730516}}, {{
                    3.6888794541139363`, -0.36945875570902525`}}, {{
                    5.298317366548036, -0.38434235267775196`}}, {{
                    6.684611727667927, -0.42122371759930827`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 2.947119469871761}}, {{
                    6.684611727667927, -0.47333148314958123`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.5554003120976693}}, {{
                    3.6888794541139363`, 0.19065391186928754`}}, {{
                    5.298317366548036, -0.34295057985780425`}}, {{
                    6.684611727667927, -0.47222931352037395`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.6736292623651604, 2.947119469871761}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1773429960594064`, -0.6736292623651604}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.6736292623651604, 0.031457449118558356`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.370472265626639}, {
                    3.6888794541139363`, -0.41402098359445993`}, {
                    5.298317366548036, -0.426558081621201}, {
                    6.684611727667927, -0.48249536527318443`}, {
                    8.216358332386156, -0.48306353961584875`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    2.302585092994046, -0.370472265626639}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    3.6888794541139363`, -0.41402098359445993`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    5.298317366548036, -0.426558081621201}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    6.684611727667927, -0.48249536527318443`}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {
                    8.216358332386156, -0.48306353961584875`}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[
                    1.6]]}, {}}}, {{}, {{}, {}}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.3726125038284971}, {
                    2.302585092994046, -0.3683365982633992}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.6888794541139363`, -0.44245796426786127`}, {
                    3.6888794541139363`, -0.38637035484025845`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.298317366548036, -0.4414556625012377}, {
                    5.298317366548036, -0.41187918477920715`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{6.684611727667927, -0.5063139927121777}, {
                    6.684611727667927, -0.45923089126184247`}}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{8.216358332386156, -0.5131450187491691}, {
                    8.216358332386156, -0.45386059263350376`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.4893186103930271, -0.370472265626639}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1773429960594064`, -0.4893186103930271}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.4893186103930271, -0.370472265626639}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.4916143146140974}, {
                    3.6888794541139363`, 0.6334112714759439}, {
                    5.298317366548036, 0.6758857912209187}, {
                    6.684611727667927, 0.7151527708903719}, {
                    8.216358332386156, 0.7088704219502842}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {2.302585092994046, 
                    0.4916143146140974}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {3.6888794541139363`, 
                    0.6334112714759439}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {5.298317366548036, 
                    0.6758857912209187}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {6.684611727667927, 
                    0.7151527708903719}, Automatic, 
                    Offset[6.272]], 
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {8.216358332386156, 
                    0.7088704219502842}, Automatic, 
                    Offset[6.272]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {0.46485717327799725`, 1}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1773429960594064`, 0.46485717327799725`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {0.46485717327799725`, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.27472179851387124`}, {
                    3.6888794541139363`, -0.41402098359445993`}, {
                    5.298317366548036, -0.4154363795634519}, {
                    6.684611727667927, -0.473716291877968}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37047263423771104`}, {
                    3.6888794541139363`, -0.37047449588156156`}, {
                    5.298317366548036, -0.37048868215967723`}, {
                    6.684611727667927, -0.37056209000270146`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3704877241878988}, {
                    3.6888794541139363`, -0.37061187835234005`}, {
                    5.298317366548036, -0.3720571347267789}, {
                    6.684611727667927, -0.3782120186539522}, {
                    8.216358332386156, -0.39918622722987085`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association["L1Regularization" -> 0, "L2Regularization" -> 
                    10000., "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{5.101219803287852, 0.031457449118558356`}, {
                    5.298317366548036, -0.2697389260785477}, {
                    6.684611727667927, -0.4705365095432851}, {
                    8.216358332386156, -0.47940026562336663`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.4551965662054496`, 0.031457449118558356`}, {
                    3.6888794541139363`, -0.26460118426503865`}, {
                    5.298317366548036, -0.3613385042800976}, {
                    6.684611727667927, -0.47218689957293186`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.370472265626639}, {
                    3.6888794541139363`, -0.3704868618967727}, {
                    5.298317366548036, -0.3706555015281014}, {
                    6.684611727667927, -0.37128090754419074`}, {
                    8.216358332386156, -0.37252083418228255`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Line[{{2.302585092994046, -0.3622601814765134}, {
                    3.6888794541139363`, -0.37887586194240574`}, {
                    5.298317366548036, -0.426558081621201}, {
                    6.684611727667927, -0.48249536527318443`}, {
                    8.216358332386156, -0.48306353961584875`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.3704858649730516}, {
                    3.6888794541139363`, -0.36945875570902525`}, {
                    5.298317366548036, -0.38434235267775196`}, {
                    6.684611727667927, -0.42122371759930827`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{6.037913799099859, 0.031457449118558356`}, {
                    6.684611727667927, -0.47333148314958123`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.169041871501283, 0.031457449118558356`}, {
                    5.298317366548036, -0.34295057985780425`}, {
                    6.684611727667927, -0.47222931352037395`}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.27472179851387124`}}, {{
                    3.6888794541139363`, -0.41402098359445993`}}, {{
                    5.298317366548036, -0.4154363795634519}}, {{
                    6.684611727667927, -0.473716291877968}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.37047263423771104`}}, {{
                    3.6888794541139363`, -0.37047449588156156`}}, {{
                    5.298317366548036, -0.37048868215967723`}}, {{
                    6.684611727667927, -0.37056209000270146`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3704877241878988}}, {{
                    3.6888794541139363`, -0.37061187835234005`}}, {{
                    5.298317366548036, -0.3720571347267789}}, {{
                    6.684611727667927, -0.3782120186539522}}, {{
                    8.216358332386156, -0.39918622722987085`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.5689256460917147`}}, {{
                    3.6888794541139363`, 2.1897377783088645`}}, {{
                    5.298317366548036, -0.2697389260785477}}, {{
                    6.684611727667927, -0.4705365095432851}}, {{
                    8.216358332386156, -0.47940026562336663`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.06808107796229176}}, {{
                    3.6888794541139363`, -0.26460118426503865`}}, {{
                    5.298317366548036, -0.3613385042800976}}, {{
                    6.684611727667927, -0.47218689957293186`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.370472265626639}}, {{
                    3.6888794541139363`, -0.3704868618967727}}, {{
                    5.298317366548036, -0.3706555015281014}}, {{
                    6.684611727667927, -0.37128090754419074`}}, {{
                    8.216358332386156, -0.37252083418228255`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3622601814765134}}, {{
                    3.6888794541139363`, -0.37887586194240574`}}, {{
                    5.298317366548036, -0.426558081621201}}, {{
                    6.684611727667927, -0.48249536527318443`}}, {{
                    8.216358332386156, -0.48306353961584875`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, -0.3704858649730516}}, {{
                    3.6888794541139363`, -0.36945875570902525`}}, {{
                    5.298317366548036, -0.38434235267775196`}}, {{
                    6.684611727667927, -0.42122371759930827`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 2.947119469871761}}, {{
                    6.684611727667927, -0.47333148314958123`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 0.5554003120976693}}, {{
                    3.6888794541139363`, 0.19065391186928754`}}, {{
                    5.298317366548036, -0.34295057985780425`}}, {{
                    6.684611727667927, -0.47222931352037395`}}}]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association["L1Regularization" -> 0, "L2Regularization" -> 
                    10., "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14903690105833]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14907985073129]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14912280040425]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14916575007721]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14920869975017]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14925164942313]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14929459909609]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14933754876905]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14938049844201]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LogisticRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    Atom[Integer], 
                    Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 14942344811497]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {{}, {}}}}}, {
                    DisplayFunction -> Identity, 
                    PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.6736292623651604, 2.947119469871761}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1773429960594064`, -0.6736292623651604}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1773429960594064`, 
                    Log[4626]}, {-0.6736292623651604, 0.031457449118558356`}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}]}]], 
                    Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{248., {90., 96.}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.750977840065921*^9, {3.750978073297511*^9, 3.7509781439999523`*^9}, 
   3.751024326266066*^9, 3.751133513775813*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"f86af27e-90bd-48c2-9899-7329925d4cd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "check", " ", "to", " ", "make", " ", "sure", " ", "output", " ", "from", 
    " ", "model", " ", "makes", " ", "sense"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "120", ",", "120", ",", "\"\<3 levels below\>\""}], 
      "}"}], ",", "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "120", ",", "120", ",", "\"\<2 levels below\>\""}], 
      "}"}], ",", "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "120", ",", "120", ",", "\"\<1 level below\>\""}], 
      "}"}], ",", "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"120", ",", "120", ",", "120", ",", "\"\<college level 1\>\""}],
       "}"}], ",", "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\"\<3 levels below\>\""}], "}"}], 
     ",", "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\"\<2 levels below\>\""}], "}"}], 
     ",", "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\"\<1 level below\>\""}], "}"}], 
     ",", "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"classifyMath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", 
       RowBox[{"Missing", "[", "]"}], ",", "\"\<college level 1\>\""}], "}"}],
      ",", "\"\<Probabilities\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.750977307364521*^9, 3.750977397617668*^9}, {
  3.7509774453650723`*^9, 3.7509774867409363`*^9}, {3.750977659137948*^9, 
  3.7509776669043283`*^9}, {3.75097785250872*^9, 3.750977936545169*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"f1f8be2f-aaba-4231-be7d-57955bc02e30"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.9182736170152682`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.08172638298473174`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.751133513887122*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"b142a81e-e31a-4953-8e32-9f8168779f8c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8275587837353767`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.1724412162646232`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.751133513894669*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"054d9a31-8d3e-4bbb-8d62-db6310abe609"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8083094579648639`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.19169054203513616`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.751133513901065*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"794b857a-4ed0-40be-8da5-326585a423fc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8124322110165767`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.18756778898342324`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.751133513907605*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"1ace2432-41fa-4f8a-ae07-99f4e1ce0b48"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.8269345215314519`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.17306547846854825`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.751133513964067*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"306a5b81-3084-4164-8180-30d39b4f86c5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.671143329283573`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.3288566707164271`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.751133513971985*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"229992cd-954b-4b5d-b7dc-2150a8fea216"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.6419872037099956`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.3580127962900044`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.751133513978109*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"5e208569-850c-4ec7-9722-bee2234f6c22"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"successful\"\>", "\[Rule]", "0.6481299152238036`"}], ",", 
   RowBox[{"\<\"unsuccessful\"\>", "\[Rule]", "0.3518700847761963`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.750977350447348*^9, 3.7509778473520737`*^9, 3.75097793741538*^9, {
   3.7509780810987387`*^9, 3.75097815434895*^9}, 3.751024326378834*^9, 
   3.7511335139841433`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"2377a1ee-5558-469c-ae58-a77c5e02d99e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellChangeTimes->{{3.749503317468103*^9, 3.7495033178510227`*^9}, {
  3.749924468174314*^9, 3.7499244683317537`*^9}},
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9cc2912e-6a95-42ef-a089-3a599e12461b"],

Cell[CellGroupData[{

Cell["Step 5: Build and Test Model", "Section",
 CellChangeTimes->{{3.7491581549972553`*^9, 3.749158159525635*^9}, {
  3.749164281734682*^9, 3.7491642825199337`*^9}, {3.7492329099850197`*^9, 
  3.749232910291271*^9}},ExpressionUUID->"e17b9990-17b1-4fd7-9a08-\
6ab24c90966c"],

Cell["\<\
Set a color value and a number format that I\[CloseCurlyQuote]ll be reusing
In a notebook I was distributing, I\[CloseCurlyQuote]d put these values and \
the analysis from step 4 in an initialization cell so they would \
automatically run the first time the code was run\
\>", "SideNote",
 CellChangeTimes->{{3.750971918761257*^9, 3.7509719748463993`*^9}, {
  3.750972013903549*^9, 3.750972042205586*^9}, {3.7509782098842583`*^9, 
  3.75097822606721*^9}},ExpressionUUID->"c5a6da38-459a-48de-970f-\
6cc1df83ed02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LLCCBlue", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", 
     RowBox[{"57", "/", "255"}], ",", 
     RowBox[{"166", "/", "255"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myPercentPrecision", "[", "x_", "]"}], ":=", 
  RowBox[{"SetPrecision", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<PercentFraction\>\"", "]"}], "[", "x", 
     "]"}], ",", "4"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.750701701095866*^9, 3.750701707394858*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"70b05fd9-6beb-48aa-8cb3-05d12a1b1fc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Style", "[", "\"\<\>\"", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\< What-if Analysis of Placement Test Score Cutoffs \>\"", ",", 
       "Bold", ",", "38", ",", 
       RowBox[{"FontColor", "\[Rule]", "LLCCBlue"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\\n  The cutoff score indicates the highest score that will be \
placed into the listed class.  \\n  The number in the bar indicates the \
percentage of students who fall into the associated category.  \>\"", ",", 
       "16"}], "]"}], ",", "\n", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<  Note: If a red dot appears at either end of a slider bar, the \
current value is outside the possible range.  \\n\>\"", ",", "16", ",", 
       "Italic"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"TabView", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Reading\>\"", ",", "16", ",", "Bold"}], "]"}], 
         "\[Rule]", 
         RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "write", " ", "function", " ", "to", " ", "calculate", " ", 
            "average", " ", "probability", " ", "in", " ", "a", " ", 
            "range"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"RDG098recursive", "[", "x_Integer", "]"}], ":=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
               RowBox[{
                RowBox[{"classifyReading", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", "\"\<RDG-098\>\""}], "}"}], ",", 
                  RowBox[{
                  "\"\<Probability\>\"", "\[Rule]", "\"\<successful\>\""}]}], 
                 "]"}], "+", 
                RowBox[{"RDG098recursive", "[", 
                 RowBox[{"x", "-", "1"}], "]"}]}], ",", "\[IndentingNewLine]",
                "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"RDG098success", "[", "x_Integer", "]"}], ":=", 
             RowBox[{
              RowBox[{"RDG098recursive", "[", "x", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"x", "+", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"RDG099recursive", "[", "x_Integer", "]"}], ":=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "RDG098cutoff"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"classifyReading", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", "\"\<RDG-099\>\""}], "}"}], ",", 
                  RowBox[{
                  "\"\<Probability\>\"", "\[Rule]", "\"\<successful\>\""}]}], 
                 "]"}], "+", 
                RowBox[{"RDG099recursive", "[", 
                 RowBox[{"x", "-", "1"}], "]"}]}], ",", "\[IndentingNewLine]",
                ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"RDG099success", "[", "x_Integer", "]"}], ":=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"RDG099recursive", "[", "x", "]"}], "-", "Null"}], 
               ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"x", "-", "RDG098cutoff"}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "display", " ", "as", " ", "stacked", " ", "bar", " ", "chart"}],
              " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"BarChart", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"RDG098success", "[", "RDG098cutoff", "]"}], 
                    "]"}], ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"RDG098success", "[", "RDG098cutoff", "]"}], 
                    "]"}], ",", "Center", ",", "Bold", ",", "18", ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"RDG098success", "[", "RDG098cutoff", "]"}]}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"RDG099success", "[", "RDG099cutoff", "]"}], 
                    "]"}], ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"RDG099success", "[", "RDG099cutoff", "]"}], 
                    "]"}], ",", "Center", ",", "Bold", ",", "18", ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"RDG099success", "[", "RDG099cutoff", "]"}]}], 
                   "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"ChartLayout", "->", "\"\<Stacked\>\""}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ChartStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"LLCCBlue", ",", "LightGray"}], "}"}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"BarSpacing", "\[Rule]", "1.5"}], "\[IndentingNewLine]",
               ",", 
              RowBox[{"ChartLabels", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Placed", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<RDG-098\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<RDG-099\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}]}], "}"}], ",", "Above"}], "]"}], ",", "None"}], 
                "}"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"ChartLegends", "\[Rule]", 
               RowBox[{"Placed", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Successful\>\"", ",", "18"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Unsuccessful\>\"", ",", "18"}], "]"}]}], 
                  "}"}], ",", "Right"}], "]"}]}], "\[IndentingNewLine]", ",", 
              
              RowBox[{"ImageSize", "\[Rule]", "720"}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"style", " ", "info", " ", "for", " ", "sliders"}], " ", 
            "*)"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"RDG098cutoff", ",", "59", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<RDG-098 cutoff score\>\"", ",", "16"}], "]"}]}], 
              "}"}], ",", "0", ",", "120", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}]}], "}"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"RDG099cutoff", ",", "75", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<RDG-099 cutoff score\>\"", ",", "16"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"RDG098cutoff", "+", "1"}], ",", "120", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Writing\>\"", ",", "16", ",", "Bold"}], "]"}], 
         "\[Rule]", 
         RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "function", " ", "to", " ", "calculate", " ", "average", " ", 
            "probability", " ", "in", " ", "a", " ", "range"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"EGL098recursive", "[", "x_Integer", "]"}], ":=", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"xa", "=", "0"}], ",", 
                 RowBox[{"xa", "\[LessEqual]", "x"}], ",", 
                 RowBox[{"xa", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"ya", "=", "0"}], ",", 
                    RowBox[{"ya", "\[LessEqual]", "8"}], ",", 
                    RowBox[{"ya", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"sum", "+=", 
                    RowBox[{"classifyWriting", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xa", ",", "ya", ",", "\"\<EGL-098\>\""}], "}"}], 
                    ",", 
                    RowBox[{
                    "\"\<Probability\>\"", "\[Rule]", 
                    "\"\<successful\>\""}]}], "]"}]}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", 
               RowBox[{"Return", "[", "sum", "]"}], ";"}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EGL098success", "[", "x_Integer", "]"}], ":=", 
             RowBox[{
              RowBox[{"EGL098recursive", "[", "x", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"x", "+", "1"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"8", "+", "1"}], ")"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EGL099recursive", "[", 
              RowBox[{"x_Integer", ",", "y_Integer"}], "]"}], ":=", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"xa", "=", 
                  RowBox[{"EGL098cutoffSS", "+", "1"}]}], ",", 
                 RowBox[{"xa", "\[LessEqual]", "x"}], ",", 
                 RowBox[{"xa", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"ya", "=", 
                    RowBox[{"EGL098cutoffWS", "+", "1"}]}], ",", 
                    RowBox[{"ya", "\[LessEqual]", "y"}], ",", 
                    RowBox[{"ya", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"sum", "+=", 
                    RowBox[{"classifyWriting", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xa", ",", "ya", ",", "\"\<EGL-099\>\""}], "}"}], 
                    ",", 
                    RowBox[{
                    "\"\<Probability\>\"", "\[Rule]", 
                    "\"\<successful\>\""}]}], "]"}]}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", 
               RowBox[{"Return", "[", "sum", "]"}], ";"}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EGL099success", "[", 
              RowBox[{"x_Integer", ",", "y_Integer"}], "]"}], ":=", 
             RowBox[{
              RowBox[{"EGL099recursive", "[", 
               RowBox[{"x", ",", "y"}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"x", "-", "EGL098cutoffSS"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"y", "+", "1"}], ")"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"EGL101recursive", ":=", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"xa", "=", 
                  RowBox[{"EGL099cutoffSS", "+", "1"}]}], ",", 
                 RowBox[{"xa", "\[LessEqual]", "120"}], ",", 
                 RowBox[{"xa", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"ya", "=", 
                    RowBox[{"EGL099cutoffWS", "+", "1"}]}], ",", 
                    RowBox[{"ya", "\[LessEqual]", "8"}], ",", 
                    RowBox[{"ya", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"sum", "+=", 
                    RowBox[{"classifyWriting", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xa", ",", "ya", ",", "\"\<EGL-101\>\""}], "}"}], 
                    ",", 
                    RowBox[{
                    "\"\<Probability\>\"", "\[Rule]", 
                    "\"\<successful\>\""}]}], "]"}]}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", 
               RowBox[{"Return", "[", "sum", "]"}], ";"}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"EGL101success", ":=", 
             RowBox[{"EGL101recursive", "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"120", "-", "EGL099cutoffSS"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"8", "-", "EGL099cutoffWS"}], ")"}]}], ")"}]}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "display", " ", "as", " ", "stacked", " ", "bar", " ", "chart"}],
              " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"BarChart", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"EGL098success", "[", "EGL098cutoffSS", "]"}], 
                    "]"}], ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"EGL098success", "[", "EGL098cutoffSS", "]"}], 
                    "]"}], ",", "Center", ",", "Bold", ",", "18", ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"EGL098success", "[", "EGL098cutoffSS", "]"}]}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"EGL099success", "[", 
                    RowBox[{"EGL099cutoffSS", ",", "EGL099cutoffWS"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"EGL099success", "[", 
                    RowBox[{"EGL099cutoffSS", ",", "EGL099cutoffWS"}], "]"}], 
                    "]"}], ",", "Center", ",", "Bold", ",", "18", ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"EGL099success", "[", 
                    RowBox[{"EGL099cutoffSS", ",", "EGL099cutoffWS"}], 
                    "]"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", "EGL101success", "]"}],
                     ",", 
                    RowBox[{"myPercentPrecision", "[", "EGL101success", "]"}],
                     ",", "Center", ",", "Bold", ",", "18", ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", "EGL101success"}], "]"}]}], "}"}]}], 
               "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"ChartLayout", "\[Rule]", "\"\<Stacked\>\""}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ChartStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"LLCCBlue", ",", "LightGray"}], "}"}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"BarSpacing", "\[Rule]", "1.5"}], "\[IndentingNewLine]",
               ",", 
              RowBox[{"ChartLabels", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Placed", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<EGL-098\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<EGL-099\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<EGL-101\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}]}], "}"}], ",", "Above"}], "]"}], ",", "None"}], 
                "}"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"ChartLegends", "\[Rule]", 
               RowBox[{"Placed", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Successful\>\"", ",", "18"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Unsuccessful\>\"", ",", "18"}], "]"}]}], 
                  "}"}], ",", "Right"}], "]"}]}], "\[IndentingNewLine]", ",", 
              
              RowBox[{"ImageSize", "\[Rule]", "720"}]}], 
             "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"style", " ", "info", " ", "for", " ", "sliders"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<EGL-098\>\"", ",", "18", ",", "Bold"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"EGL098cutoffSS", ",", "60", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Sentence Skills cutoff\>\"", ",", "16"}], 
                "]"}]}], "}"}], ",", "0", ",", "120", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Writing Sample score not used\>\"", ",", "16"}], 
            "]"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<EGL-099\>\"", ",", "18", ",", "Bold"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"EGL099cutoffSS", ",", "80", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Sentence Skills cutoff\>\"", ",", "16"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"EGL098cutoffSS", "+", "1"}], ",", "120", ",", "1", ",", 
             
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"EGL099cutoffWS", ",", "5", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Writing Sample cutoff\>\"", ",", "16"}], "]"}]}],
               "}"}], ",", "0", ",", "8", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Math\>\"", ",", "16", ",", "Bold"}], "]"}], "\[Rule]", 
         
         RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "function", " ", "to", " ", "calculate", " ", "average", " ", 
            "probability", " ", "in", " ", "a", " ", "range"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"MAT081recursive", "[", "x_Integer", "]"}], ":=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
               RowBox[{
                RowBox[{"classifyMath", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", 
                    RowBox[{"Missing", "[", "]"}], ",", 
                    RowBox[{"Missing", "[", "]"}], ",", 
                    "\"\<3 levels below\>\""}], "}"}], ",", 
                  RowBox[{
                  "\"\<Probability\>\"", "\[Rule]", "\"\<successful\>\""}]}], 
                 "]"}], "+", 
                RowBox[{"MAT081recursive", "[", 
                 RowBox[{"x", "-", "1"}], "]"}]}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"MAT081success", "[", "x_Integer", "]"}], ":=", 
             RowBox[{
              RowBox[{"MAT081recursive", "[", "x", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"x", "+", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"MAT088recursive", "[", "y_Integer", "]"}], ":=", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"xa", "=", 
                  RowBox[{"MAT081cutoff", "+", "1"}]}], ",", 
                 RowBox[{"xa", "\[LessEqual]", "120"}], ",", 
                 RowBox[{"xa", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"ya", "=", "0"}], ",", 
                    RowBox[{"ya", "\[LessEqual]", "y"}], ",", 
                    RowBox[{"ya", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"sum", "+=", 
                    RowBox[{"classifyMath", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xa", ",", "ya", ",", 
                    RowBox[{"Missing", "[", "]"}], ",", 
                    "\"\<2 levels below\>\""}], "}"}], ",", 
                    RowBox[{
                    "\"\<Probability\>\"", "\[Rule]", 
                    "\"\<successful\>\""}]}], "]"}]}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", 
               RowBox[{"Return", "[", "sum", "]"}], ";"}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"MAT088success", "[", "y_Integer", "]"}], ":=", 
             RowBox[{
              RowBox[{"MAT088recursive", "[", "y", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"120", "-", "MAT081cutoff"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"y", "+", "1"}], ")"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"MAT094recursive", "[", "y_Integer", "]"}], ":=", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"xa", "=", 
                  RowBox[{"MAT081cutoff", "+", "1"}]}], ",", 
                 RowBox[{"xa", "\[LessEqual]", "120"}], ",", 
                 RowBox[{"xa", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"ya", "=", 
                    RowBox[{"MAT088cutoff", "+", "1"}]}], ",", 
                    RowBox[{"ya", "\[LessEqual]", "y"}], ",", 
                    RowBox[{"ya", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"sum", "+=", 
                    RowBox[{"classifyMath", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xa", ",", "ya", ",", 
                    RowBox[{"Missing", "[", "]"}], ",", 
                    "\"\<1 level below\>\""}], "}"}], ",", 
                    RowBox[{
                    "\"\<Probability\>\"", "\[Rule]", 
                    "\"\<successful\>\""}]}], "]"}]}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", 
               RowBox[{"Return", "[", "sum", "]"}], ";"}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"MAT094success", "[", "y_Integer", "]"}], ":=", 
             RowBox[{
              RowBox[{"MAT094recursive", "[", "y", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"120", "-", "MAT081cutoff"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"y", "-", "MAT088cutoff"}], ")"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"CMAT1recursive", "[", "z_Integer", "]"}], ":=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"z", "\[GreaterEqual]", "0"}], ",", 
               RowBox[{
                RowBox[{"classifyMath", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Missing", "[", "]"}], ",", 
                    RowBox[{"Missing", "[", "]"}], ",", "z", ",", 
                    "\"\<college level 1\>\""}], "}"}], ",", 
                  RowBox[{
                  "\"\<Probability\>\"", "\[Rule]", "\"\<successful\>\""}]}], 
                 "]"}], "+", 
                RowBox[{"CMAT1recursive", "[", 
                 RowBox[{"z", "-", "1"}], "]"}]}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"CMAT1success", "[", "z_Integer", "]"}], ":=", 
             RowBox[{
              RowBox[{"CMAT1recursive", "[", "z", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"z", "+", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "display", " ", "as", " ", "stacked", " ", "bar", " ", "chart"}],
              " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"BarChart", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"MAT081success", "[", "MAT081cutoff", "]"}], 
                    "]"}], ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"MAT081success", "[", "MAT081cutoff", "]"}], 
                    "]"}], ",", "Center", ",", "Bold", ",", "18"}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"MAT081success", "[", "MAT081cutoff", "]"}]}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"MAT088success", "[", "MAT088cutoff", "]"}], 
                    "]"}], ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"MAT088success", "[", "MAT088cutoff", "]"}], 
                    "]"}], ",", "Center", ",", "Bold", ",", "18"}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"MAT088success", "[", "MAT088cutoff", "]"}]}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"MAT094success", "[", "MAT094cutoff", "]"}], 
                    "]"}], ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"MAT094success", "[", "MAT094cutoff", "]"}], 
                    "]"}], ",", "Center", ",", "Bold", ",", "18"}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"MAT094success", "[", "MAT094cutoff", "]"}]}], 
                   "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Labeled", "[", 
                   RowBox[{
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"CMAT1success", "[", "CMAT1cutoff", "]"}], "]"}], 
                    ",", 
                    RowBox[{"myPercentPrecision", "[", 
                    RowBox[{"CMAT1success", "[", "CMAT1cutoff", "]"}], "]"}], 
                    ",", "Center", ",", "Bold", ",", "18"}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"myPercentPrecision", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"CMAT1success", "[", "CMAT1cutoff", "]"}]}], 
                   "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"ChartLayout", "\[Rule]", "\"\<Stacked\>\""}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ChartStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"LLCCBlue", ",", "LightGray"}], "}"}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"BarSpacing", "\[Rule]", "1.5"}], "\[IndentingNewLine]",
               ",", 
              RowBox[{"ChartLabels", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Placed", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<MAT-081\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<MAT-088\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<MAT-094\\n\>\"", ",", "Bold", ",", "22"}], 
                    "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<College\\nLevel 1\>\"", ",", "Bold", ",", "22"}], 
                    "]"}]}], "}"}], ",", "Above"}], "]"}], ",", "None"}], 
                "}"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"ChartLegends", "\[Rule]", 
               RowBox[{"Placed", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Successful\>\"", ",", "18"}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Unsuccessful\>\"", ",", "18"}], "]"}]}], 
                  "}"}], ",", "Right"}], "]"}]}], "\[IndentingNewLine]", ",", 
              
              RowBox[{"ImageSize", "\[Rule]", "720"}]}], 
             "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"style", " ", "info", " ", "for", " ", "sliders"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"MAT081cutoff", ",", "59", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<MAT-081 cutoff score\>\"", ",", "16"}], "]"}]}], 
              "}"}], ",", "0", ",", "120", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "}"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"MAT088cutoff", ",", "59", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<MAT-088 cutoff score\>\"", ",", "16"}], "]"}]}], 
              "}"}], ",", "0", ",", "120", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "}"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"MAT094cutoff", ",", "84", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<MAT-094 cutoff score\>\"", ",", "16"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"MAT088cutoff", "+", "1"}], ",", "120", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "}"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"CMAT1cutoff", ",", "59", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<College Level 1 cutoff score\>\"", ",", "16"}], 
                "]"}]}], "}"}], ",", "0", ",", "120", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "}"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Note: college level 1 math gives students the option of \
taking MAT-104, 105, 113, 141, or 251\>\"", ",", "Italic", ",", "14"}], 
            "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.750719093538972*^9, 3.750719116724114*^9}, {
   3.7507193240913363`*^9, 3.750719386447789*^9}, {3.750768677870267*^9, 
   3.7507686948198442`*^9}, {3.7507688936291847`*^9, 3.750768922328973*^9}, {
   3.7507690242898073`*^9, 3.750769030853465*^9}, {3.750769071133875*^9, 
   3.750769076444607*^9}, {3.7507894771719933`*^9, 3.750789486568038*^9}, 
   3.750789667471304*^9, {3.750790363312681*^9, 3.7507904398841753`*^9}, 
   3.750790631153264*^9, {3.750790768419115*^9, 3.750790812775388*^9}, {
   3.7508507323325453`*^9, 3.7508507327562037`*^9}, {3.75085091514852*^9, 
   3.750851000383214*^9}, {3.750851041950087*^9, 3.750851062706072*^9}, {
   3.750851095290122*^9, 3.750851129508685*^9}, {3.750851177034672*^9, 
   3.750851186174261*^9}, {3.750851271459783*^9, 3.750851304681368*^9}, {
   3.750851350622118*^9, 3.750851433151807*^9}, {3.75096642909317*^9, 
   3.750966437075334*^9}, {3.7509665492499437`*^9, 3.750966614652854*^9}, {
   3.750966661511145*^9, 3.750966741417151*^9}, {3.7509670181075697`*^9, 
   3.75096712028223*^9}, {3.750967157056801*^9, 3.75096716830364*^9}, {
   3.7509673381884737`*^9, 3.7509673918552217`*^9}, {3.750967514290852*^9, 
   3.7509676628115177`*^9}, {3.7509677077948713`*^9, 3.750967708028529*^9}, {
   3.7509677530821543`*^9, 3.750967763379636*^9}, {3.750967797417622*^9, 
   3.7509679032604103`*^9}, 3.750967993327034*^9, {3.750968208226925*^9, 
   3.750968246689982*^9}, {3.750968427526524*^9, 3.750968444311513*^9}, {
   3.7509685337900476`*^9, 3.750968634440583*^9}, {3.750978961318757*^9, 
   3.750978981078169*^9}, {3.7509793898572807`*^9, 3.750979390284956*^9}, 
   3.7509794485754547`*^9, {3.750980272007769*^9, 3.750980275555415*^9}, {
   3.7509803212117643`*^9, 3.750980566213276*^9}, 3.7509808682175407`*^9, {
   3.7509818029092493`*^9, 3.750981825976705*^9}, {3.750982094343506*^9, 
   3.750982157622561*^9}, {3.750982782395545*^9, 3.750982791146002*^9}, {
   3.7509828970294857`*^9, 3.750982929321127*^9}, {3.750982964748247*^9, 
   3.750982975997353*^9}, {3.750983011374228*^9, 3.750983101498608*^9}, {
   3.750983148383102*^9, 3.750983263183989*^9}, {3.750983656800105*^9, 
   3.750983723548079*^9}, {3.750983840210228*^9, 3.7509838680376453`*^9}, {
   3.750983901071291*^9, 3.750983993091209*^9}, {3.75098404542529*^9, 
   3.750984057841161*^9}, {3.7509841919898*^9, 3.7509843081437798`*^9}, {
   3.750984391136443*^9, 3.750984393837463*^9}, {3.750984485812167*^9, 
   3.75098449206947*^9}, {3.750984574736764*^9, 3.7509845750970173`*^9}, {
   3.750984641162854*^9, 3.750984735007416*^9}, {3.750984883712191*^9, 
   3.7509848912930117`*^9}, {3.750985292604745*^9, 3.750985335983816*^9}, {
   3.7510245906283083`*^9, 3.751024622022648*^9}, {3.751024811712577*^9, 
   3.751024812837235*^9}, {3.751025372930553*^9, 3.751025442968306*^9}, {
   3.75104125924903*^9, 3.75104125986913*^9}, {3.751062019054317*^9, 
   3.751062077044942*^9}, {3.7510621382975683`*^9, 3.751062144134547*^9}, {
   3.7510622868626833`*^9, 3.751062351253746*^9}, {3.7511064509214582`*^9, 
   3.7511065230153513`*^9}, {3.751106573685649*^9, 3.751106619150486*^9}, {
   3.751106658269229*^9, 3.751106685810305*^9}, 3.751107064663025*^9, 
   3.751110572250861*^9, {3.751111184544132*^9, 3.751111190124408*^9}, {
   3.751111247335205*^9, 3.751111313665792*^9}, {3.7511113442577744`*^9, 
   3.7511113802446127`*^9}, 3.7511114246038713`*^9, {3.751111464483758*^9, 
   3.751111586648381*^9}, {3.7511116205775948`*^9, 3.751111667305662*^9}, {
   3.751111702424562*^9, 3.751111706734593*^9}, {3.751111768753097*^9, 
   3.751111801754014*^9}, {3.751111844949834*^9, 3.751111884479981*^9}, {
   3.751112323701148*^9, 3.7511127718243113`*^9}, {3.751114604312804*^9, 
   3.7511146092280407`*^9}, {3.751114702556259*^9, 3.751114787669735*^9}, {
   3.7511148971029387`*^9, 3.751114957841936*^9}, {3.7511150544610567`*^9, 
   3.751115449404879*^9}, 3.7511162867457657`*^9, {3.751116348928131*^9, 
   3.751116360086825*^9}, {3.751116417865752*^9, 3.7511164208687353`*^9}, {
   3.7511164577827044`*^9, 3.751116503415491*^9}, {3.751116606692966*^9, 
   3.751116610503152*^9}, 3.751126311684144*^9, {3.751126433640531*^9, 
   3.751126440231737*^9}, {3.751127856019109*^9, 3.751127881552153*^9}, {
   3.751128621597061*^9, 3.7511286306611347`*^9}, {3.751129235913595*^9, 
   3.751129266317807*^9}, {3.751133532173336*^9, 3.7511335599569674`*^9}, {
   3.75113416766256*^9, 3.7511341685930567`*^9}, {3.751134417672052*^9, 
   3.75113445922431*^9}, {3.7511447227735243`*^9, 
   3.7511447324827223`*^9}},ExpressionUUID->"99b256a7-f5fb-448c-9b83-\
c72584ae88ef"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>"},
    {
     StyleBox["\<\" What-if Analysis of Placement Test Score Cutoffs \"\>",
      StripOnInput->False,
      FontSize->38,
      FontWeight->Bold,
      FontColor->RGBColor[0, 
        Rational[19, 85], 
        Rational[166, 255]]]},
    {
     StyleBox["\<\"\\n  The cutoff score indicates the highest score that \
will be placed into the listed class.  \\n  The number in the bar indicates \
the percentage of students who fall into the associated category.  \"\>",
      StripOnInput->False,
      FontSize->16]},
    {
     StyleBox["\<\"  Note: If a red dot appears at either end of a slider \
bar, the current value is outside the possible range.  \\n\"\>",
      StripOnInput->False,
      FontSize->16,
      FontSlant->Italic]},
    {
     TabViewBox[{{1,
      StyleBox["\<\"Reading\"\>",
       StripOnInput->False,
       FontSize->16,
       FontWeight->Bold]->
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`RDG098cutoff$$ = 
         59, $CellContext`RDG099cutoff$$ = 75, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{{
            Hold[$CellContext`RDG098cutoff$$], 59, 
            Style["RDG-098 cutoff score", 16]}, 0, 120, 1}, {{
            Hold[$CellContext`RDG099cutoff$$], 75, 
            Style["RDG-099 cutoff score", 16]}, 
           Dynamic[$CellContext`RDG098cutoff$$ + 1], 120, 1}}, 
         Typeset`size$$ = {667., {174., 182.}}, Typeset`update$$ = 0, 
         Typeset`initDone$$, Typeset`skipInitDone$$ = 
         True, $CellContext`RDG098cutoff$7277855$$ = 
         0, $CellContext`RDG099cutoff$7277856$$ = 0}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, 
           "Variables" :> {$CellContext`RDG098cutoff$$ = 
             59, $CellContext`RDG099cutoff$$ = 75}, 
           "ControllerVariables" :> {
             
             Hold[$CellContext`RDG098cutoff$$, \
$CellContext`RDG098cutoff$7277855$$, 0], 
             
             Hold[$CellContext`RDG099cutoff$$, \
$CellContext`RDG099cutoff$7277856$$, 0]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, 
           "Body" :> ($CellContext`RDG098recursive[
               Pattern[$CellContext`x, 
                Blank[Integer]]] := 
             If[$CellContext`x >= 
               0, $CellContext`classifyReading[{$CellContext`x, "RDG-098"}, 
                 "Probability" -> 
                 "successful"] + $CellContext`RDG098recursive[$CellContext`x - 
                 1], 0]; $CellContext`RDG098success[
               Pattern[$CellContext`x, 
                Blank[
                Integer]]] := \
$CellContext`RDG098recursive[$CellContext`x]/($CellContext`x + 
              1); $CellContext`RDG099recursive[
               Pattern[$CellContext`x$, 
                Blank[Integer]]] := 
             If[$CellContext`x$ > $CellContext`RDG098cutoff$$, \
$CellContext`classifyReading[{$CellContext`x$, "RDG-099"}, "Probability" -> 
                 "successful"] + $CellContext`RDG099recursive[$CellContext`x$ - 
                 1], Null, 0]; $CellContext`RDG099success[
               Pattern[$CellContext`x$, 
                Blank[
                Integer]]] := ($CellContext`RDG099recursive[$CellContext`x$] - 
               Null)/($CellContext`x$ - $CellContext`RDG098cutoff$$); 
            BarChart[{{
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`RDG098success[$CellContext`RDG098cutoff$$]], 
                 $CellContext`myPercentPrecision[
                  $CellContext`RDG098success[$CellContext`RDG098cutoff$$]], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`RDG098success[$CellContext`RDG098cutoff$$]]},\
 {
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`RDG099success[$CellContext`RDG099cutoff$$]], 
                 $CellContext`myPercentPrecision[
                  $CellContext`RDG099success[$CellContext`RDG099cutoff$$]], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`RDG099success[$CellContext`RDG099cutoff$$]]}}\
, ChartLayout -> "Stacked", ChartStyle -> {
                EdgeForm[], {$CellContext`LLCCBlue, LightGray}}, BarSpacing -> 
              1.5, ChartLabels -> {
                Placed[{
                  Style["RDG-098\n", Bold, 22], 
                  Style["RDG-099\n", Bold, 22]}, Above], None}, ChartLegends -> 
              Placed[{
                 Style["Successful", 18], 
                 Style["Unsuccessful", 18]}, Right], ImageSize -> 720]), 
           "Specifications" :> {{{$CellContext`RDG098cutoff$$, 59, 
               Style["RDG-098 cutoff score", 16]}, 0, 120, 1, Appearance -> 
              "Labeled", ImageSize -> Large, 
              BaseStyle -> (FontSize -> 16)}, {{$CellContext`RDG099cutoff$$, 
               75, 
               Style["RDG-099 cutoff score", 16]}, 
              Dynamic[$CellContext`RDG098cutoff$$ + 1], 120, 1, Appearance -> 
              "Labeled", ImageSize -> Large}}, "Options" :> {}, 
           "DefaultOptions" :> {}],
          ImageSizeCache->{710., {232., 241.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]}, {2,
      StyleBox["\<\"Writing\"\>",
       StripOnInput->False,
       FontSize->16,
       FontWeight->Bold]->
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`EGL098cutoffSS$$ = 
         60, $CellContext`EGL099cutoffSS$$ = 
         80, $CellContext`EGL099cutoffWS$$ = 5, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{
           Hold[
            Style["EGL-098", 18, Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
            Hold[$CellContext`EGL098cutoffSS$$], 60, 
            Style["Sentence Skills cutoff", 16]}, 0, 120, 1}, {
           Hold[
            Style["Writing Sample score not used", 16]], 
           Manipulate`Dump`ThisIsNotAControl}, {
           Hold[
            Style["EGL-099", 18, Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
            Hold[$CellContext`EGL099cutoffSS$$], 80, 
            Style["Sentence Skills cutoff", 16]}, 
           Dynamic[$CellContext`EGL098cutoffSS$$ + 1], 120, 1}, {{
            Hold[$CellContext`EGL099cutoffWS$$], 5, 
            Style["Writing Sample cutoff", 16]}, 0, 8, 1}}, Typeset`size$$ = {
         667., {176., 184.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
         Typeset`skipInitDone$$ = 
         True, $CellContext`EGL098cutoffSS$7277875$$ = 
         0, $CellContext`EGL099cutoffSS$7277876$$ = 
         0, $CellContext`EGL099cutoffWS$7277877$$ = 0}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, 
           "Variables" :> {$CellContext`EGL098cutoffSS$$ = 
             60, $CellContext`EGL099cutoffSS$$ = 
             80, $CellContext`EGL099cutoffWS$$ = 5}, "ControllerVariables" :> {
             
             Hold[$CellContext`EGL098cutoffSS$$, \
$CellContext`EGL098cutoffSS$7277875$$, 0], 
             
             Hold[$CellContext`EGL099cutoffSS$$, \
$CellContext`EGL099cutoffSS$7277876$$, 0], 
             
             Hold[$CellContext`EGL099cutoffWS$$, \
$CellContext`EGL099cutoffWS$7277877$$, 0]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, 
           "Body" :> ($CellContext`EGL098recursive[
               Pattern[$CellContext`x, 
                Blank[Integer]]] := ($CellContext`sum = 0; 
              For[$CellContext`xa = 0, $CellContext`xa <= $CellContext`x, 
                Increment[$CellContext`xa], 
                For[$CellContext`ya = 0, $CellContext`ya <= 8, 
                  Increment[$CellContext`ya], AddTo[$CellContext`sum, 
                    $CellContext`classifyWriting[{$CellContext`xa, \
$CellContext`ya, "EGL-098"}, "Probability" -> "successful"]]; Null]; Null]; 
              Return[$CellContext`sum]; Null); $CellContext`EGL098success[
               Pattern[$CellContext`x, 
                Blank[
                Integer]]] := \
$CellContext`EGL098recursive[$CellContext`x]/(($CellContext`x + 1) (8 + 
               1)); $CellContext`EGL099recursive[
               Pattern[$CellContext`x$, 
                Blank[Integer]], 
               Pattern[$CellContext`y$, 
                Blank[Integer]]] := ($CellContext`sum = 0; 
              For[$CellContext`xa = $CellContext`EGL098cutoffSS$$ + 
                 1, $CellContext`xa <= $CellContext`x$, 
                Increment[$CellContext`xa], 
                For[$CellContext`ya = $CellContext`EGL098cutoffWS + 
                   1, $CellContext`ya <= $CellContext`y$, 
                  Increment[$CellContext`ya], AddTo[$CellContext`sum, 
                    $CellContext`classifyWriting[{$CellContext`xa, \
$CellContext`ya, "EGL-099"}, "Probability" -> "successful"]]; Null]; Null]; 
              Return[$CellContext`sum]; Null); $CellContext`EGL099success[
               Pattern[$CellContext`x$, 
                Blank[Integer]], 
               Pattern[$CellContext`y$, 
                Blank[
                Integer]]] := $CellContext`EGL099recursive[$CellContext`x$, \
$CellContext`y$]/(($CellContext`x$ - $CellContext`EGL098cutoffSS$$) \
($CellContext`y$ + 1)); $CellContext`EGL101recursive := ($CellContext`sum = 0; 
              For[$CellContext`xa = $CellContext`EGL099cutoffSS$$ + 
                 1, $CellContext`xa <= 120, 
                Increment[$CellContext`xa], 
                For[$CellContext`ya = $CellContext`EGL099cutoffWS$$ + 
                   1, $CellContext`ya <= 8, 
                  Increment[$CellContext`ya], AddTo[$CellContext`sum, 
                    $CellContext`classifyWriting[{$CellContext`xa, \
$CellContext`ya, "EGL-101"}, "Probability" -> "successful"]]; Null]; Null]; 
              Return[$CellContext`sum]; 
              Null); $CellContext`EGL101success := \
$CellContext`EGL101recursive/((120 - $CellContext`EGL099cutoffSS$$) (
               8 - $CellContext`EGL099cutoffWS$$)); BarChart[{{
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`EGL098success[$CellContext`EGL098cutoffSS$$]], \

                 $CellContext`myPercentPrecision[
                  $CellContext`EGL098success[$CellContext`EGL098cutoffSS$$]], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`EGL098success[$CellContext`EGL098cutoffSS$$]]\
}, {
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`EGL099success[$CellContext`EGL099cutoffSS$$, \
$CellContext`EGL099cutoffWS$$]], 
                 $CellContext`myPercentPrecision[
                  $CellContext`EGL099success[$CellContext`EGL099cutoffSS$$, \
$CellContext`EGL099cutoffWS$$]], Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`EGL099success[$CellContext`EGL099cutoffSS$$, \
$CellContext`EGL099cutoffWS$$]]}, {
                Labeled[
                 $CellContext`myPercentPrecision[$CellContext`EGL101success], \

                 $CellContext`myPercentPrecision[$CellContext`EGL101success], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`EGL101success]}}, ChartLayout -> "Stacked", 
              ChartStyle -> {
                EdgeForm[], {$CellContext`LLCCBlue, LightGray}}, BarSpacing -> 
              1.5, ChartLabels -> {
                Placed[{
                  Style["EGL-098\n", Bold, 22], 
                  Style["EGL-099\n", Bold, 22], 
                  Style["EGL-101\n", Bold, 22]}, Above], None}, ChartLegends -> 
              Placed[{
                 Style["Successful", 18], 
                 Style["Unsuccessful", 18]}, Right], ImageSize -> 720]), 
           "Specifications" :> {
             Style[
             "EGL-098", 18, Bold], {{$CellContext`EGL098cutoffSS$$, 60, 
               Style["Sentence Skills cutoff", 16]}, 0, 120, 1, Appearance -> 
              "Labeled", ImageSize -> Large, BaseStyle -> (FontSize -> 16)}, 
             Style["Writing Sample score not used", 16], Delimiter, 
             Style[
             "EGL-099", 18, Bold], {{$CellContext`EGL099cutoffSS$$, 80, 
               Style["Sentence Skills cutoff", 16]}, 
              Dynamic[$CellContext`EGL098cutoffSS$$ + 1], 120, 1, Appearance -> 
              "Labeled", ImageSize -> Large, 
              BaseStyle -> (FontSize -> 16)}, {{$CellContext`EGL099cutoffWS$$,
                5, 
               Style["Writing Sample cutoff", 16]}, 0, 8, 1, Appearance -> 
              "Labeled", ImageSize -> Large, BaseStyle -> (FontSize -> 16)}}, 
           "Options" :> {}, "DefaultOptions" :> {}],
          ImageSizeCache->{710., {272., 281.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]}, {3,
      StyleBox["\<\"Math\"\>",
       StripOnInput->False,
       FontSize->16,
       FontWeight->Bold]->
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`CMAT1cutoff$$ = 
         59, $CellContext`MAT081cutoff$$ = 59, $CellContext`MAT088cutoff$$ = 
         59, $CellContext`MAT094cutoff$$ = 84, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{{
            Hold[$CellContext`MAT081cutoff$$], 59, 
            Style["MAT-081 cutoff score", 16]}, 0, 120, 1}, {{
            Hold[$CellContext`MAT088cutoff$$], 59, 
            Style["MAT-088 cutoff score", 16]}, 0, 120, 1}, {{
            Hold[$CellContext`MAT094cutoff$$], 84, 
            Style["MAT-094 cutoff score", 16]}, 
           Dynamic[$CellContext`MAT088cutoff$$ + 1], 120, 1}, {{
            Hold[$CellContext`CMAT1cutoff$$], 59, 
            Style["College Level 1 cutoff score", 16]}, 0, 120, 1}, {
           Hold[
            Style[
            "Note: college level 1 math gives students the option of taking \
MAT-104, 105, 113, 141, or 251", Italic, 14]], 
           Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
         667., {176., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
         Typeset`skipInitDone$$ = True, $CellContext`MAT081cutoff$7277898$$ = 
         0, $CellContext`MAT088cutoff$7277899$$ = 
         0, $CellContext`MAT094cutoff$7277900$$ = 
         0, $CellContext`CMAT1cutoff$7277901$$ = 0}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, 
           "Variables" :> {$CellContext`CMAT1cutoff$$ = 
             59, $CellContext`MAT081cutoff$$ = 
             59, $CellContext`MAT088cutoff$$ = 
             59, $CellContext`MAT094cutoff$$ = 84}, 
           "ControllerVariables" :> {
             
             Hold[$CellContext`MAT081cutoff$$, \
$CellContext`MAT081cutoff$7277898$$, 0], 
             
             Hold[$CellContext`MAT088cutoff$$, \
$CellContext`MAT088cutoff$7277899$$, 0], 
             
             Hold[$CellContext`MAT094cutoff$$, \
$CellContext`MAT094cutoff$7277900$$, 0], 
             
             Hold[$CellContext`CMAT1cutoff$$, \
$CellContext`CMAT1cutoff$7277901$$, 0]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, 
           "Body" :> ($CellContext`MAT081recursive[
               Pattern[$CellContext`x, 
                Blank[Integer]]] := 
             If[$CellContext`x >= 
               0, $CellContext`classifyMath[{$CellContext`x, 
                  Missing[], 
                  Missing[], "3 levels below"}, "Probability" -> 
                 "successful"] + $CellContext`MAT081recursive[$CellContext`x - 
                 1], 0]; $CellContext`MAT081success[
               Pattern[$CellContext`x, 
                Blank[
                Integer]]] := \
$CellContext`MAT081recursive[$CellContext`x]/($CellContext`x + 
              1); $CellContext`MAT088recursive[
               Pattern[$CellContext`y$, 
                Blank[Integer]]] := ($CellContext`sum = 0; 
              For[$CellContext`xa = $CellContext`MAT081cutoff$$ + 
                 1, $CellContext`xa <= 120, 
                Increment[$CellContext`xa], 
                For[$CellContext`ya = 0, $CellContext`ya <= $CellContext`y$, 
                  Increment[$CellContext`ya], AddTo[$CellContext`sum, 
                    $CellContext`classifyMath[{$CellContext`xa, \
$CellContext`ya, 
                    Missing[], "2 levels below"}, "Probability" -> 
                    "successful"]]; Null]; Null]; Return[$CellContext`sum]; 
              Null); $CellContext`MAT088success[
               Pattern[$CellContext`y$, 
                Blank[
                Integer]]] := $CellContext`MAT088recursive[$CellContext`y$]/((
               120 - $CellContext`MAT081cutoff$$) ($CellContext`y$ + 
               1)); $CellContext`MAT094recursive[
               Pattern[$CellContext`y$, 
                Blank[Integer]]] := ($CellContext`sum = 0; 
              For[$CellContext`xa = $CellContext`MAT081cutoff$$ + 
                 1, $CellContext`xa <= 120, 
                Increment[$CellContext`xa], 
                For[$CellContext`ya = $CellContext`MAT088cutoff$$ + 
                   1, $CellContext`ya <= $CellContext`y$, 
                  Increment[$CellContext`ya], AddTo[$CellContext`sum, 
                    $CellContext`classifyMath[{$CellContext`xa, \
$CellContext`ya, 
                    Missing[], "1 level below"}, "Probability" -> 
                    "successful"]]; Null]; Null]; Return[$CellContext`sum]; 
              Null); $CellContext`MAT094success[
               Pattern[$CellContext`y$, 
                Blank[
                Integer]]] := $CellContext`MAT094recursive[$CellContext`y$]/((
               120 - $CellContext`MAT081cutoff$$) ($CellContext`y$ - \
$CellContext`MAT088cutoff$$)); $CellContext`CMAT1recursive[
               Pattern[$CellContext`z, 
                Blank[Integer]]] := 
             If[$CellContext`z >= 0, $CellContext`classifyMath[{
                  Missing[], 
                  Missing[], $CellContext`z, "college level 1"}, 
                 "Probability" -> 
                 "successful"] + $CellContext`CMAT1recursive[$CellContext`z - 
                 1], 0]; $CellContext`CMAT1success[
               Pattern[$CellContext`z, 
                Blank[
                Integer]]] := \
$CellContext`CMAT1recursive[$CellContext`z]/($CellContext`z + 1); BarChart[{{
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`MAT081success[$CellContext`MAT081cutoff$$]], 
                 $CellContext`myPercentPrecision[
                  $CellContext`MAT081success[$CellContext`MAT081cutoff$$]], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`MAT081success[$CellContext`MAT081cutoff$$]]},\
 {
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`MAT088success[$CellContext`MAT088cutoff$$]], 
                 $CellContext`myPercentPrecision[
                  $CellContext`MAT088success[$CellContext`MAT088cutoff$$]], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`MAT088success[$CellContext`MAT088cutoff$$]]},\
 {
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`MAT094success[$CellContext`MAT094cutoff$$]], 
                 $CellContext`myPercentPrecision[
                  $CellContext`MAT094success[$CellContext`MAT094cutoff$$]], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`MAT094success[$CellContext`MAT094cutoff$$]]},\
 {
                Labeled[
                 $CellContext`myPercentPrecision[
                  $CellContext`CMAT1success[$CellContext`CMAT1cutoff$$]], 
                 $CellContext`myPercentPrecision[
                  $CellContext`CMAT1success[$CellContext`CMAT1cutoff$$]], 
                 Center, Bold, 18, Background -> LightBlue], 
                $CellContext`myPercentPrecision[
                1 - $CellContext`CMAT1success[$CellContext`CMAT1cutoff$$]]}}, 
              ChartLayout -> "Stacked", ChartStyle -> {
                EdgeForm[], {$CellContext`LLCCBlue, LightGray}}, BarSpacing -> 
              1.5, ChartLabels -> {
                Placed[{
                  Style["MAT-081\n", Bold, 22], 
                  Style["MAT-088\n", Bold, 22], 
                  Style["MAT-094\n", Bold, 22], 
                  Style["College\nLevel 1", Bold, 22]}, Above], None}, 
              ChartLegends -> Placed[{
                 Style["Successful", 18], 
                 Style["Unsuccessful", 18]}, Right], ImageSize -> 720]), 
           "Specifications" :> {{{$CellContext`MAT081cutoff$$, 59, 
               Style["MAT-081 cutoff score", 16]}, 0, 120, 1, Appearance -> 
              "Labeled", ImageSize -> 
              Large}, {{$CellContext`MAT088cutoff$$, 59, 
               Style["MAT-088 cutoff score", 16]}, 0, 120, 1, Appearance -> 
              "Labeled", ImageSize -> 
              Large}, {{$CellContext`MAT094cutoff$$, 84, 
               Style["MAT-094 cutoff score", 16]}, 
              Dynamic[$CellContext`MAT088cutoff$$ + 1], 120, 1, Appearance -> 
              "Labeled", ImageSize -> 
              Large}, {{$CellContext`CMAT1cutoff$$, 59, 
               Style["College Level 1 cutoff score", 16]}, 0, 120, 1, 
              Appearance -> "Labeled", ImageSize -> Large}, 
             Style[
             "Note: college level 1 math gives students the option of taking \
MAT-104, 105, 113, 141, or 251", Italic, 14]}, "Options" :> {}, 
           "DefaultOptions" :> {}],
          ImageSizeCache->{710., {263., 272.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]}}, 1]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.85]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.751115410306262*^9, 3.751115464817561*^9, 
  3.751116328590178*^9, 3.751116384678978*^9, 3.751116438358652*^9, 
  3.751116506090515*^9, 3.7511167412185717`*^9, 3.751133514340331*^9, 
  3.7511335796577253`*^9, 3.751134352067729*^9, 3.751134609313586*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"2aed398a-37b2-45c1-b408-940495eabe66"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","chsty",
   "\"Value of option ChartStyle -> \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"EdgeForm\\\", \\\"[\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"LLCCBlue\\\", \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0.85`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.5666666666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0.85`\\\", \
\\\"]\\\"]], Rule[NumberMarks, False]]], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0.85`]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0.85`], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\"}\\\"}]}], \\\"}\\\"}]\
\\) is not a style or group of styles.\"",2,49,12,33463376406472514772,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7511444715635777`*^9},
 CellLabel->"",ExpressionUUID->"7b0f2e76-e320-42fb-8f83-e42b1d267832"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","chsty",
   "\"Value of option ChartStyle -> \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"EdgeForm\\\", \\\"[\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"LLCCBlue\\\", \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0.85`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.5666666666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0.85`\\\", \
\\\"]\\\"]], Rule[NumberMarks, False]]], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0.85`]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0.85`], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\"}\\\"}]}], \\\"}\\\"}]\
\\) is not a style or group of styles.\"",2,49,13,33463376406472514772,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.751144472391859*^9},
 CellLabel->"",ExpressionUUID->"47cca763-6f4d-4a49-8fe6-550ffa38fbc6"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","chsty",
   "\"Value of option ChartStyle -> \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"EdgeForm\\\", \\\"[\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"LLCCBlue\\\", \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0.85`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.5666666666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0.85`\\\", \
\\\"]\\\"]], Rule[NumberMarks, False]]], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0.85`]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0.85`], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\"}\\\"}]}], \\\"}\\\"}]\
\\) is not a style or group of styles.\"",2,49,14,33463376406472514772,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7511444841941767`*^9},
 CellLabel->"",ExpressionUUID->"88cbb481-2110-46ae-aafc-d1e11bb1cebf"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","chsty",
   "\"Value of option ChartStyle -> \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"EdgeForm\\\", \\\"[\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"LLCCBlue\\\", \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[GrayLevel[0.85`], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, GrayLevel[0.5666666666666667`]], \
Rule[FrameTicks, None], Rule[PlotRangePadding, None], Rule[ImageSize, \
Dynamic[List[Automatic, Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
StyleBox[RowBox[List[\\\"GrayLevel\\\", \\\"[\\\", \\\"0.85`\\\", \
\\\"]\\\"]], Rule[NumberMarks, False]]], Rule[Appearance, None], \
Rule[BaseStyle, List[]], Rule[BaselinePosition, Baseline], \
Rule[DefaultBaseStyle, List[]], RuleDelayed[ButtonFunction, \
With[List[Set[Typeset`box$, EvaluationBox[]]], If[Not[AbsoluteCurrentValue[\\\
\"Deployed\\\"]], CompoundExpression[SelectionMove[Typeset`box$, All, \
Expression], Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, GrayLevel[0.85`]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"GrayLevelColorValueSelector\\\"], List[0, List[Left, \
Bottom]], List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], GrayLevel[0.85`], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\"}\\\"}]}], \\\"}\\\"}]\
\\) is not a style or group of styles.\"",2,49,15,33463376406472514772,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.751144484921762*^9},
 CellLabel->"",ExpressionUUID->"54146265-b14c-4863-aab8-aee0e3d33686"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellChangeTimes->{{3.750607236765524*^9, 3.750607237381011*^9}, {
  3.7506804978763103`*^9, 3.75068049803638*^9}},
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e006a335-973a-4f77-bef4-dbabd22d7e71"],

Cell[CellGroupData[{

Cell["Step 6: Deploy Model", "Section",
 CellChangeTimes->{{3.749158209517145*^9, 3.7491582138311157`*^9}, {
  3.74916428563167*^9, 3.749164286065735*^9}, {3.7492329132999773`*^9, 
  3.7492329147971373`*^9}},ExpressionUUID->"96310e70-5b31-42bd-8120-\
372d9c1facd6"],

Cell["\<\
\[Bullet] Two options for sharing notebooks with people who do not have \
Mathematica
\[Bullet] These are not the only options, but they are the easiest and most \
common for sharing\
\>", "SideNote",
 CellChangeTimes->{{3.749158668064706*^9, 3.7491586835498333`*^9}, {
  3.749160570527253*^9, 
  3.7491605921023693`*^9}},ExpressionUUID->"f85f51f2-bfe2-402d-b850-\
3a75cd8f4580"],

Cell[CellGroupData[{

Cell["Option 1: Computable Document Format (CDF) Player", "Subsection",
 CellChangeTimes->{{3.749158225937059*^9, 3.749158227225664*^9}, {
  3.749158302544813*^9, 3.7491583092617807`*^9}, {3.74915859608759*^9, 
  3.7491585989069557`*^9}, {3.74915958005275*^9, 
  3.7491595811471252`*^9}},ExpressionUUID->"511e9fed-12b0-4395-a564-\
2cde9db7236b"],

Cell[TextData[{
 "CDF is a document format created by Wolfram for sharing notebooks, without \
the user needing to have Mathematica.\nDownload the CDF player from ",
 ButtonBox["wolfram.com/cdf-player/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/cdf-player/"], None},
  ButtonNote->"https://www.wolfram.com/cdf-player/"],
 " \nCan share the notebook itself, or output the notebook as a CDF file."
}], "Text",
 CellChangeTimes->{{3.749158575930256*^9, 3.749158585059711*^9}, {
   3.749158819937149*^9, 3.749158841720318*^9}, {3.749159012776908*^9, 
   3.7491590565418787`*^9}, {3.749159147779228*^9, 3.749159185388097*^9}, {
   3.749159431597651*^9, 3.7491594507101803`*^9}, {3.74915956607508*^9, 
   3.749159570682939*^9}, {3.749159664275709*^9, 3.749159677704496*^9}, {
   3.749159722132844*^9, 3.749159725704224*^9}, {3.749160253192031*^9, 
   3.749160255616604*^9}, {3.749160496889102*^9, 3.74916049900523*^9}, {
   3.749160603468192*^9, 3.7491606048211823`*^9}, 
   3.749233020463408*^9},ExpressionUUID->"f94291c7-f339-4bab-91c0-\
5490053b183a"],

Cell["\<\
CDF file does not allow you to run the code, but dynamic elements (such as \
Manipulate objects) remain interactive.\
\>", "SideNote",
 CellChangeTimes->{{3.749159738439324*^9, 
  3.749159755515828*^9}},ExpressionUUID->"d773b036-73da-4043-a353-\
1ff37139cb91"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Option 2: CloudDeploy", "Subsection",
 CellChangeTimes->{{3.710063723774528*^9, 3.710063727101384*^9}, {
  3.749158612313787*^9, 3.749158633182178*^9}, {3.74915968921074*^9, 
  3.749159718453116*^9}},ExpressionUUID->"7b2a0e7a-01dd-48cf-8223-\
d101ddb9dd74"],

Cell["CloudDeploy function allows you to put objects in the cloud.", "Text",
 CellChangeTimes->{{3.749159790252878*^9, 3.749159810944268*^9}, {
  3.7491598470101223`*^9, 3.749159849242878*^9}, {3.7491601406941767`*^9, 
  3.749160171247484*^9}},ExpressionUUID->"dbd3d814-98e2-45a2-98e0-\
d95210cff2fb"],

Cell["\<\
To share with users who do not have Mathematica, the object will need to be \
public.
2 changes must be made when deploying this way: 
\t1. data file must be uploaded to cloud and imported to notebook from cloud \
location
\t2. all code must be put into a single object, so the object can be deployed \
to the cloud\
\>", "SideNote",
 CellChangeTimes->{{3.7491601479413853`*^9, 3.749160174092373*^9}, {
  3.7511368267159433`*^9, 
  3.751136884405632*^9}},ExpressionUUID->"55ee11a4-1cc4-42aa-9d2f-\
beb207790874"],

Cell["CloudDeploy[<objectName>, <URL name>, <options>]", "SideNote",
 CellChangeTimes->{{3.7491609319670362`*^9, 3.749160968493228*^9}, {
  3.7500816257861643`*^9, 
  3.7500816281182947`*^9}},ExpressionUUID->"aa85609d-8605-40c4-997a-\
e69576c578f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"whatIf", ",", "\"\<whatIf-placement-test-scores\>\"", ",", 
   RowBox[{"Permissions", "->", "\"\<Public\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "need", " ", "to", " ", "put", " ", "all", " ", "parts", " ", "into", " ", 
    "one", " ", "object", " ", "for", " ", "this", " ", "to", " ", "work"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.74916075247587*^9, 3.749160763534895*^9}, {
  3.7491608073229523`*^9, 3.749160814811228*^9}, {3.7510246343373528`*^9, 
  3.751024647067854*^9}, {3.7510248704910192`*^9, 3.751024881380974*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"82a76ccd-bc72-4c97-9807-5792f0a8977a"],

Cell[BoxData[
 TemplateBox[{
  "CloudConnect","clver",
   "\"Connecting to a cloud running an earlier version of the Wolfram Engine: \
\\!\\(\\*StyleBox[\\\"11.3\\\", Rule[ShowStringCharacters, True], \
Rule[NumberMarks, True]]\\)\"",2,59,2,33463310250297414014,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7511335270042458`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"325fee88-1093-4423-a681-183647eea4d6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/kari.grafton/whatIf-placement-\
test-scores\"",
     "https://www.wolframcloud.com/objects/kari.grafton/whatIf-placement-test-\
scores"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/kari.grafton/whatIf-placement-test-\
scores"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.749160816141326*^9, 3.7504266348538313`*^9, 
  3.750675758475552*^9, 3.750681949150612*^9, 3.751024330755898*^9, 
  3.751024599821946*^9, 3.751024649887374*^9, 3.751024939254363*^9, 
  3.751033379646841*^9, 3.751133527298202*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"1e482867-cb8b-4458-9b93-720b4bf2ce70"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4f02b59f-edfd-4285-b360-ddf5a20520a3"],

Cell["\<\
Thank you!
Any questions? Contact me at Kari.Grafton@LLCC.edu\
\>", "Subsection",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.02 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0148889 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.27999999999999997` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.749232942014452*^9, 3.749232965079893*^9}, {
  3.751025557617293*^9, 3.751025564701193*^9}},
 TextAlignment->Center,ExpressionUUID->"5df9ddb5-118e-486c-913c-9b111c353523"]
}, Open  ]]
},
ScreenStyleEnvironment->"Slideshow Working",
PrintingStyleEnvironment->"Working",
WindowSize->{1299, 713},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->{
 "PresenterSettings" -> {
   "ShowToolbar" -> True, "ShowNavigationBar" -> False, 
    "SlideBreakStyles" -> {"Title", "Chapter", "Section"}, "ShowSlideBreaks" -> 
    True, "Theme" -> {
     "ThemeName" -> "Aqua", "FontSetName" -> "Default", "ColorSetName" -> 
      "Aqua"}, "WindowSize" -> {1299, 713}, 
    "WindowMargins" -> {{0, 0}, {0, 28}}, 
    "UserModifications" -> {{
      "Epigraph", CellMargins :> 
       Dynamic[{{
          0.008099999999999998 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}],
            0.008099999999999998 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
          0.0001967075097025979 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.35054733864574755` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}]}, {
      "Subsection", CellMargins :> 
       Dynamic[{{
          0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.02 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
          0.0148889 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.27999999999999997` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}]}, {
      "Subsection", TextAlignment -> Center}, {
      "Text", CellMargins :> 
       Dynamic[{{
          0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
          0.012407399999999999` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.012407399999999999` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}]}}, 
    "PresenterControlsPalette" -> {"PaletteNumber" -> 0}, "LastColorUsed" -> 
    RGBColor[0., 0.12549019607843137`, 0.5607843137254902], 
    "PresenterToolsSlideshowPresentationToolbar" -> True, 
    "PresenterToolsPresentationToolbar" -> False, 
    "OutlinePalette" -> {"PaletteNumber" -> 24}}},
Magnification:>0.75 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (October 15, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"PresenterTools"}, "Aqua.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], 
    StyleHints -> {
     ParentList, "CodeFont" -> "Source Code Pro", 
      "ColorSet" -> {
       "Display1" -> RGBColor[0.211765, 0.694118, 0.74902], "Display2" -> 
        RGBColor[0.901961, 0.933333, 0.439216], "Display3" -> 
        RGBColor[0.00392157, 0.45098, 0.501961], "Text1" -> 
        GrayLevel[0.388235], "Text2" -> GrayLevel[1], "Text3" -> GrayLevel[0],
         "Text1Reverse" -> GrayLevel[0.75], "Text2Reverse" -> GrayLevel[0.75],
         "Text3Reverse" -> GrayLevel[0.75], "Dingbat" -> 
        RGBColor[0.211765, 0.694118, 0.74902], "Default" -> 
        GrayLevel[0.388235], "Background" -> 
        RGBColor[0.211765, 0.694118, 0.74902]}, 
      "FontSet" -> {
       "Display1" -> "Source Sans Pro", "Display2" -> "Source Sans Pro", 
        "Display3" -> "Source Sans Pro", "Text1" -> "Source Sans Pro", 
        "Text2" -> "Source Sans Pro", "Text3" -> "Source Sans Pro", "Dingbat" -> 
        "Source Sans Pro", "Default" -> "Source Sans Pro"}, 
      "SlideBreakStyles" -> {}}], 
   Cell[
    StyleData["Notebook", "Slideshow Presentation"], 
    NotebookEventActions -> {ParentList, "HomeKeyDown" :> FrontEndTokenExecute[
        NotebookObject[
         FrontEndObject[
          LinkObject["nnppj_shm", 3, 1]], 16], "ScrollPageFirst"], 
      "LeftArrowKeyDown" :> FrontEndTokenExecute[
        NotebookObject[
         FrontEndObject[
          LinkObject["nnppj_shm", 3, 1]], 16], "ScrollPagePrevious"], 
      "RightArrowKeyDown" :> FrontEndTokenExecute[
        NotebookObject[
         FrontEndObject[
          LinkObject["nnppj_shm", 3, 1]], 16], "ScrollPageNext"], 
      "EndKeyDown" :> FrontEndTokenExecute[
        NotebookObject[
         FrontEndObject[
          LinkObject["nnppj_shm", 3, 1]], 16], "ScrollPageLast"], 
      "EscapeKeyDown" :> PresenterTools`EndPresentation[
        NotebookObject[
         FrontEndObject[
          LinkObject["nnppj_shm", 3, 1]], 16], "KeyboardShortcut"]}], 
   Cell[
    StyleData["Section"], FontColor -> 
    RGBColor[0., 0.12549019607843137`, 0.5607843137254902]], 
   Cell[
    StyleData["Section", "Slideshow Working"]], 
   Cell[
    StyleData[
    "Section", "Slideshow Presentation", StyleDefinitions -> 
     StyleData["Section", "Slideshow Working"]]], 
   Cell[
    StyleData[
    "Section", "Scrolling Presentation", StyleDefinitions -> 
     StyleData["Section", "Slideshow Working"]]], 
   Cell[
    StyleData["Subsection"], FontColor -> 
    RGBColor[0.4196078431372549, 0.6705882352941176, 0.8980392156862745]], 
   Cell[
    StyleData["Subsection", "Slideshow Working"]], 
   Cell[
    StyleData[
    "Subsection", "Slideshow Presentation", StyleDefinitions -> 
     StyleData["Subsection", "Slideshow Working"]]], 
   Cell[
    StyleData[
    "Subsection", "Scrolling Presentation", StyleDefinitions -> 
     StyleData["Subsection", "Slideshow Working"]]]}, Visible -> False, 
  FrontEndVersion -> "12.0 for Linux x86 (64-bit) (October 15, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
"Theme" -> "Aqua"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[422, 15, 136, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
   CellTags->"SlideShowHeader"],
  Cell[1642, 48, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ee3ea2a1-973b-4e9a-a704-0d8a3c30d1be",
   CellTags->"SlideShowHeader"],
  Cell[60278, 1242, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"26fc9377-2f6b-49b6-ad55-06ba0f6e473f",
   CellTags->"SlideShowHeader"],
  Cell[62082, 1287, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ab866131-6854-4e34-a1df-4a9cef6819a8",
   CellTags->"SlideShowHeader"],
  Cell[65865, 1377, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"f1ea6945-699f-482b-8fd0-06e69f1653cb",
   CellTags->"SlideShowHeader"],
  Cell[67418, 1423, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"d0653087-e6fc-4117-98fa-618b3d35e3ba",
   CellTags->"SlideShowHeader"],
  Cell[72186, 1533, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"b9b3882f-e4b1-47bf-b75d-ae3241466e3b",
   CellTags->"SlideShowHeader"],
  Cell[343951, 7294, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"129b786d-e99e-4a94-a505-976ae229c748",
   CellTags->"SlideShowHeader"],
  Cell[556920, 12301, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"0ce15a32-3d8e-49a9-a099-352b7a9d8779",
   CellTags->"SlideShowHeader"],
  Cell[1246791, 26831, 241, 4, 61, "SlideShowNavigationBar",ExpressionUUID->"9cc2912e-6a95-42ef-a089-3a599e12461b",
   CellTags->"SlideShowHeader"],
  Cell[1323989, 28377, 238, 4, 61, "SlideShowNavigationBar",ExpressionUUID->"e006a335-973a-4f77-bef4-dbabd22d7e71",
   CellTags->"SlideShowHeader"],
  Cell[1330073, 28530, 122, 2, 34, "SlideShowNavigationBar",ExpressionUUID->"4f02b59f-edfd-4285-b360-ddf5a20520a3",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1336287, 28677}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 136, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
 CellTags->"SlideShowHeader"],
Cell[561, 19, 550, 10, 142, "Title",ExpressionUUID->"92508663-47f1-4deb-9615-d2c271e8e453"],
Cell[1114, 31, 491, 12, 157, "Subtitle",ExpressionUUID->"14f8f51b-58e9-4033-aea1-fd611ac95bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1642, 48, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ee3ea2a1-973b-4e9a-a704-0d8a3c30d1be",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1789, 54, 370, 6, 95, "Section",ExpressionUUID->"7da6da63-6378-4f26-b58d-d42a7250afa4"],
Cell[2162, 62, 334, 5, 49, "Text",ExpressionUUID->"3b730a40-c305-44bd-95b8-df5440115120"],
Cell[2499, 69, 913, 16, 123, "SideNote",ExpressionUUID->"540570d5-930d-47bc-967c-3723ccc06c59"],
Cell[3415, 87, 232, 4, 49, "Text",ExpressionUUID->"5521171a-dab8-4f79-9a35-6b9daf0c488c"],
Cell[3650, 93, 560, 8, 58, "SideNote",ExpressionUUID->"ca7d069b-192c-4c8f-a5a2-4fd8b37beb15"],
Cell[CellGroupData[{
Cell[4235, 105, 2524, 52, 54, "Input",ExpressionUUID->"96283960-0a49-4d64-92e5-2494b4aa3424"],
Cell[6762, 159, 52336, 1047, 458, "Output",ExpressionUUID->"9e94f23a-032d-4a3a-9313-dba74a2ba799"]
}, Closed]],
Cell[59113, 1209, 262, 5, 46, "Text",ExpressionUUID->"b49dcd9c-60b2-4f04-b07b-1cc6f3c017d7"],
Cell[59378, 1216, 325, 8, 91, "SideNote",ExpressionUUID->"af13a6c9-4a87-407c-abd5-2abac1056064"],
Cell[59706, 1226, 246, 4, 49, "Text",ExpressionUUID->"2d4b8fba-842e-4274-aec6-0305e153a6fe"],
Cell[59955, 1232, 274, 4, 49, "Text",ExpressionUUID->"74e19b31-ea37-4f04-bf3c-37ac24c3be2b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60278, 1242, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"26fc9377-2f6b-49b6-ad55-06ba0f6e473f",
 CellTags->"SlideShowHeader"],
Cell[60403, 1246, 338, 7, 58, "SideNote",ExpressionUUID->"4159cadf-38bd-4507-b581-c3f992374624"],
Cell[60744, 1255, 1081, 20, 348, "Epigraph",ExpressionUUID->"c41d6b79-dd2f-4d63-b997-d731d8964b12"],
Cell[61828, 1277, 217, 5, 58, "SideNote",ExpressionUUID->"a53e5866-8935-40a2-9f32-17a62330c5f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62082, 1287, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ab866131-6854-4e34-a1df-4a9cef6819a8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[62229, 1293, 307, 6, 95, "Section",ExpressionUUID->"175d68fa-899e-4476-8c3f-e267a008676f"],
Cell[62539, 1301, 602, 10, 87, "Text",ExpressionUUID->"abd26a0a-1d08-429b-be6c-c74ae72f1e79"],
Cell[CellGroupData[{
Cell[63166, 1315, 320, 7, 41, "Input",ExpressionUUID->"e965b3ef-6ac7-45c2-b0f3-664bf8f30bb7"],
Cell[63489, 1324, 1763, 35, 138, "Output",ExpressionUUID->"36ebf37f-291a-4413-bf7e-5f554df509fb"]
}, Closed]],
Cell[65267, 1362, 549, 9, 46, "Text",ExpressionUUID->"189af723-ecff-4d21-a464-2bd56b3442d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65865, 1377, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"f1ea6945-699f-482b-8fd0-06e69f1653cb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[66012, 1383, 450, 9, 147, "Section",ExpressionUUID->"4d99dca9-28c2-45ee-ae65-bfa655d56d4c"],
Cell[66465, 1394, 275, 6, 87, "Text",ExpressionUUID->"3df453db-7541-4120-af63-3a4ab93f6f2b"],
Cell[66743, 1402, 626, 15, 273, "Text",ExpressionUUID->"c827be6a-8e47-4780-976e-9e08256e4eee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67418, 1423, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"d0653087-e6fc-4117-98fa-618b3d35e3ba",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[67565, 1429, 396, 7, 95, "Section",ExpressionUUID->"a6bca3fb-c161-4f12-a2a7-035c628e3fe4"],
Cell[67964, 1438, 666, 13, 124, "Text",ExpressionUUID->"ee6c65f3-5d2f-4986-8d2f-635f66260a00"],
Cell[68633, 1453, 775, 14, 87, "Text",ExpressionUUID->"66f7b742-98c1-47c5-ab98-5e187a4d1a34"],
Cell[69411, 1469, 590, 10, 87, "Text",ExpressionUUID->"869f212e-acdf-4c5e-a34d-ad011ea4ee74"],
Cell[70004, 1481, 967, 17, 124, "Text",ExpressionUUID->"e5954101-d5b3-446c-b67b-55fcea31b46b"],
Cell[70974, 1500, 188, 4, 49, "Text",ExpressionUUID->"5e5f7b24-9965-43c2-bf2f-07aa518f2b50"],
Cell[71165, 1506, 214, 4, 49, "Text",ExpressionUUID->"50301eb3-c135-423d-b3ee-2d08f92ef443"],
Cell[71382, 1512, 755, 15, 87, "Text",ExpressionUUID->"f68704ae-9e5f-4703-a8ed-0805b005c614"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72186, 1533, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"b9b3882f-e4b1-47bf-b75d-ae3241466e3b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[72333, 1539, 440, 7, 95, "Section",ExpressionUUID->"12a70bd9-5934-43e6-bf39-c62eaac3650c"],
Cell[72776, 1548, 861, 15, 220, "SideNote",ExpressionUUID->"68fe51a1-07cf-4d0b-b54b-469731aae246"],
Cell[CellGroupData[{
Cell[73662, 1567, 159, 3, 67, "Subsection",ExpressionUUID->"f27719f8-a779-4004-a0e2-03663c0f738d"],
Cell[CellGroupData[{
Cell[73846, 1574, 1619, 39, 174, "Input",ExpressionUUID->"27f7917a-2aaf-4e31-b50e-4b364dc4dcc3"],
Cell[75468, 1615, 79209, 1653, 478, "Output",ExpressionUUID->"00146c78-f73b-4524-86c1-26c74d2dec5a"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154726, 3274, 160, 3, 67, "Subsection",ExpressionUUID->"3a6c1d0a-37c7-4553-b886-e6734a0b5909"],
Cell[CellGroupData[{
Cell[154911, 3281, 1514, 37, 174, "Input",ExpressionUUID->"c21ab1e8-b4ae-47cd-ac3b-f960345e1345"],
Cell[156428, 3320, 88509, 1863, 478, "Output",ExpressionUUID->"86b0fd4a-1b27-4763-aca1-b6f811da9faa"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244986, 5189, 157, 3, 67, "Subsection",ExpressionUUID->"3ed3a338-24e0-4a6a-b584-915b3db711ed"],
Cell[CellGroupData[{
Cell[245168, 5196, 1431, 37, 174, "Input",ExpressionUUID->"859db0b7-f660-4a1c-8034-0ec291ab715c"],
Cell[246602, 5235, 97276, 2051, 478, "Output",ExpressionUUID->"f544a8ab-0e3c-4036-8945-ce08e81d2416"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343951, 7294, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"129b786d-e99e-4a94-a505-976ae229c748",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[344098, 7300, 176, 3, 95, "Section",ExpressionUUID->"3c7c5cdb-0595-4d90-9904-9789a581ada1"],
Cell[344277, 7305, 184, 3, 58, "SideNote",ExpressionUUID->"82836631-e355-4131-83ea-e807214d5671"],
Cell[CellGroupData[{
Cell[344486, 7312, 184, 3, 67, "Subsection",ExpressionUUID->"8ce3bf23-deca-4e74-bcff-3da6838be375"],
Cell[344673, 7317, 531, 12, 252, "SideNote",ExpressionUUID->"29f6d3bb-0ab1-4fe5-a707-b95f6abe1a16"],
Cell[CellGroupData[{
Cell[345229, 7333, 4317, 99, 570, "Input",ExpressionUUID->"c7e6b262-4e2b-4983-88f2-7d21c9526bcd"],
Cell[349549, 7434, 183197, 4248, 267, "Output",ExpressionUUID->"cd112fa7-b819-4668-8e48-e61466217808"]
}, Closed]],
Cell[532761, 11685, 468, 10, 120, "SideNote",ExpressionUUID->"25891f4a-a7d5-40fb-9486-5975f66e6160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533266, 11700, 179, 3, 67, "Subsection",ExpressionUUID->"d5cdaf2c-9319-492e-80d2-92eeee163aca"],
Cell[533448, 11705, 545, 12, 220, "SideNote",ExpressionUUID->"659a8e45-54d6-4cd8-99be-d125567ee3b0"],
Cell[CellGroupData[{
Cell[534018, 11721, 3122, 70, 405, "Input",ExpressionUUID->"2d0b251d-f877-4815-92c2-9e241c3dcf6f"],
Cell[537143, 11793, 4465, 114, 411, "Output",ExpressionUUID->"17297a5c-1e53-420c-aa59-3a0933900a8d"],
Cell[541611, 11909, 5679, 143, 411, "Output",ExpressionUUID->"06f79174-0ced-4538-bfda-c2ea8ad755d5"],
Cell[547293, 12054, 9286, 231, 411, "Output",ExpressionUUID->"5aa2d2c1-6256-43ec-b652-e31031a54682"]
}, Closed]],
Cell[556594, 12288, 265, 6, 55, "SideNote",ExpressionUUID->"2ea15581-744c-45aa-868e-9201135d20cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556920, 12301, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"0ce15a32-3d8e-49a9-a099-352b7a9d8779",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[557067, 12307, 221, 4, 95, "Section",ExpressionUUID->"85067ebb-ae6e-4e56-b434-e826b884284d"],
Cell[557291, 12313, 510, 10, 123, "SideNote",ExpressionUUID->"0c0a4ce2-2901-4ba1-8e13-0dbf9d7d31cb"],
Cell[CellGroupData[{
Cell[557826, 12327, 155, 3, 67, "Subsection",ExpressionUUID->"bdd6ca15-f445-4895-a8e3-532d75b035b2"],
Cell[557984, 12332, 508, 10, 91, "SideNote",ExpressionUUID->"92bb81df-3655-4a89-a109-1353ad1cf221"],
Cell[CellGroupData[{
Cell[558517, 12346, 1935, 46, 240, "Input",ExpressionUUID->"13511069-bd5d-4976-a26c-a81f395c780a"],
Cell[560455, 12394, 11162, 286, 235, "Output",ExpressionUUID->"fc281500-cf75-4f5a-963c-6eb6665040ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[571654, 12685, 1321, 30, 135, "Input",ExpressionUUID->"eb26f32c-1309-4b1f-ae84-1f411d9939c8"],
Cell[572978, 12717, 17627, 337, 227, "Output",ExpressionUUID->"32e14e71-1659-4dc4-89eb-363f705362a7"]
}, Open  ]],
Cell[590620, 13057, 577, 10, 123, "SideNote",ExpressionUUID->"c863a68c-2c59-4b43-a5ec-bdd0fd935510"],
Cell[CellGroupData[{
Cell[591222, 13071, 1125, 21, 108, "Input",ExpressionUUID->"32ffd27d-691d-4cb4-98e3-93fbcafbb089"],
Cell[592350, 13094, 148548, 3071, 470, "Output",ExpressionUUID->"3a0205fb-0990-4ff9-b298-f0fd637da1ed"]
}, Open  ]],
Cell[740913, 16168, 568, 11, 123, "SideNote",ExpressionUUID->"e5b13b0a-7f15-4a2a-be57-55ea43f8ce01"],
Cell[CellGroupData[{
Cell[741506, 16183, 1443, 35, 174, "Input",ExpressionUUID->"6e0d8d64-33cb-44a0-ba0b-c49a4fff9ba9"],
Cell[742952, 16220, 669, 11, 41, "Output",ExpressionUUID->"8af9e899-2b54-4781-9361-26dfcc9be179"],
Cell[743624, 16233, 670, 11, 41, "Output",ExpressionUUID->"2c99dd54-8f36-422d-881b-5989d2cd2974"],
Cell[744297, 16246, 668, 11, 41, "Output",ExpressionUUID->"bee771a5-5ef0-423c-becc-26da3eeb25c4"],
Cell[744968, 16259, 668, 11, 41, "Output",ExpressionUUID->"f78fa3f9-b35c-4251-adf5-5f577d7ad17b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[745673, 16275, 1564, 38, 221, "SideCode",ExpressionUUID->"b2a65772-5525-4acd-93f8-e0ec16bdff17"],
Cell[747240, 16315, 5402, 110, 209, "SideCodeOutput",ExpressionUUID->"69e2d21b-58ea-4aca-abbb-9e09510774a4"]
}, Open  ]],
Cell[752657, 16428, 206, 3, 58, "SideNote",ExpressionUUID->"702194ba-32e5-4726-b8bf-a6a74675eec3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752900, 16436, 155, 3, 67, "Subsection",ExpressionUUID->"eb1582e2-8ac4-4c27-b14e-c1b0b9090acd"],
Cell[753058, 16441, 672, 11, 155, "SideNote",ExpressionUUID->"23e8f2ba-a01f-4641-abd3-52359842712c"],
Cell[753733, 16454, 370, 7, 41, "Input",ExpressionUUID->"3865b2be-823b-4dcb-be43-a43ac3360bc4"],
Cell[CellGroupData[{
Cell[754128, 16465, 518, 10, 41, "Input",ExpressionUUID->"ad8bce8d-619a-476d-8fbb-ea28677e9af7"],
Cell[754649, 16477, 88530, 1863, 478, "Output",ExpressionUUID->"17fabbf6-25b3-4f9f-ac6e-c93f2c70f25d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843216, 18345, 1993, 46, 273, "Input",ExpressionUUID->"0df5bb68-b236-46a8-9b28-7b5dec84b6e3"],
Cell[845212, 18393, 10942, 278, 269, "Output",ExpressionUUID->"b81beba4-989b-41cb-accd-becdd1799e18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856191, 18676, 1654, 36, 174, "Input",ExpressionUUID->"62ffd7b8-83a3-45da-b1b0-99f58fd336a9"],
Cell[857848, 18714, 17555, 337, 227, "Output",ExpressionUUID->"79addebc-70ac-4f3a-b3b6-a3c310d7eb8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[875440, 19056, 1302, 25, 108, "Input",ExpressionUUID->"8b3eab3c-9a93-4acc-a8f1-99fc8b18a849"],
Cell[876745, 19083, 171541, 3543, 470, "Output",ExpressionUUID->"26aee77f-073b-4ee9-9e1e-3de7ed0a3c09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1048323, 22631, 1824, 46, 240, "Input",ExpressionUUID->"802652b8-ac5f-411f-a63f-8217db564320"],
Cell[1050150, 22679, 561, 10, 41, "Output",ExpressionUUID->"368eb119-749e-4259-892b-179fbef4545c"],
Cell[1050714, 22691, 561, 10, 41, "Output",ExpressionUUID->"c44fbdb8-3f6f-4021-aead-14994754ff67"],
Cell[1051278, 22703, 563, 10, 41, "Output",ExpressionUUID->"808a41f7-ce4a-4c48-94f5-ce9f9f9a1004"],
Cell[1051844, 22715, 561, 10, 41, "Output",ExpressionUUID->"54bde388-358f-47a2-9806-9aaca7943315"],
Cell[1052408, 22727, 563, 10, 41, "Output",ExpressionUUID->"794aba52-0eb0-4c91-b66f-ae6c1c6d225c"],
Cell[1052974, 22739, 562, 10, 41, "Output",ExpressionUUID->"34713bcb-55b8-473a-a214-f720c277ea91"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053585, 22755, 150, 3, 67, "Subsection",ExpressionUUID->"58634a43-eb9a-442c-96c7-b80bb2a70984"],
Cell[CellGroupData[{
Cell[1053760, 22762, 1793, 46, 273, "Input",ExpressionUUID->"68ef61d8-839f-4c4a-8251-ac3bf2690d0b"],
Cell[1055556, 22810, 10886, 283, 235, "Output",ExpressionUUID->"df24d040-4da6-4311-a0d3-c38b65a1ed0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1066479, 23098, 1069, 26, 141, "Input",ExpressionUUID->"24805322-c18f-4e12-8af8-10f76632f686"],
Cell[1067551, 23126, 17487, 335, 227, "Output",ExpressionUUID->"07e4b75e-b1ce-455c-866f-1347fc1c818f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085075, 23466, 821, 17, 108, "Input",ExpressionUUID->"c52d4bdd-6ebc-4a0a-adad-6b72941b1bd3"],
Cell[1085899, 23485, 154007, 3174, 474, "Output",ExpressionUUID->"f86af27e-90bd-48c2-9899-7329925d4cd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1239943, 26664, 2658, 63, 306, "Input",ExpressionUUID->"f1f8be2f-aaba-4231-be7d-57955bc02e30"],
Cell[1242604, 26729, 512, 10, 41, "Output",ExpressionUUID->"b142a81e-e31a-4953-8e32-9f8168779f8c"],
Cell[1243119, 26741, 511, 10, 41, "Output",ExpressionUUID->"054d9a31-8d3e-4bbb-8d62-db6310abe609"],
Cell[1243633, 26753, 512, 10, 41, "Output",ExpressionUUID->"794b857a-4ed0-40be-8da5-326585a423fc"],
Cell[1244148, 26765, 512, 10, 41, "Output",ExpressionUUID->"1ace2432-41fa-4f8a-ae07-99f4e1ce0b48"],
Cell[1244663, 26777, 512, 10, 41, "Output",ExpressionUUID->"306a5b81-3084-4164-8180-30d39b4f86c5"],
Cell[1245178, 26789, 510, 10, 41, "Output",ExpressionUUID->"229992cd-954b-4b5d-b7dc-2150a8fea216"],
Cell[1245691, 26801, 511, 10, 41, "Output",ExpressionUUID->"5e208569-850c-4ec7-9722-bee2234f6c22"],
Cell[1246205, 26813, 513, 10, 41, "Output",ExpressionUUID->"2377a1ee-5558-469c-ae58-a77c5e02d99e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1246791, 26831, 241, 4, 61, "SlideShowNavigationBar",ExpressionUUID->"9cc2912e-6a95-42ef-a089-3a599e12461b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1247057, 26839, 274, 4, 95, "Section",ExpressionUUID->"e17b9990-17b1-4fd7-9a08-6ab24c90966c"],
Cell[1247334, 26845, 522, 9, 123, "SideNote",ExpressionUUID->"c5a6da38-459a-48de-970f-6cc1df83ed02"],
Cell[1247859, 26856, 610, 15, 75, "Input",ExpressionUUID->"70b05fd9-6beb-48aa-8cb3-05d12a1b1fc6"],
Cell[CellGroupData[{
Cell[1248494, 26875, 41974, 856, 5421, "Input",ExpressionUUID->"99b256a7-f5fb-448c-9b83-c72584ae88ef"],
Cell[1290471, 27733, 24913, 493, 789, "Output",ExpressionUUID->"2aed398a-37b2-45c1-b408-940495eabe66"],
Cell[1315387, 28228, 2134, 34, 30, "Message",ExpressionUUID->"7b0f2e76-e320-42fb-8f83-e42b1d267832"],
Cell[1317524, 28264, 2132, 34, 30, "Message",ExpressionUUID->"47cca763-6f4d-4a49-8fe6-550ffa38fbc6"],
Cell[1319659, 28300, 2134, 34, 30, "Message",ExpressionUUID->"88cbb481-2110-46ae-aafc-d1e11bb1cebf"],
Cell[1321796, 28336, 2132, 34, 30, "Message",ExpressionUUID->"54146265-b14c-4863-aab8-aee0e3d33686"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1323989, 28377, 238, 4, 61, "SlideShowNavigationBar",ExpressionUUID->"e006a335-973a-4f77-bef4-dbabd22d7e71",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1324252, 28385, 265, 4, 95, "Section",ExpressionUUID->"96310e70-5b31-42bd-8120-372d9c1facd6"],
Cell[1324520, 28391, 389, 9, 91, "SideNote",ExpressionUUID->"f85f51f2-bfe2-402d-b850-3a75cd8f4580"],
Cell[CellGroupData[{
Cell[1324934, 28404, 345, 5, 67, "Subsection",ExpressionUUID->"511e9fed-12b0-4395-a564-2cde9db7236b"],
Cell[1325282, 28411, 1082, 19, 161, "Text",ExpressionUUID->"f94291c7-f339-4bab-91c0-5490053b183a"],
Cell[1326367, 28432, 270, 6, 91, "SideNote",ExpressionUUID->"d773b036-73da-4043-a353-1ff37139cb91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1326674, 28443, 263, 4, 37, "Subsection",ExpressionUUID->"7b2a0e7a-01dd-48cf-8223-d101ddb9dd74"],
Cell[1326940, 28449, 301, 4, 27, "Text",ExpressionUUID->"dbd3d814-98e2-45a2-98e0-d95210cff2fb"],
Cell[1327244, 28455, 522, 12, 87, "SideNote",ExpressionUUID->"55ee11a4-1cc4-42aa-9d2f-beb207790874"],
Cell[1327769, 28469, 249, 4, 32, "SideNote",ExpressionUUID->"aa85609d-8605-40c4-997a-e69576c578f0"],
Cell[CellGroupData[{
Cell[1328043, 28477, 727, 14, 42, "Input",ExpressionUUID->"82a76ccd-bc72-4c97-9807-5792f0a8977a"],
Cell[1328773, 28493, 461, 10, 16, "Message",ExpressionUUID->"325fee88-1093-4423-a681-183647eea4d6"],
Cell[1329237, 28505, 763, 17, 44, "Output",ExpressionUUID->"1e482867-cb8b-4458-9b93-720b4bf2ce70"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1330073, 28530, 122, 2, 34, "SlideShowNavigationBar",ExpressionUUID->"4f02b59f-edfd-4285-b360-ddf5a20520a3",
 CellTags->"SlideShowHeader"],
Cell[1330198, 28534, 573, 12, 138, "Subsection",ExpressionUUID->"5df9ddb5-118e-486c-913c-9b111c353523"]
}, Open  ]]
}
]
*)

